Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/server/hsdis-amd64.dylib
Decoding compiled method 0x000000010c4a6390:
Code:
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Constants]
  # {method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4a6500: mov    0x8(%rsi),%r10d
  0x000000010c4a6504: shl    $0x3,%r10
  0x000000010c4a6508: cmp    %rax,%r10
  0x000000010c4a650b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4a6511: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4a651c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4a6520: mov    %eax,-0x14000(%rsp)
  0x000000010c4a6527: push   %rbp
  0x000000010c4a6528: sub    $0x30,%rsp
  0x000000010c4a652c: movabs $0x124e86b50,%rax  ;   {metadata(method data for {method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010c4a6536: mov    0xdc(%rax),%edi
  0x000000010c4a653c: add    $0x8,%edi
  0x000000010c4a653f: mov    %edi,0xdc(%rax)
  0x000000010c4a6545: movabs $0x124cc3000,%rax  ;   {metadata({method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010c4a654f: and    $0x1ff8,%edi
  0x000000010c4a6555: cmp    $0x0,%edi
  0x000000010c4a6558: je     0x000000010c4a6691  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x000000010c4a655e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x000000010c4a6561: cmp    $0x0,%eax
  0x000000010c4a6564: movabs $0x124e86b50,%rdi  ;   {metadata(method data for {method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010c4a656e: movabs $0x108,%rbx
  0x000000010c4a6578: jne    0x000000010c4a6588
  0x000000010c4a657e: movabs $0x118,%rbx
  0x000000010c4a6588: mov    (%rdi,%rbx,1),%rdx
  0x000000010c4a658c: lea    0x1(%rdx),%rdx
  0x000000010c4a6590: mov    %rdx,(%rdi,%rbx,1)
  0x000000010c4a6594: jne    0x000000010c4a6685  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000010c4a659a: mov    0xc(%rsi),%edi
  0x000000010c4a659d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x000000010c4a65a1: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x000000010c4a66a8
  0x000000010c4a65a4: cmp    $0x0,%ebx
  0x000000010c4a65a7: movabs $0x124e86b50,%rdx  ;   {metadata(method data for {method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010c4a65b1: movabs $0x128,%rcx
  0x000000010c4a65bb: jle    0x000000010c4a65cb
  0x000000010c4a65c1: movabs $0x138,%rcx
  0x000000010c4a65cb: mov    (%rdx,%rcx,1),%r8
  0x000000010c4a65cf: lea    0x1(%r8),%r8
  0x000000010c4a65d3: mov    %r8,(%rdx,%rcx,1)
  0x000000010c4a65d7: jle    0x000000010c4a6685  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000010c4a65dd: mov    $0x0,%edx
  0x000000010c4a65e2: jmpq   0x000000010c4a664a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x000000010c4a65e7: nop
  0x000000010c4a65e8: movslq %edx,%rcx
  0x000000010c4a65eb: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010c4a65f0: mov    %rax,%r8
  0x000000010c4a65f3: shl    $0x5,%eax
  0x000000010c4a65f6: sub    %r8d,%eax
  0x000000010c4a65f9: add    %ecx,%eax
  0x000000010c4a65fb: inc    %edx
  0x000000010c4a65fd: movabs $0x124e86b50,%rcx  ;   {metadata(method data for {method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010c4a6607: mov    0xe0(%rcx),%r8d
  0x000000010c4a660e: add    $0x8,%r8d
  0x000000010c4a6612: mov    %r8d,0xe0(%rcx)
  0x000000010c4a6619: movabs $0x124cc3000,%rcx  ;   {metadata({method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010c4a6623: and    $0xfff8,%r8d
  0x000000010c4a662a: cmp    $0x0,%r8d
  0x000000010c4a662e: je     0x000000010c4a66ad  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x000000010c4a6634: test   %eax,-0x217a53a(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4a663a: movabs $0x124e86b50,%rcx  ;   {metadata(method data for {method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010c4a6644: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x000000010c4a664a: cmp    %ebx,%edx
  0x000000010c4a664c: movabs $0x124e86b50,%rcx  ;   {metadata(method data for {method} {0x0000000124cc3000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010c4a6656: movabs $0x148,%r8
  0x000000010c4a6660: jge    0x000000010c4a6670
  0x000000010c4a6666: movabs $0x158,%r8
  0x000000010c4a6670: mov    (%rcx,%r8,1),%r9
  0x000000010c4a6674: lea    0x1(%r9),%r9
  0x000000010c4a6678: mov    %r9,(%rcx,%r8,1)
  0x000000010c4a667c: jl     0x000000010c4a65e8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010c4a6682: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x000000010c4a6685: add    $0x30,%rsp
  0x000000010c4a6689: pop    %rbp
  0x000000010c4a668a: test   %eax,-0x217a590(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4a6690: retq   
  0x000000010c4a6691: mov    %rax,0x8(%rsp)
  0x000000010c4a6696: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4a669e: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x000000010c4a66a3: jmpq   0x000000010c4a655e
  0x000000010c4a66a8: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000010c4a66ad: mov    %rcx,0x8(%rsp)
  0x000000010c4a66b2: movq   $0x2d,(%rsp)
  0x000000010c4a66ba: callq  0x000000010c4a4f60  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x000000010c4a66bf: jmpq   0x000000010c4a6634
  0x000000010c4a66c4: nop
  0x000000010c4a66c5: nop
  0x000000010c4a66c6: mov    0x2a8(%r15),%rax
  0x000000010c4a66cd: movabs $0x0,%r10
  0x000000010c4a66d7: mov    %r10,0x2a8(%r15)
  0x000000010c4a66de: movabs $0x0,%r10
  0x000000010c4a66e8: mov    %r10,0x2b0(%r15)
  0x000000010c4a66ef: add    $0x30,%rsp
  0x000000010c4a66f3: pop    %rbp
  0x000000010c4a66f4: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4a66f9: hlt    
  0x000000010c4a66fa: hlt    
  0x000000010c4a66fb: hlt    
  0x000000010c4a66fc: hlt    
  0x000000010c4a66fd: hlt    
  0x000000010c4a66fe: hlt    
  0x000000010c4a66ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4a6700: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4a6705: mov    %rsp,-0x28(%rsp)
  0x000000010c4a670a: sub    $0x80,%rsp
  0x000000010c4a6711: mov    %rax,0x78(%rsp)
  0x000000010c4a6716: mov    %rcx,0x70(%rsp)
  0x000000010c4a671b: mov    %rdx,0x68(%rsp)
  0x000000010c4a6720: mov    %rbx,0x60(%rsp)
  0x000000010c4a6725: mov    %rbp,0x50(%rsp)
  0x000000010c4a672a: mov    %rsi,0x48(%rsp)
  0x000000010c4a672f: mov    %rdi,0x40(%rsp)
  0x000000010c4a6734: mov    %r8,0x38(%rsp)
  0x000000010c4a6739: mov    %r9,0x30(%rsp)
  0x000000010c4a673e: mov    %r10,0x28(%rsp)
  0x000000010c4a6743: mov    %r11,0x20(%rsp)
  0x000000010c4a6748: mov    %r12,0x18(%rsp)
  0x000000010c4a674d: mov    %r13,0x10(%rsp)
  0x000000010c4a6752: mov    %r14,0x8(%rsp)
  0x000000010c4a6757: mov    %r15,(%rsp)
  0x000000010c4a675b: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4a6765: movabs $0x10c4a6705,%rsi  ;   {internal_word}
  0x000000010c4a676f: mov    %rsp,%rdx
  0x000000010c4a6772: and    $0xfffffffffffffff0,%rsp
  0x000000010c4a6776: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4a677b: hlt    
[Deopt Handler Code]
  0x000000010c4a677c: movabs $0x10c4a677c,%r10  ;   {section_word}
  0x000000010c4a6786: push   %r10
  0x000000010c4a6788: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4a678d: hlt    
  0x000000010c4a678e: hlt    
  0x000000010c4a678f: hlt    
Decoding compiled method 0x000000010c4a8810:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc1db0} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010c4a8980: mov    0x8(%rsi),%r10d
  0x000000010c4a8984: shl    $0x3,%r10
  0x000000010c4a8988: cmp    %rax,%r10
  0x000000010c4a898b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4a8991: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4a899c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4a89a0: mov    %eax,-0x14000(%rsp)
  0x000000010c4a89a7: push   %rbp
  0x000000010c4a89a8: sub    $0x30,%rsp
  0x000000010c4a89ac: mov    %rdx,%rdi
  0x000000010c4a89af: movabs $0x124e42520,%rax  ;   {metadata(method data for {method} {0x0000000124cc1db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010c4a89b9: mov    0xdc(%rax),%edx
  0x000000010c4a89bf: add    $0x8,%edx
  0x000000010c4a89c2: mov    %edx,0xdc(%rax)
  0x000000010c4a89c8: movabs $0x124cc1db0,%rax  ;   {metadata({method} {0x0000000124cc1db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010c4a89d2: and    $0x1ff8,%edx
  0x000000010c4a89d8: cmp    $0x0,%edx
  0x000000010c4a89db: je     0x000000010c4a8ab6  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x000000010c4a89e1: cmp    $0x0,%edi
  0x000000010c4a89e4: movabs $0x124e42520,%rax  ;   {metadata(method data for {method} {0x0000000124cc1db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010c4a89ee: movabs $0x108,%rdx
  0x000000010c4a89f8: jl     0x000000010c4a8a08
  0x000000010c4a89fe: movabs $0x118,%rdx
  0x000000010c4a8a08: mov    (%rax,%rdx,1),%rbx
  0x000000010c4a8a0c: lea    0x1(%rbx),%rbx
  0x000000010c4a8a10: mov    %rbx,(%rax,%rdx,1)
  0x000000010c4a8a14: jl     0x000000010c4a8a76  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000010c4a8a1a: mov    0xc(%rsi),%eax
  0x000000010c4a8a1d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010c4a8a21: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x000000010c4a8acd
  0x000000010c4a8a24: cmp    %edx,%edi
  0x000000010c4a8a26: movabs $0x124e42520,%rdx  ;   {metadata(method data for {method} {0x0000000124cc1db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010c4a8a30: movabs $0x128,%rsi
  0x000000010c4a8a3a: jl     0x000000010c4a8a4a
  0x000000010c4a8a40: movabs $0x138,%rsi
  0x000000010c4a8a4a: mov    (%rdx,%rsi,1),%rbx
  0x000000010c4a8a4e: lea    0x1(%rbx),%rbx
  0x000000010c4a8a52: mov    %rbx,(%rdx,%rsi,1)
  0x000000010c4a8a56: jge    0x000000010c4a8a76  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010c4a8a5c: movslq %edi,%rdi
  0x000000010c4a8a5f: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x000000010c4a8a64: and    $0xffff,%eax
  0x000000010c4a8a6a: add    $0x30,%rsp
  0x000000010c4a8a6e: pop    %rbp
  0x000000010c4a8a6f: test   %eax,-0x217c975(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4a8a75: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x000000010c4a8a76: xchg   %ax,%ax
  0x000000010c4a8a78: jmpq   0x000000010c4a8ae1  ;   {no_reloc}
  0x000000010c4a8a7d: add    %al,(%rax)
  0x000000010c4a8a7f: add    %al,(%rax)
  0x000000010c4a8a81: add    %ch,%cl
  0x000000010c4a8a83: add    %al,%fs:(%rax)
  0x000000010c4a8a86: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x000000010c4a8a89: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000124cc1db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010c4a8a8c: and    %ah,0x124e4(%rip)        # 0x000000010c4baf76
  0x000000010c4a8a92: add    %al,(%rax)
  0x000000010c4a8a94: addq   $0x1,0x148(%rsi)
  0x000000010c4a8a9c: mov    %rdi,%rdx
  0x000000010c4a8a9f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)

  0x000000010c4a8aa2: mov    %rax,0x20(%rsp)
  0x000000010c4a8aa7: callq  0x000000010c3ed020  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x000000010c4a8aac: mov    0x20(%rsp),%rax
  0x000000010c4a8ab1: jmpq   0x000000010c4a8b20
  0x000000010c4a8ab6: mov    %rax,0x8(%rsp)
  0x000000010c4a8abb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4a8ac3: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x000000010c4a8ac8: jmpq   0x000000010c4a89e1
  0x000000010c4a8acd: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=338}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010c4a8ad2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4a8adc: mov    $0xa050f00,%eax
  0x000000010c4a8ae1: callq  0x000000010c4a3f60  ; OopMap{off=358}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x000000010c4a8ae6: jmp    0x000000010c4a8a78
  0x000000010c4a8ae8: nop
  0x000000010c4a8ae9: nop
  0x000000010c4a8aea: nop
  0x000000010c4a8aeb: mov    %rdx,%rdx
  0x000000010c4a8aee: callq  0x000000010c4a0ee0  ; OopMap{off=371}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x000000010c4a8af3: jmp    0x000000010c4a8a87
  0x000000010c4a8af5: nop
  0x000000010c4a8af6: nop
  0x000000010c4a8af7: mov    0x2a8(%r15),%rax
  0x000000010c4a8afe: movabs $0x0,%r10
  0x000000010c4a8b08: mov    %r10,0x2a8(%r15)
  0x000000010c4a8b0f: movabs $0x0,%r10
  0x000000010c4a8b19: mov    %r10,0x2b0(%r15)
  0x000000010c4a8b20: add    $0x30,%rsp
  0x000000010c4a8b24: pop    %rbp
  0x000000010c4a8b25: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4a8b2a: hlt    
  0x000000010c4a8b2b: hlt    
  0x000000010c4a8b2c: hlt    
  0x000000010c4a8b2d: hlt    
  0x000000010c4a8b2e: hlt    
  0x000000010c4a8b2f: hlt    
  0x000000010c4a8b30: hlt    
  0x000000010c4a8b31: hlt    
  0x000000010c4a8b32: hlt    
  0x000000010c4a8b33: hlt    
  0x000000010c4a8b34: hlt    
  0x000000010c4a8b35: hlt    
  0x000000010c4a8b36: hlt    
  0x000000010c4a8b37: hlt    
  0x000000010c4a8b38: hlt    
  0x000000010c4a8b39: hlt    
  0x000000010c4a8b3a: hlt    
  0x000000010c4a8b3b: hlt    
  0x000000010c4a8b3c: hlt    
  0x000000010c4a8b3d: hlt    
  0x000000010c4a8b3e: hlt    
  0x000000010c4a8b3f: hlt    
[Stub Code]
  0x000000010c4a8b40: nop                       ;   {no_reloc}
  0x000000010c4a8b41: nop
  0x000000010c4a8b42: nop
  0x000000010c4a8b43: nop
  0x000000010c4a8b44: nop
  0x000000010c4a8b45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4a8b4f: jmpq   0x000000010c4a8b4f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4a8b54: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4a8b59: mov    %rsp,-0x28(%rsp)
  0x000000010c4a8b5e: sub    $0x80,%rsp
  0x000000010c4a8b65: mov    %rax,0x78(%rsp)
  0x000000010c4a8b6a: mov    %rcx,0x70(%rsp)
  0x000000010c4a8b6f: mov    %rdx,0x68(%rsp)
  0x000000010c4a8b74: mov    %rbx,0x60(%rsp)
  0x000000010c4a8b79: mov    %rbp,0x50(%rsp)
  0x000000010c4a8b7e: mov    %rsi,0x48(%rsp)
  0x000000010c4a8b83: mov    %rdi,0x40(%rsp)
  0x000000010c4a8b88: mov    %r8,0x38(%rsp)
  0x000000010c4a8b8d: mov    %r9,0x30(%rsp)
  0x000000010c4a8b92: mov    %r10,0x28(%rsp)
  0x000000010c4a8b97: mov    %r11,0x20(%rsp)
  0x000000010c4a8b9c: mov    %r12,0x18(%rsp)
  0x000000010c4a8ba1: mov    %r13,0x10(%rsp)
  0x000000010c4a8ba6: mov    %r14,0x8(%rsp)
  0x000000010c4a8bab: mov    %r15,(%rsp)
  0x000000010c4a8baf: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4a8bb9: movabs $0x10c4a8b59,%rsi  ;   {internal_word}
  0x000000010c4a8bc3: mov    %rsp,%rdx
  0x000000010c4a8bc6: and    $0xfffffffffffffff0,%rsp
  0x000000010c4a8bca: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4a8bcf: hlt    
[Deopt Handler Code]
  0x000000010c4a8bd0: movabs $0x10c4a8bd0,%r10  ;   {section_word}
  0x000000010c4a8bda: push   %r10
  0x000000010c4a8bdc: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4a8be1: hlt    
  0x000000010c4a8be2: hlt    
  0x000000010c4a8be3: hlt    
  0x000000010c4a8be4: hlt    
  0x000000010c4a8be5: hlt    
  0x000000010c4a8be6: hlt    
  0x000000010c4a8be7: hlt    
Decoding compiled method 0x000000010c4a5c10:
Code:
[Entry Point]
  # {method} {0x0000000124cd7930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000000010c4a5d80: mov    0x8(%rsi),%r10d
  0x000000010c4a5d84: shl    $0x3,%r10
  0x000000010c4a5d88: cmp    %r10,%rax
  0x000000010c4a5d8b: je     0x000000010c4a5d98
  0x000000010c4a5d91: jmpq   0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4a5d96: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010c4a5d98: mov    %eax,-0x14000(%rsp)
  0x000000010c4a5d9f: push   %rbp
  0x000000010c4a5da0: mov    %rsp,%rbp
  0x000000010c4a5da3: sub    $0x50,%rsp
  0x000000010c4a5da7: mov    %r9,(%rsp)
  0x000000010c4a5dab: mov    %r8,%r9
  0x000000010c4a5dae: mov    %rcx,0x18(%rsp)
  0x000000010c4a5db3: cmp    $0x0,%rcx
  0x000000010c4a5db7: lea    0x18(%rsp),%r8
  0x000000010c4a5dbc: cmove  0x18(%rsp),%r8
  0x000000010c4a5dc2: mov    %rdx,%rcx
  0x000000010c4a5dc5: mov    %rsi,0x8(%rsp)
  0x000000010c4a5dca: cmp    $0x0,%rsi
  0x000000010c4a5dce: lea    0x8(%rsp),%rdx
  0x000000010c4a5dd3: cmove  0x8(%rsp),%rdx
  0x000000010c4a5dd9: movabs $0x76ab00c78,%r14  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010c4a5de3: mov    %r14,0x38(%rsp)
  0x000000010c4a5de8: lea    0x38(%rsp),%r14
  0x000000010c4a5ded: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x000000010c4a5df0: movabs $0x10c4a5df0,%r10  ;   {section_word}
  0x000000010c4a5dfa: mov    %r10,0x1e0(%r15)
  0x000000010c4a5e01: mov    %rsp,0x1d8(%r15)
  0x000000010c4a5e08: cmpb   $0x0,-0x7bc2b5(%rip)        # 0x000000010bce9b5a
                                                ;   {external_word}
  0x000000010c4a5e0f: je     0x000000010c4a5e53
  0x000000010c4a5e15: push   %rsi
  0x000000010c4a5e16: push   %rdx
  0x000000010c4a5e17: push   %rcx
  0x000000010c4a5e18: push   %r8
  0x000000010c4a5e1a: push   %r9
  0x000000010c4a5e1c: movabs $0x124cd7930,%rsi  ;   {metadata({method} {0x0000000124cd7930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000000010c4a5e26: mov    %r15,%rdi
  0x000000010c4a5e29: test   $0xf,%esp
  0x000000010c4a5e2f: je     0x000000010c4a5e47
  0x000000010c4a5e35: sub    $0x8,%rsp
  0x000000010c4a5e39: callq  0x000000010b8e8c20  ;   {runtime_call}
  0x000000010c4a5e3e: add    $0x8,%rsp
  0x000000010c4a5e42: jmpq   0x000000010c4a5e4c
  0x000000010c4a5e47: callq  0x000000010b8e8c20  ;   {runtime_call}
  0x000000010c4a5e4c: pop    %r9
  0x000000010c4a5e4e: pop    %r8
  0x000000010c4a5e50: pop    %rcx
  0x000000010c4a5e51: pop    %rdx
  0x000000010c4a5e52: pop    %rsi
  0x000000010c4a5e53: lea    0x1f8(%r15),%rdi
  0x000000010c4a5e5a: movl   $0x4,0x270(%r15)
  0x000000010c4a5e65: callq  0x000000010b744744  ;   {runtime_call}
  0x000000010c4a5e6a: vzeroupper 
  0x000000010c4a5e6d: movl   $0x5,0x270(%r15)
  0x000000010c4a5e78: lock addl $0x0,(%rsp)
  0x000000010c4a5e7d: cmpl   $0x0,-0x7b1987(%rip)        # 0x000000010bcf4500
                                                ;   {external_word}
  0x000000010c4a5e87: jne    0x000000010c4a5e9b
  0x000000010c4a5e8d: cmpl   $0x0,0x30(%r15)
  0x000000010c4a5e95: je     0x000000010c4a5eb4
  0x000000010c4a5e9b: mov    %r15,%rdi
  0x000000010c4a5e9e: mov    %rsp,%r12
  0x000000010c4a5ea1: sub    $0x0,%rsp
  0x000000010c4a5ea5: and    $0xfffffffffffffff0,%rsp
  0x000000010c4a5ea9: callq  0x000000010b96b364  ;   {runtime_call}
  0x000000010c4a5eae: mov    %r12,%rsp
  0x000000010c4a5eb1: xor    %r12,%r12
  0x000000010c4a5eb4: movl   $0x8,0x270(%r15)
  0x000000010c4a5ebf: cmpl   $0x1,0x29c(%r15)
  0x000000010c4a5eca: je     0x000000010c4a5f52
  0x000000010c4a5ed0: cmpb   $0x0,-0x7bc37d(%rip)        # 0x000000010bce9b5a
                                                ;   {external_word}
  0x000000010c4a5ed7: je     0x000000010c4a5f0d
  0x000000010c4a5edd: movabs $0x124cd7930,%rsi  ;   {metadata({method} {0x0000000124cd7930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000000010c4a5ee7: mov    %r15,%rdi
  0x000000010c4a5eea: test   $0xf,%esp
  0x000000010c4a5ef0: je     0x000000010c4a5f08
  0x000000010c4a5ef6: sub    $0x8,%rsp
  0x000000010c4a5efa: callq  0x000000010b8e8b92  ;   {runtime_call}
  0x000000010c4a5eff: add    $0x8,%rsp
  0x000000010c4a5f03: jmpq   0x000000010c4a5f0d
  0x000000010c4a5f08: callq  0x000000010b8e8b92  ;   {runtime_call}
  0x000000010c4a5f0d: movabs $0x0,%r10
  0x000000010c4a5f17: mov    %r10,0x1d8(%r15)
  0x000000010c4a5f1e: movabs $0x0,%r10
  0x000000010c4a5f28: mov    %r10,0x1e0(%r15)
  0x000000010c4a5f2f: mov    0x38(%r15),%rcx
  0x000000010c4a5f33: movl   $0x0,0x100(%rcx)
  0x000000010c4a5f3d: leaveq 
  0x000000010c4a5f3e: cmpq   $0x0,0x8(%r15)
  0x000000010c4a5f46: jne    0x000000010c4a5f4d
  0x000000010c4a5f4c: retq   
  0x000000010c4a5f4d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010c4a5f52: mov    %rsp,%r12
  0x000000010c4a5f55: sub    $0x0,%rsp
  0x000000010c4a5f59: and    $0xfffffffffffffff0,%rsp
  0x000000010c4a5f5d: callq  0x000000010b8e69f8  ;   {runtime_call}
  0x000000010c4a5f62: mov    %r12,%rsp
  0x000000010c4a5f65: xor    %r12,%r12
  0x000000010c4a5f68: jmpq   0x000000010c4a5ed0
  0x000000010c4a5f6d: hlt    
  0x000000010c4a5f6e: hlt    
  0x000000010c4a5f6f: hlt    
Decoding compiled method 0x000000010c4a8450:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc1c60} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4a85c0: mov    0x8(%rsi),%r10d
  0x000000010c4a85c4: shl    $0x3,%r10
  0x000000010c4a85c8: cmp    %rax,%r10
  0x000000010c4a85cb: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4a85d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4a85dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4a85e0: mov    %eax,-0x14000(%rsp)
  0x000000010c4a85e7: push   %rbp
  0x000000010c4a85e8: sub    $0x30,%rsp
  0x000000010c4a85ec: movabs $0x124eab648,%rax  ;   {metadata(method data for {method} {0x0000000124cc1c60} 'length' '()I' in 'java/lang/String')}
  0x000000010c4a85f6: mov    0xdc(%rax),%edi
  0x000000010c4a85fc: add    $0x8,%edi
  0x000000010c4a85ff: mov    %edi,0xdc(%rax)
  0x000000010c4a8605: movabs $0x124cc1c60,%rax  ;   {metadata({method} {0x0000000124cc1c60} 'length' '()I' in 'java/lang/String')}
  0x000000010c4a860f: and    $0x1ff8,%edi
  0x000000010c4a8615: cmp    $0x0,%edi
  0x000000010c4a8618: je     0x000000010c4a8634  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x000000010c4a861e: mov    0xc(%rsi),%eax
  0x000000010c4a8621: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000010c4a8625: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x000000010c4a8648
  0x000000010c4a8628: add    $0x30,%rsp
  0x000000010c4a862c: pop    %rbp
  0x000000010c4a862d: test   %eax,-0x217c533(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4a8633: retq   
  0x000000010c4a8634: mov    %rax,0x8(%rsp)
  0x000000010c4a8639: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4a8641: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x000000010c4a8646: jmp    0x000000010c4a861e
  0x000000010c4a8648: callq  0x000000010c4a0a40  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010c4a864d: nop
  0x000000010c4a864e: nop
  0x000000010c4a864f: mov    0x2a8(%r15),%rax
  0x000000010c4a8656: movabs $0x0,%r10
  0x000000010c4a8660: mov    %r10,0x2a8(%r15)
  0x000000010c4a8667: movabs $0x0,%r10
  0x000000010c4a8671: mov    %r10,0x2b0(%r15)
  0x000000010c4a8678: add    $0x30,%rsp
  0x000000010c4a867c: pop    %rbp
  0x000000010c4a867d: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4a8682: hlt    
  0x000000010c4a8683: hlt    
  0x000000010c4a8684: hlt    
  0x000000010c4a8685: hlt    
  0x000000010c4a8686: hlt    
  0x000000010c4a8687: hlt    
  0x000000010c4a8688: hlt    
  0x000000010c4a8689: hlt    
  0x000000010c4a868a: hlt    
  0x000000010c4a868b: hlt    
  0x000000010c4a868c: hlt    
  0x000000010c4a868d: hlt    
  0x000000010c4a868e: hlt    
  0x000000010c4a868f: hlt    
  0x000000010c4a8690: hlt    
  0x000000010c4a8691: hlt    
  0x000000010c4a8692: hlt    
  0x000000010c4a8693: hlt    
  0x000000010c4a8694: hlt    
  0x000000010c4a8695: hlt    
  0x000000010c4a8696: hlt    
  0x000000010c4a8697: hlt    
  0x000000010c4a8698: hlt    
  0x000000010c4a8699: hlt    
  0x000000010c4a869a: hlt    
  0x000000010c4a869b: hlt    
  0x000000010c4a869c: hlt    
  0x000000010c4a869d: hlt    
  0x000000010c4a869e: hlt    
  0x000000010c4a869f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4a86a0: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4a86a5: mov    %rsp,-0x28(%rsp)
  0x000000010c4a86aa: sub    $0x80,%rsp
  0x000000010c4a86b1: mov    %rax,0x78(%rsp)
  0x000000010c4a86b6: mov    %rcx,0x70(%rsp)
  0x000000010c4a86bb: mov    %rdx,0x68(%rsp)
  0x000000010c4a86c0: mov    %rbx,0x60(%rsp)
  0x000000010c4a86c5: mov    %rbp,0x50(%rsp)
  0x000000010c4a86ca: mov    %rsi,0x48(%rsp)
  0x000000010c4a86cf: mov    %rdi,0x40(%rsp)
  0x000000010c4a86d4: mov    %r8,0x38(%rsp)
  0x000000010c4a86d9: mov    %r9,0x30(%rsp)
  0x000000010c4a86de: mov    %r10,0x28(%rsp)
  0x000000010c4a86e3: mov    %r11,0x20(%rsp)
  0x000000010c4a86e8: mov    %r12,0x18(%rsp)
  0x000000010c4a86ed: mov    %r13,0x10(%rsp)
  0x000000010c4a86f2: mov    %r14,0x8(%rsp)
  0x000000010c4a86f7: mov    %r15,(%rsp)
  0x000000010c4a86fb: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4a8705: movabs $0x10c4a86a5,%rsi  ;   {internal_word}
  0x000000010c4a870f: mov    %rsp,%rdx
  0x000000010c4a8712: and    $0xfffffffffffffff0,%rsp
  0x000000010c4a8716: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4a871b: hlt    
[Deopt Handler Code]
  0x000000010c4a871c: movabs $0x10c4a871c,%r10  ;   {section_word}
  0x000000010c4a8726: push   %r10
  0x000000010c4a8728: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4a872d: hlt    
  0x000000010c4a872e: hlt    
  0x000000010c4a872f: hlt    
Decoding compiled method 0x000000010c4a9e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4a9fa0: mov    0x8(%rsi),%r10d
  0x000000010c4a9fa4: shl    $0x3,%r10
  0x000000010c4a9fa8: cmp    %rax,%r10
  0x000000010c4a9fab: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4a9fb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4a9fbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4a9fc0: mov    %eax,-0x14000(%rsp)
  0x000000010c4a9fc7: push   %rbp
  0x000000010c4a9fc8: sub    $0x30,%rsp
  0x000000010c4a9fcc: movabs $0x124eb0640,%rax  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4a9fd6: mov    0xdc(%rax),%edi
  0x000000010c4a9fdc: add    $0x8,%edi
  0x000000010c4a9fdf: mov    %edi,0xdc(%rax)
  0x000000010c4a9fe5: movabs $0x124cc2618,%rax  ;   {metadata({method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4a9fef: and    $0x1ff8,%edi
  0x000000010c4a9ff5: cmp    $0x0,%edi
  0x000000010c4a9ff8: je     0x000000010c4aa3c6  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x000000010c4a9ffe: cmp    %rdx,%rsi
  0x000000010c4aa001: movabs $0x124eb0640,%rax  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa00b: movabs $0x108,%rdi
  0x000000010c4aa015: jne    0x000000010c4aa025
  0x000000010c4aa01b: movabs $0x118,%rdi
  0x000000010c4aa025: mov    (%rax,%rdi,1),%rbx
  0x000000010c4aa029: lea    0x1(%rbx),%rbx
  0x000000010c4aa02d: mov    %rbx,(%rax,%rdi,1)
  0x000000010c4aa031: je     0x000000010c4aa3b5  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000010c4aa037: cmp    $0x0,%rdx
  0x000000010c4aa03b: jne    0x000000010c4aa056
  0x000000010c4aa03d: movabs $0x124eb0640,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa047: orl    $0x100,0x120(%rbx)
  0x000000010c4aa051: jmpq   0x000000010c4aa116
  0x000000010c4aa056: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x000000010c4aa060: mov    0x8(%rdx),%edi
  0x000000010c4aa063: shl    $0x3,%rdi
  0x000000010c4aa067: cmp    %rdi,%rcx
  0x000000010c4aa06a: jne    0x000000010c4aa0fa
  0x000000010c4aa070: movabs $0x124eb0640,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa07a: mov    0x8(%rdx),%ecx
  0x000000010c4aa07d: shl    $0x3,%rcx
  0x000000010c4aa081: cmp    0x130(%rbx),%rcx
  0x000000010c4aa088: jne    0x000000010c4aa097
  0x000000010c4aa08a: addq   $0x1,0x138(%rbx)
  0x000000010c4aa092: jmpq   0x000000010c4aa11b
  0x000000010c4aa097: cmp    0x140(%rbx),%rcx
  0x000000010c4aa09e: jne    0x000000010c4aa0ad
  0x000000010c4aa0a0: addq   $0x1,0x148(%rbx)
  0x000000010c4aa0a8: jmpq   0x000000010c4aa11b
  0x000000010c4aa0ad: cmpq   $0x0,0x130(%rbx)
  0x000000010c4aa0b8: jne    0x000000010c4aa0d1
  0x000000010c4aa0ba: mov    %rcx,0x130(%rbx)
  0x000000010c4aa0c1: movq   $0x1,0x138(%rbx)
  0x000000010c4aa0cc: jmpq   0x000000010c4aa11b
  0x000000010c4aa0d1: cmpq   $0x0,0x140(%rbx)
  0x000000010c4aa0dc: jne    0x000000010c4aa0f5
  0x000000010c4aa0de: mov    %rcx,0x140(%rbx)
  0x000000010c4aa0e5: movq   $0x1,0x148(%rbx)
  0x000000010c4aa0f0: jmpq   0x000000010c4aa11b
  0x000000010c4aa0f5: jmpq   0x000000010c4aa11b
  0x000000010c4aa0fa: movabs $0x124eb0640,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa104: subq   $0x1,0x128(%rbx)
  0x000000010c4aa10c: jmpq   0x000000010c4aa116
  0x000000010c4aa111: jmpq   0x000000010c4aa11b
  0x000000010c4aa116: xor    %rax,%rax
  0x000000010c4aa119: jmp    0x000000010c4aa125
  0x000000010c4aa11b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010c4aa125: cmp    $0x0,%eax
  0x000000010c4aa128: movabs $0x124eb0640,%rax  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa132: movabs $0x158,%rdi
  0x000000010c4aa13c: je     0x000000010c4aa14c
  0x000000010c4aa142: movabs $0x168,%rdi
  0x000000010c4aa14c: mov    (%rax,%rdi,1),%rbx
  0x000000010c4aa150: lea    0x1(%rbx),%rbx
  0x000000010c4aa154: mov    %rbx,(%rax,%rdi,1)
  0x000000010c4aa158: je     0x000000010c4aa3a4  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x000000010c4aa15e: cmp    $0x0,%rdx
  0x000000010c4aa162: jne    0x000000010c4aa17d
  0x000000010c4aa164: movabs $0x124eb0640,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa16e: orl    $0x100,0x170(%rbx)
  0x000000010c4aa178: jmpq   0x000000010c4aa23d
  0x000000010c4aa17d: movabs $0x7c00016d0,%rax  ;   {metadata('java/lang/String')}
  0x000000010c4aa187: mov    0x8(%rdx),%edi
  0x000000010c4aa18a: shl    $0x3,%rdi
  0x000000010c4aa18e: cmp    %rdi,%rax
  0x000000010c4aa191: jne    0x000000010c4aa221
  0x000000010c4aa197: movabs $0x124eb0640,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa1a1: mov    0x8(%rdx),%eax
  0x000000010c4aa1a4: shl    $0x3,%rax
  0x000000010c4aa1a8: cmp    0x180(%rbx),%rax
  0x000000010c4aa1af: jne    0x000000010c4aa1be
  0x000000010c4aa1b1: addq   $0x1,0x188(%rbx)
  0x000000010c4aa1b9: jmpq   0x000000010c4aa23d
  0x000000010c4aa1be: cmp    0x190(%rbx),%rax
  0x000000010c4aa1c5: jne    0x000000010c4aa1d4
  0x000000010c4aa1c7: addq   $0x1,0x198(%rbx)
  0x000000010c4aa1cf: jmpq   0x000000010c4aa23d
  0x000000010c4aa1d4: cmpq   $0x0,0x180(%rbx)
  0x000000010c4aa1df: jne    0x000000010c4aa1f8
  0x000000010c4aa1e1: mov    %rax,0x180(%rbx)
  0x000000010c4aa1e8: movq   $0x1,0x188(%rbx)
  0x000000010c4aa1f3: jmpq   0x000000010c4aa23d
  0x000000010c4aa1f8: cmpq   $0x0,0x190(%rbx)
  0x000000010c4aa203: jne    0x000000010c4aa21c
  0x000000010c4aa205: mov    %rax,0x190(%rbx)
  0x000000010c4aa20c: movq   $0x1,0x198(%rbx)
  0x000000010c4aa217: jmpq   0x000000010c4aa23d
  0x000000010c4aa21c: jmpq   0x000000010c4aa23d
  0x000000010c4aa221: movabs $0x124eb0640,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa22b: subq   $0x1,0x178(%rbx)
  0x000000010c4aa233: jmpq   0x000000010c4aa3dd
  0x000000010c4aa238: jmpq   0x000000010c4aa23d
  0x000000010c4aa23d: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x000000010c4aa240: mov    0xc(%rsi),%esi
  0x000000010c4aa243: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010c4aa247: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x000000010c4aa3e6
  0x000000010c4aa24a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000010c4aa3eb
  0x000000010c4aa24d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010c4aa251: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010c4aa3f0
  0x000000010c4aa254: cmp    %ebx,%edi
  0x000000010c4aa256: movabs $0x124eb0640,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa260: movabs $0x1a8,%rdx
  0x000000010c4aa26a: jne    0x000000010c4aa27a
  0x000000010c4aa270: movabs $0x1b8,%rdx
  0x000000010c4aa27a: mov    (%rbx,%rdx,1),%rcx
  0x000000010c4aa27e: lea    0x1(%rcx),%rcx
  0x000000010c4aa282: mov    %rcx,(%rbx,%rdx,1)
  0x000000010c4aa286: jne    0x000000010c4aa3a4  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000010c4aa28c: mov    $0x0,%ebx
  0x000000010c4aa291: jmpq   0x000000010c4aa33f  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x000000010c4aa296: xchg   %ax,%ax
  0x000000010c4aa298: movslq %ebx,%rdi
  0x000000010c4aa29b: cmp    0xc(%rsi),%ebx
  0x000000010c4aa29e: jae    0x000000010c4aa3f5
  0x000000010c4aa2a4: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010c4aa2a9: movslq %ebx,%rcx
  0x000000010c4aa2ac: cmp    0xc(%rax),%ebx
  0x000000010c4aa2af: jae    0x000000010c4aa3fe
  0x000000010c4aa2b5: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010c4aa2ba: cmp    %ecx,%edi
  0x000000010c4aa2bc: movabs $0x124eb0640,%rdi  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa2c6: movabs $0x1e8,%rcx
  0x000000010c4aa2d0: je     0x000000010c4aa2e0
  0x000000010c4aa2d6: movabs $0x1f8,%rcx
  0x000000010c4aa2e0: mov    (%rdi,%rcx,1),%r8
  0x000000010c4aa2e4: lea    0x1(%r8),%r8
  0x000000010c4aa2e8: mov    %r8,(%rdi,%rcx,1)
  0x000000010c4aa2ec: jne    0x000000010c4aa382  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010c4aa2f2: inc    %ebx
  0x000000010c4aa2f4: movabs $0x124eb0640,%rdi  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa2fe: mov    0xe0(%rdi),%ecx
  0x000000010c4aa304: add    $0x8,%ecx
  0x000000010c4aa307: mov    %ecx,0xe0(%rdi)
  0x000000010c4aa30d: movabs $0x124cc2618,%rdi  ;   {metadata({method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa317: and    $0xfff8,%ecx
  0x000000010c4aa31d: cmp    $0x0,%ecx
  0x000000010c4aa320: je     0x000000010c4aa407  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010c4aa326: test   %eax,-0x217e22c(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4aa32c: movabs $0x124eb0640,%rdi  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa336: incl   0x208(%rdi)
  0x000000010c4aa33c: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010c4aa33f: mov    %rdi,%rdx
  0x000000010c4aa342: dec    %edx
  0x000000010c4aa344: cmp    $0x0,%edi
  0x000000010c4aa347: movabs $0x124eb0640,%rdi  ;   {metadata(method data for {method} {0x0000000124cc2618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010c4aa351: movabs $0x1c8,%rcx
  0x000000010c4aa35b: je     0x000000010c4aa36b
  0x000000010c4aa361: movabs $0x1d8,%rcx
  0x000000010c4aa36b: mov    (%rdi,%rcx,1),%r8
  0x000000010c4aa36f: lea    0x1(%r8),%r8
  0x000000010c4aa373: mov    %r8,(%rdi,%rcx,1)
  0x000000010c4aa377: je     0x000000010c4aa393
  0x000000010c4aa37d: jmpq   0x000000010c4aa298  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010c4aa382: mov    $0x0,%eax
  0x000000010c4aa387: add    $0x30,%rsp
  0x000000010c4aa38b: pop    %rbp
  0x000000010c4aa38c: test   %eax,-0x217e292(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4aa392: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x000000010c4aa393: mov    $0x1,%eax
  0x000000010c4aa398: add    $0x30,%rsp
  0x000000010c4aa39c: pop    %rbp
  0x000000010c4aa39d: test   %eax,-0x217e2a3(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4aa3a3: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x000000010c4aa3a4: mov    $0x0,%eax
  0x000000010c4aa3a9: add    $0x30,%rsp
  0x000000010c4aa3ad: pop    %rbp
  0x000000010c4aa3ae: test   %eax,-0x217e2b4(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4aa3b4: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x000000010c4aa3b5: mov    $0x1,%eax
  0x000000010c4aa3ba: add    $0x30,%rsp
  0x000000010c4aa3be: pop    %rbp
  0x000000010c4aa3bf: test   %eax,-0x217e2c5(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4aa3c5: retq   
  0x000000010c4aa3c6: mov    %rax,0x8(%rsp)
  0x000000010c4aa3cb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4aa3d3: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000010c4aa3d8: jmpq   0x000000010c4a9ffe
  0x000000010c4aa3dd: mov    %rdx,(%rsp)
  0x000000010c4aa3e1: callq  0x000000010c4a2c40  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x000000010c4aa3e6: callq  0x000000010c4a0a40  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010c4aa3eb: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x000000010c4aa3f0: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010c4aa3f5: mov    %rbx,(%rsp)
  0x000000010c4aa3f9: callq  0x000000010c413000  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010c4aa3fe: mov    %rbx,(%rsp)
  0x000000010c4aa402: callq  0x000000010c413000  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010c4aa407: mov    %rdi,0x8(%rsp)
  0x000000010c4aa40c: movq   $0x4a,(%rsp)
  0x000000010c4aa414: callq  0x000000010c4a4f60  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000010c4aa419: jmpq   0x000000010c4aa326
  0x000000010c4aa41e: nop
  0x000000010c4aa41f: nop
  0x000000010c4aa420: mov    0x2a8(%r15),%rax
  0x000000010c4aa427: movabs $0x0,%r10
  0x000000010c4aa431: mov    %r10,0x2a8(%r15)
  0x000000010c4aa438: movabs $0x0,%r10
  0x000000010c4aa442: mov    %r10,0x2b0(%r15)
  0x000000010c4aa449: add    $0x30,%rsp
  0x000000010c4aa44d: pop    %rbp
  0x000000010c4aa44e: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4aa453: hlt    
  0x000000010c4aa454: hlt    
  0x000000010c4aa455: hlt    
  0x000000010c4aa456: hlt    
  0x000000010c4aa457: hlt    
  0x000000010c4aa458: hlt    
  0x000000010c4aa459: hlt    
  0x000000010c4aa45a: hlt    
  0x000000010c4aa45b: hlt    
  0x000000010c4aa45c: hlt    
  0x000000010c4aa45d: hlt    
  0x000000010c4aa45e: hlt    
  0x000000010c4aa45f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4aa460: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4aa465: mov    %rsp,-0x28(%rsp)
  0x000000010c4aa46a: sub    $0x80,%rsp
  0x000000010c4aa471: mov    %rax,0x78(%rsp)
  0x000000010c4aa476: mov    %rcx,0x70(%rsp)
  0x000000010c4aa47b: mov    %rdx,0x68(%rsp)
  0x000000010c4aa480: mov    %rbx,0x60(%rsp)
  0x000000010c4aa485: mov    %rbp,0x50(%rsp)
  0x000000010c4aa48a: mov    %rsi,0x48(%rsp)
  0x000000010c4aa48f: mov    %rdi,0x40(%rsp)
  0x000000010c4aa494: mov    %r8,0x38(%rsp)
  0x000000010c4aa499: mov    %r9,0x30(%rsp)
  0x000000010c4aa49e: mov    %r10,0x28(%rsp)
  0x000000010c4aa4a3: mov    %r11,0x20(%rsp)
  0x000000010c4aa4a8: mov    %r12,0x18(%rsp)
  0x000000010c4aa4ad: mov    %r13,0x10(%rsp)
  0x000000010c4aa4b2: mov    %r14,0x8(%rsp)
  0x000000010c4aa4b7: mov    %r15,(%rsp)
  0x000000010c4aa4bb: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4aa4c5: movabs $0x10c4aa465,%rsi  ;   {internal_word}
  0x000000010c4aa4cf: mov    %rsp,%rdx
  0x000000010c4aa4d2: and    $0xfffffffffffffff0,%rsp
  0x000000010c4aa4d6: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4aa4db: hlt    
[Deopt Handler Code]
  0x000000010c4aa4dc: movabs $0x10c4aa4dc,%r10  ;   {section_word}
  0x000000010c4aa4e6: push   %r10
  0x000000010c4aa4e8: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4aa4ed: hlt    
  0x000000010c4aa4ee: hlt    
  0x000000010c4aa4ef: hlt    
Decoding compiled method 0x000000010c4a7890:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010c4a7a20: mov    0x8(%rsi),%r10d
  0x000000010c4a7a24: shl    $0x3,%r10
  0x000000010c4a7a28: cmp    %rax,%r10
  0x000000010c4a7a2b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4a7a31: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4a7a3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4a7a40: mov    %eax,-0x14000(%rsp)
  0x000000010c4a7a47: push   %rbp
  0x000000010c4a7a48: sub    $0x30,%rsp
  0x000000010c4a7a4c: movabs $0x124eb1a30,%rax  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7a56: mov    0xdc(%rax),%edi
  0x000000010c4a7a5c: add    $0x8,%edi
  0x000000010c4a7a5f: mov    %edi,0xdc(%rax)
  0x000000010c4a7a65: movabs $0x124cc3180,%rax  ;   {metadata({method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7a6f: and    $0x1ff8,%edi
  0x000000010c4a7a75: cmp    $0x0,%edi
  0x000000010c4a7a78: je     0x000000010c4a7c81  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x000000010c4a7a7e: mov    0xc(%rsi),%eax
  0x000000010c4a7a81: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000010c4a7a85: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000010c4a7c98
  0x000000010c4a7a88: cmp    $0x0,%ecx
  0x000000010c4a7a8b: movabs $0x124eb1a30,%rbx  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7a95: movabs $0x108,%r8
  0x000000010c4a7a9f: jge    0x000000010c4a7aaf
  0x000000010c4a7aa5: movabs $0x118,%r8
  0x000000010c4a7aaf: mov    (%rbx,%r8,1),%r9
  0x000000010c4a7ab3: lea    0x1(%r9),%r9
  0x000000010c4a7ab7: mov    %r9,(%rbx,%r8,1)
  0x000000010c4a7abb: jge    0x000000010c4a7adb  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010c4a7ac1: movabs $0x124eb1a30,%rcx  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7acb: incl   0x128(%rcx)
  0x000000010c4a7ad1: mov    $0x0,%ecx
  0x000000010c4a7ad6: jmpq   0x000000010c4a7b13  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x000000010c4a7adb: cmp    %edi,%ecx
  0x000000010c4a7add: movabs $0x124eb1a30,%rbx  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7ae7: movabs $0x140,%r8
  0x000000010c4a7af1: jl     0x000000010c4a7b01
  0x000000010c4a7af7: movabs $0x150,%r8
  0x000000010c4a7b01: mov    (%rbx,%r8,1),%r9
  0x000000010c4a7b05: lea    0x1(%r9),%r9
  0x000000010c4a7b09: mov    %r9,(%rbx,%r8,1)
  0x000000010c4a7b0d: jge    0x000000010c4a7c70  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000010c4a7b13: cmp    $0x10000,%edx
  0x000000010c4a7b19: movabs $0x124eb1a30,%rbx  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7b23: movabs $0x160,%r8
  0x000000010c4a7b2d: jge    0x000000010c4a7b3d
  0x000000010c4a7b33: movabs $0x170,%r8
  0x000000010c4a7b3d: mov    (%rbx,%r8,1),%r9
  0x000000010c4a7b41: lea    0x1(%r9),%r9
  0x000000010c4a7b45: mov    %r9,(%rbx,%r8,1)
  0x000000010c4a7b49: jge    0x000000010c4a7c48
  0x000000010c4a7b4f: jmpq   0x000000010c4a7beb  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000010c4a7b54: nopl   0x0(%rax)
  0x000000010c4a7b58: movslq %ecx,%rsi
  0x000000010c4a7b5b: cmp    0xc(%rax),%ecx
  0x000000010c4a7b5e: jae    0x000000010c4a7c9d
  0x000000010c4a7b64: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010c4a7b69: cmp    %edx,%esi
  0x000000010c4a7b6b: movabs $0x124eb1a30,%rsi  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7b75: movabs $0x1a0,%rbx
  0x000000010c4a7b7f: jne    0x000000010c4a7b8f
  0x000000010c4a7b85: movabs $0x1b0,%rbx
  0x000000010c4a7b8f: mov    (%rsi,%rbx,1),%r8
  0x000000010c4a7b93: lea    0x1(%r8),%r8
  0x000000010c4a7b97: mov    %r8,(%rsi,%rbx,1)
  0x000000010c4a7b9b: je     0x000000010c4a7c28  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010c4a7ba1: inc    %ecx
  0x000000010c4a7ba3: movabs $0x124eb1a30,%rsi  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7bad: mov    0xe0(%rsi),%ebx
  0x000000010c4a7bb3: add    $0x8,%ebx
  0x000000010c4a7bb6: mov    %ebx,0xe0(%rsi)
  0x000000010c4a7bbc: movabs $0x124cc3180,%rsi  ;   {metadata({method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7bc6: and    $0xfff8,%ebx
  0x000000010c4a7bcc: cmp    $0x0,%ebx
  0x000000010c4a7bcf: je     0x000000010c4a7ca6  ; OopMap{rax=Oop off=437}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000010c4a7bd5: test   %eax,-0x217badb(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4a7bdb: movabs $0x124eb1a30,%rsi  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7be5: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000010c4a7beb: cmp    %edi,%ecx
  0x000000010c4a7bed: movabs $0x124eb1a30,%rsi  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7bf7: movabs $0x180,%rbx
  0x000000010c4a7c01: jge    0x000000010c4a7c11
  0x000000010c4a7c07: movabs $0x190,%rbx
  0x000000010c4a7c11: mov    (%rsi,%rbx,1),%r8
  0x000000010c4a7c15: lea    0x1(%r8),%r8
  0x000000010c4a7c19: mov    %r8,(%rsi,%rbx,1)
  0x000000010c4a7c1d: jge    0x000000010c4a7c37
  0x000000010c4a7c23: jmpq   0x000000010c4a7b58  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010c4a7c28: mov    %rcx,%rax
  0x000000010c4a7c2b: add    $0x30,%rsp
  0x000000010c4a7c2f: pop    %rbp
  0x000000010c4a7c30: test   %eax,-0x217bb36(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4a7c36: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x000000010c4a7c37: mov    $0xffffffff,%eax
  0x000000010c4a7c3c: add    $0x30,%rsp
  0x000000010c4a7c40: pop    %rbp
  0x000000010c4a7c41: test   %eax,-0x217bb47(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4a7c47: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x000000010c4a7c48: mov    %rsi,%rdi
  0x000000010c4a7c4b: movabs $0x124eb1a30,%rbx  ;   {metadata(method data for {method} {0x0000000124cc3180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4a7c55: addq   $0x1,0x1d8(%rbx)
  0x000000010c4a7c5d: nop
  0x000000010c4a7c5e: nop
  0x000000010c4a7c5f: callq  0x000000010c3ed020  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x000000010c4a7c64: add    $0x30,%rsp
  0x000000010c4a7c68: pop    %rbp
  0x000000010c4a7c69: test   %eax,-0x217bb6f(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4a7c6f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x000000010c4a7c70: mov    $0xffffffff,%eax
  0x000000010c4a7c75: add    $0x30,%rsp
  0x000000010c4a7c79: pop    %rbp
  0x000000010c4a7c7a: test   %eax,-0x217bb80(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4a7c80: retq   
  0x000000010c4a7c81: mov    %rax,0x8(%rsp)
  0x000000010c4a7c86: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4a7c8e: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x000000010c4a7c93: jmpq   0x000000010c4a7a7e
  0x000000010c4a7c98: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010c4a7c9d: mov    %rcx,(%rsp)
  0x000000010c4a7ca1: callq  0x000000010c413000  ; OopMap{rax=Oop off=646}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010c4a7ca6: mov    %rsi,0x8(%rsp)
  0x000000010c4a7cab: movq   $0x3a,(%rsp)
  0x000000010c4a7cb3: callq  0x000000010c4a4f60  ; OopMap{rax=Oop off=664}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x000000010c4a7cb8: jmpq   0x000000010c4a7bd5
  0x000000010c4a7cbd: nop
  0x000000010c4a7cbe: nop
  0x000000010c4a7cbf: mov    0x2a8(%r15),%rax
  0x000000010c4a7cc6: movabs $0x0,%r10
  0x000000010c4a7cd0: mov    %r10,0x2a8(%r15)
  0x000000010c4a7cd7: movabs $0x0,%r10
  0x000000010c4a7ce1: mov    %r10,0x2b0(%r15)
  0x000000010c4a7ce8: add    $0x30,%rsp
  0x000000010c4a7cec: pop    %rbp
  0x000000010c4a7ced: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4a7cf2: hlt    
  0x000000010c4a7cf3: hlt    
  0x000000010c4a7cf4: hlt    
  0x000000010c4a7cf5: hlt    
  0x000000010c4a7cf6: hlt    
  0x000000010c4a7cf7: hlt    
  0x000000010c4a7cf8: hlt    
  0x000000010c4a7cf9: hlt    
  0x000000010c4a7cfa: hlt    
  0x000000010c4a7cfb: hlt    
  0x000000010c4a7cfc: hlt    
  0x000000010c4a7cfd: hlt    
  0x000000010c4a7cfe: hlt    
  0x000000010c4a7cff: hlt    
[Stub Code]
  0x000000010c4a7d00: nop                       ;   {no_reloc}
  0x000000010c4a7d01: nop
  0x000000010c4a7d02: nop
  0x000000010c4a7d03: nop
  0x000000010c4a7d04: nop
  0x000000010c4a7d05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4a7d0f: jmpq   0x000000010c4a7d0f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4a7d14: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4a7d19: mov    %rsp,-0x28(%rsp)
  0x000000010c4a7d1e: sub    $0x80,%rsp
  0x000000010c4a7d25: mov    %rax,0x78(%rsp)
  0x000000010c4a7d2a: mov    %rcx,0x70(%rsp)
  0x000000010c4a7d2f: mov    %rdx,0x68(%rsp)
  0x000000010c4a7d34: mov    %rbx,0x60(%rsp)
  0x000000010c4a7d39: mov    %rbp,0x50(%rsp)
  0x000000010c4a7d3e: mov    %rsi,0x48(%rsp)
  0x000000010c4a7d43: mov    %rdi,0x40(%rsp)
  0x000000010c4a7d48: mov    %r8,0x38(%rsp)
  0x000000010c4a7d4d: mov    %r9,0x30(%rsp)
  0x000000010c4a7d52: mov    %r10,0x28(%rsp)
  0x000000010c4a7d57: mov    %r11,0x20(%rsp)
  0x000000010c4a7d5c: mov    %r12,0x18(%rsp)
  0x000000010c4a7d61: mov    %r13,0x10(%rsp)
  0x000000010c4a7d66: mov    %r14,0x8(%rsp)
  0x000000010c4a7d6b: mov    %r15,(%rsp)
  0x000000010c4a7d6f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4a7d79: movabs $0x10c4a7d19,%rsi  ;   {internal_word}
  0x000000010c4a7d83: mov    %rsp,%rdx
  0x000000010c4a7d86: and    $0xfffffffffffffff0,%rsp
  0x000000010c4a7d8a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4a7d8f: hlt    
[Deopt Handler Code]
  0x000000010c4a7d90: movabs $0x10c4a7d90,%r10  ;   {section_word}
  0x000000010c4a7d9a: push   %r10
  0x000000010c4a7d9c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4a7da1: hlt    
  0x000000010c4a7da2: hlt    
  0x000000010c4a7da3: hlt    
  0x000000010c4a7da4: hlt    
  0x000000010c4a7da5: hlt    
  0x000000010c4a7da6: hlt    
  0x000000010c4a7da7: hlt    
Decoding compiled method 0x000000010c4a9690:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4a9800: mov    0x8(%rsi),%r10d
  0x000000010c4a9804: shl    $0x3,%r10
  0x000000010c4a9808: cmp    %rax,%r10
  0x000000010c4a980b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4a9811: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4a981c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4a9820: mov    %eax,-0x14000(%rsp)
  0x000000010c4a9827: push   %rbp
  0x000000010c4a9828: sub    $0x30,%rsp
  0x000000010c4a982c: movabs $0x124e34108,%rdi  ;   {metadata(method data for {method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010c4a9836: mov    0xdc(%rdi),%ebx
  0x000000010c4a983c: add    $0x8,%ebx
  0x000000010c4a983f: mov    %ebx,0xdc(%rdi)
  0x000000010c4a9845: movabs $0x124cbe480,%rdi  ;   {metadata({method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010c4a984f: and    $0x1ff8,%ebx
  0x000000010c4a9855: cmp    $0x0,%ebx
  0x000000010c4a9858: je     0x000000010c4a9877
  0x000000010c4a985e: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x000000010c4a9861: mov    %rsi,0x20(%rsp)
  0x000000010c4a9866: callq  0x000000010c4a0c60  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x000000010c4a986b: add    $0x30,%rsp
  0x000000010c4a986f: pop    %rbp
  0x000000010c4a9870: test   %eax,-0x217d776(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4a9876: retq   
  0x000000010c4a9877: mov    %rdi,0x8(%rsp)
  0x000000010c4a987c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4a9884: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ;   {runtime_call}
  0x000000010c4a9889: jmp    0x000000010c4a985e
  0x000000010c4a988b: nop
  0x000000010c4a988c: nop
  0x000000010c4a988d: mov    0x2a8(%r15),%rax
  0x000000010c4a9894: movabs $0x0,%r10
  0x000000010c4a989e: mov    %r10,0x2a8(%r15)
  0x000000010c4a98a5: movabs $0x0,%r10
  0x000000010c4a98af: mov    %r10,0x2b0(%r15)
  0x000000010c4a98b6: add    $0x30,%rsp
  0x000000010c4a98ba: pop    %rbp
  0x000000010c4a98bb: jmpq   0x000000010c4134a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000010c4a98c0: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4a98c5: mov    %rsp,-0x28(%rsp)
  0x000000010c4a98ca: sub    $0x80,%rsp
  0x000000010c4a98d1: mov    %rax,0x78(%rsp)
  0x000000010c4a98d6: mov    %rcx,0x70(%rsp)
  0x000000010c4a98db: mov    %rdx,0x68(%rsp)
  0x000000010c4a98e0: mov    %rbx,0x60(%rsp)
  0x000000010c4a98e5: mov    %rbp,0x50(%rsp)
  0x000000010c4a98ea: mov    %rsi,0x48(%rsp)
  0x000000010c4a98ef: mov    %rdi,0x40(%rsp)
  0x000000010c4a98f4: mov    %r8,0x38(%rsp)
  0x000000010c4a98f9: mov    %r9,0x30(%rsp)
  0x000000010c4a98fe: mov    %r10,0x28(%rsp)
  0x000000010c4a9903: mov    %r11,0x20(%rsp)
  0x000000010c4a9908: mov    %r12,0x18(%rsp)
  0x000000010c4a990d: mov    %r13,0x10(%rsp)
  0x000000010c4a9912: mov    %r14,0x8(%rsp)
  0x000000010c4a9917: mov    %r15,(%rsp)
  0x000000010c4a991b: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4a9925: movabs $0x10c4a98c5,%rsi  ;   {internal_word}
  0x000000010c4a992f: mov    %rsp,%rdx
  0x000000010c4a9932: and    $0xfffffffffffffff0,%rsp
  0x000000010c4a9936: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4a993b: hlt    
[Deopt Handler Code]
  0x000000010c4a993c: movabs $0x10c4a993c,%r10  ;   {section_word}
  0x000000010c4a9946: push   %r10
  0x000000010c4a9948: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4a994d: hlt    
  0x000000010c4a994e: hlt    
  0x000000010c4a994f: hlt    
Decoding compiled method 0x000000010c4b3490:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000010c4b3620: mov    0x8(%rsi),%r10d
  0x000000010c4b3624: shl    $0x3,%r10
  0x000000010c4b3628: cmp    %rax,%r10
  0x000000010c4b362b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4b3631: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4b363c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4b3640: mov    %eax,-0x14000(%rsp)
  0x000000010c4b3647: push   %rbp
  0x000000010c4b3648: sub    $0xa0,%rsp
  0x000000010c4b364f: movabs $0x124ebd330,%rdi  ;   {metadata(method data for {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b3659: mov    0xdc(%rdi),%ebx
  0x000000010c4b365f: add    $0x8,%ebx
  0x000000010c4b3662: mov    %ebx,0xdc(%rdi)
  0x000000010c4b3668: movabs $0x124d326a0,%rdi  ;   {metadata({method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b3672: and    $0x1ff8,%ebx
  0x000000010c4b3678: cmp    $0x0,%ebx
  0x000000010c4b367b: je     0x000000010c4b392f  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x000000010c4b3681: mov    0x10(%rsi),%edi
  0x000000010c4b3684: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010c4b3688: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000010c4b3946
  0x000000010c4b368b: mov    %rdx,%rax
  0x000000010c4b368e: sub    %ebx,%eax
  0x000000010c4b3690: cmp    $0x0,%eax
  0x000000010c4b3693: movabs $0x124ebd330,%rax  ;   {metadata(method data for {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b369d: movabs $0x108,%rcx
  0x000000010c4b36a7: jle    0x000000010c4b36b7
  0x000000010c4b36ad: movabs $0x118,%rcx
  0x000000010c4b36b7: mov    (%rax,%rcx,1),%r8
  0x000000010c4b36bb: lea    0x1(%r8),%r8
  0x000000010c4b36bf: mov    %r8,(%rax,%rcx,1)
  0x000000010c4b36c3: jle    0x000000010c4b3920  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000010c4b36c9: mov    %ebx,0x78(%rsp)
  0x000000010c4b36cd: mov    %rdi,0x80(%rsp)
  0x000000010c4b36d5: mov    %rsi,%rax
  0x000000010c4b36d8: movabs $0x124ebd330,%rcx  ;   {metadata(method data for {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b36e2: addq   $0x1,0x128(%rcx)
  0x000000010c4b36ea: mov    %rsi,%rax
  0x000000010c4b36ed: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010c4b36f0: mov    %rax,0x88(%rsp)
  0x000000010c4b36f8: nop
  0x000000010c4b36f9: nop
  0x000000010c4b36fa: nop
  0x000000010c4b36fb: nop
  0x000000010c4b36fc: nop
  0x000000010c4b36fd: nop
  0x000000010c4b36fe: nop
  0x000000010c4b36ff: callq  0x000000010c3ed020  ; OopMap{[128]=Oop [136]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000010c4b3704: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010c4b3707: movabs $0x124ebd330,%rbx  ;   {metadata(method data for {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b3711: addq   $0x1,0x138(%rbx)
  0x000000010c4b3719: movabs $0x124ebd6d0,%rbx  ;   {metadata(method data for {method} {0x0000000124dd7ef0} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010c4b3723: mov    0xdc(%rbx),%edx
  0x000000010c4b3729: add    $0x8,%edx
  0x000000010c4b372c: mov    %edx,0xdc(%rbx)
  0x000000010c4b3732: movabs $0x124dd7ef0,%rbx  ;   {metadata({method} {0x0000000124dd7ef0} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010c4b373c: and    $0x7ffff8,%edx
  0x000000010c4b3742: cmp    $0x0,%edx
  0x000000010c4b3745: je     0x000000010c4b394b
  0x000000010c4b374b: mov    %r8,%rbx
  0x000000010c4b374e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010c4b3758: movslq %ebx,%rbx
  0x000000010c4b375b: mov    %rbx,%rdi
  0x000000010c4b375e: cmp    $0xffffff,%rbx
  0x000000010c4b3765: ja     0x000000010c4b3962
  0x000000010c4b376b: movabs $0x17,%rsi
  0x000000010c4b3775: lea    (%rsi,%rbx,2),%rsi
  0x000000010c4b3779: and    $0xfffffffffffffff8,%rsi
  0x000000010c4b377d: mov    0x60(%r15),%rax
  0x000000010c4b3781: lea    (%rax,%rsi,1),%rsi
  0x000000010c4b3785: cmp    0x70(%r15),%rsi
  0x000000010c4b3789: ja     0x000000010c4b3962
  0x000000010c4b378f: mov    %rsi,0x60(%r15)
  0x000000010c4b3793: sub    %rax,%rsi
  0x000000010c4b3796: movq   $0x1,(%rax)
  0x000000010c4b379d: mov    %rdx,%rcx
  0x000000010c4b37a0: shr    $0x3,%rcx
  0x000000010c4b37a4: mov    %ecx,0x8(%rax)
  0x000000010c4b37a7: mov    %ebx,0xc(%rax)
  0x000000010c4b37aa: sub    $0x10,%rsi
  0x000000010c4b37ae: je     0x000000010c4b37c5
  0x000000010c4b37b4: xor    %rbx,%rbx
  0x000000010c4b37b7: shr    $0x3,%rsi
  0x000000010c4b37bb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010c4b37c0: dec    %rsi
  0x000000010c4b37c3: jne    0x000000010c4b37bb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010c4b37c5: movabs $0x124ebd6d0,%rsi  ;   {metadata(method data for {method} {0x0000000124dd7ef0} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010c4b37cf: addq   $0x1,0x108(%rsi)
  0x000000010c4b37d7: movabs $0x124e86ce8,%rsi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b37e1: mov    0xdc(%rsi),%edx
  0x000000010c4b37e7: add    $0x8,%edx
  0x000000010c4b37ea: mov    %edx,0xdc(%rsi)
  0x000000010c4b37f0: movabs $0x124db37a8,%rsi  ;   {metadata({method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b37fa: and    $0x7ffff8,%edx
  0x000000010c4b3800: cmp    $0x0,%edx
  0x000000010c4b3803: je     0x000000010c4b396c
  0x000000010c4b3809: mov    0x78(%rsp),%ebx
  0x000000010c4b380d: cmp    %r8d,%ebx
  0x000000010c4b3810: movabs $0x124e86ce8,%rsi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b381a: movabs $0x108,%rdx
  0x000000010c4b3824: jg     0x000000010c4b3834
  0x000000010c4b382a: movabs $0x118,%rdx
  0x000000010c4b3834: mov    (%rsi,%rdx,1),%rcx
  0x000000010c4b3838: lea    0x1(%rcx),%rcx
  0x000000010c4b383c: mov    %rcx,(%rsi,%rdx,1)
  0x000000010c4b3840: jg     0x000000010c4b385b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010c4b3846: movabs $0x124e86ce8,%rsi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b3850: incl   0x128(%rsi)
  0x000000010c4b3856: jmpq   0x000000010c4b385e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010c4b385b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010c4b385e: mov    0x80(%rsp),%rdi
  0x000000010c4b3866: movabs $0x124ebd6d0,%rsi  ;   {metadata(method data for {method} {0x0000000124dd7ef0} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010c4b3870: addq   $0x1,0x118(%rsi)
  0x000000010c4b3878: mov    %rdi,%rsi
  0x000000010c4b387b: mov    $0x0,%edx
  0x000000010c4b3880: mov    %rax,%rcx
  0x000000010c4b3883: mov    $0x0,%r8d
  0x000000010c4b3889: mov    %rbx,%r9
  0x000000010c4b388c: mov    %rax,0x90(%rsp)
  0x000000010c4b3894: lea    (%rdx,%r9,1),%rdi
  0x000000010c4b3898: cmp    0xc(%rsi),%edi
  0x000000010c4b389b: ja     0x000000010c4b3983
  0x000000010c4b38a1: lea    (%r8,%r9,1),%rdi
  0x000000010c4b38a5: cmp    0xc(%rcx),%edi
  0x000000010c4b38a8: ja     0x000000010c4b3983
  0x000000010c4b38ae: test   %r9d,%r9d
  0x000000010c4b38b1: jl     0x000000010c4b3983
  0x000000010c4b38b7: je     0x000000010c4b38f3
  0x000000010c4b38bd: movslq %edx,%rdx
  0x000000010c4b38c0: movslq %r8d,%r8
  0x000000010c4b38c3: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010c4b38c8: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010c4b38cd: mov    %r9,%rdx
  0x000000010c4b38d0: test   $0xf,%esp
  0x000000010c4b38d6: je     0x000000010c4b38ee
  0x000000010c4b38dc: sub    $0x8,%rsp
  0x000000010c4b38e0: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010c4b38e5: add    $0x8,%rsp
  0x000000010c4b38e9: jmpq   0x000000010c4b38f3
  0x000000010c4b38ee: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010c4b38f3: mov    0x90(%rsp),%rax
  0x000000010c4b38fb: mov    0x88(%rsp),%rsi
  0x000000010c4b3903: mov    %rax,%r10
  0x000000010c4b3906: shr    $0x3,%r10
  0x000000010c4b390a: mov    %r10d,0x10(%rsi)
  0x000000010c4b390e: shr    $0x9,%rsi
  0x000000010c4b3912: movabs $0x118167000,%rdi
  0x000000010c4b391c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x000000010c4b3920: add    $0xa0,%rsp
  0x000000010c4b3927: pop    %rbp
  0x000000010c4b3928: test   %eax,-0x218782e(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b392e: retq   
  0x000000010c4b392f: mov    %rdi,0x8(%rsp)
  0x000000010c4b3934: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b393c: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x000000010c4b3941: jmpq   0x000000010c4b3681
  0x000000010c4b3946: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010c4b394b: mov    %rbx,0x8(%rsp)
  0x000000010c4b3950: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b3958: callq  0x000000010c4a4f60  ; OopMap{[128]=Oop [136]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010c4b395d: jmpq   0x000000010c4b374b
  0x000000010c4b3962: callq  0x000000010c4a1aa0  ; OopMap{[128]=Oop [136]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010c4b3967: jmpq   0x000000010c4b37c5
  0x000000010c4b396c: mov    %rsi,0x8(%rsp)
  0x000000010c4b3971: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b3979: callq  0x000000010c4a4f60  ; OopMap{[128]=Oop [136]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010c4b397e: jmpq   0x000000010c4b3809
  0x000000010c4b3983: nop
  0x000000010c4b3984: nop
  0x000000010c4b3985: nop
  0x000000010c4b3986: nop
  0x000000010c4b3987: callq  0x000000010c3ed420  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x000000010c4b398c: jmpq   0x000000010c4b38f3
  0x000000010c4b3991: nop
  0x000000010c4b3992: nop
  0x000000010c4b3993: mov    0x2a8(%r15),%rax
  0x000000010c4b399a: movabs $0x0,%r10
  0x000000010c4b39a4: mov    %r10,0x2a8(%r15)
  0x000000010c4b39ab: movabs $0x0,%r10
  0x000000010c4b39b5: mov    %r10,0x2b0(%r15)
  0x000000010c4b39bc: add    $0xa0,%rsp
  0x000000010c4b39c3: pop    %rbp
  0x000000010c4b39c4: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4b39c9: hlt    
  0x000000010c4b39ca: hlt    
  0x000000010c4b39cb: hlt    
  0x000000010c4b39cc: hlt    
  0x000000010c4b39cd: hlt    
  0x000000010c4b39ce: hlt    
  0x000000010c4b39cf: hlt    
  0x000000010c4b39d0: hlt    
  0x000000010c4b39d1: hlt    
  0x000000010c4b39d2: hlt    
  0x000000010c4b39d3: hlt    
  0x000000010c4b39d4: hlt    
  0x000000010c4b39d5: hlt    
  0x000000010c4b39d6: hlt    
  0x000000010c4b39d7: hlt    
  0x000000010c4b39d8: hlt    
  0x000000010c4b39d9: hlt    
  0x000000010c4b39da: hlt    
  0x000000010c4b39db: hlt    
  0x000000010c4b39dc: hlt    
  0x000000010c4b39dd: hlt    
  0x000000010c4b39de: hlt    
  0x000000010c4b39df: hlt    
[Stub Code]
  0x000000010c4b39e0: nop                       ;   {no_reloc}
  0x000000010c4b39e1: nop
  0x000000010c4b39e2: nop
  0x000000010c4b39e3: nop
  0x000000010c4b39e4: nop
  0x000000010c4b39e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b39ef: jmpq   0x000000010c4b39ef  ;   {runtime_call}
  0x000000010c4b39f4: nop
  0x000000010c4b39f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b39ff: jmpq   0x000000010c4b39ff  ;   {runtime_call}
[Exception Handler]
  0x000000010c4b3a04: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4b3a09: mov    %rsp,-0x28(%rsp)
  0x000000010c4b3a0e: sub    $0x80,%rsp
  0x000000010c4b3a15: mov    %rax,0x78(%rsp)
  0x000000010c4b3a1a: mov    %rcx,0x70(%rsp)
  0x000000010c4b3a1f: mov    %rdx,0x68(%rsp)
  0x000000010c4b3a24: mov    %rbx,0x60(%rsp)
  0x000000010c4b3a29: mov    %rbp,0x50(%rsp)
  0x000000010c4b3a2e: mov    %rsi,0x48(%rsp)
  0x000000010c4b3a33: mov    %rdi,0x40(%rsp)
  0x000000010c4b3a38: mov    %r8,0x38(%rsp)
  0x000000010c4b3a3d: mov    %r9,0x30(%rsp)
  0x000000010c4b3a42: mov    %r10,0x28(%rsp)
  0x000000010c4b3a47: mov    %r11,0x20(%rsp)
  0x000000010c4b3a4c: mov    %r12,0x18(%rsp)
  0x000000010c4b3a51: mov    %r13,0x10(%rsp)
  0x000000010c4b3a56: mov    %r14,0x8(%rsp)
  0x000000010c4b3a5b: mov    %r15,(%rsp)
  0x000000010c4b3a5f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4b3a69: movabs $0x10c4b3a09,%rsi  ;   {internal_word}
  0x000000010c4b3a73: mov    %rsp,%rdx
  0x000000010c4b3a76: and    $0xfffffffffffffff0,%rsp
  0x000000010c4b3a7a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4b3a7f: hlt    
[Deopt Handler Code]
  0x000000010c4b3a80: movabs $0x10c4b3a80,%r10  ;   {section_word}
  0x000000010c4b3a8a: push   %r10
  0x000000010c4b3a8c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4b3a91: hlt    
  0x000000010c4b3a92: hlt    
  0x000000010c4b3a93: hlt    
  0x000000010c4b3a94: hlt    
  0x000000010c4b3a95: hlt    
  0x000000010c4b3a96: hlt    
  0x000000010c4b3a97: hlt    
Decoding compiled method 0x000000010c4b30d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010c4b3240: mov    %eax,-0x14000(%rsp)
  0x000000010c4b3247: push   %rbp
  0x000000010c4b3248: sub    $0x30,%rsp
  0x000000010c4b324c: movabs $0x124e86ce8,%rax  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b3256: mov    0xdc(%rax),%edi
  0x000000010c4b325c: add    $0x8,%edi
  0x000000010c4b325f: mov    %edi,0xdc(%rax)
  0x000000010c4b3265: movabs $0x124db37a8,%rax  ;   {metadata({method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b326f: and    $0x1ff8,%edi
  0x000000010c4b3275: cmp    $0x0,%edi
  0x000000010c4b3278: je     0x000000010c4b32dd  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x000000010c4b327e: cmp    %edx,%esi
  0x000000010c4b3280: movabs $0x124e86ce8,%rax  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b328a: movabs $0x108,%rdi
  0x000000010c4b3294: jg     0x000000010c4b32a4
  0x000000010c4b329a: movabs $0x118,%rdi
  0x000000010c4b32a4: mov    (%rax,%rdi,1),%rbx
  0x000000010c4b32a8: lea    0x1(%rbx),%rbx
  0x000000010c4b32ac: mov    %rbx,(%rax,%rdi,1)
  0x000000010c4b32b0: jg     0x000000010c4b32cb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x000000010c4b32b6: movabs $0x124e86ce8,%rax  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b32c0: incl   0x128(%rax)
  0x000000010c4b32c6: jmpq   0x000000010c4b32ce  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000010c4b32cb: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000010c4b32ce: mov    %rsi,%rax
  0x000000010c4b32d1: add    $0x30,%rsp
  0x000000010c4b32d5: pop    %rbp
  0x000000010c4b32d6: test   %eax,-0x21871dc(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b32dc: retq   
  0x000000010c4b32dd: mov    %rax,0x8(%rsp)
  0x000000010c4b32e2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b32ea: callq  0x000000010c4a4f60  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x000000010c4b32ef: jmp    0x000000010c4b327e
  0x000000010c4b32f1: nop
  0x000000010c4b32f2: nop
  0x000000010c4b32f3: mov    0x2a8(%r15),%rax
  0x000000010c4b32fa: movabs $0x0,%r10
  0x000000010c4b3304: mov    %r10,0x2a8(%r15)
  0x000000010c4b330b: movabs $0x0,%r10
  0x000000010c4b3315: mov    %r10,0x2b0(%r15)
  0x000000010c4b331c: add    $0x30,%rsp
  0x000000010c4b3320: pop    %rbp
  0x000000010c4b3321: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4b3326: hlt    
  0x000000010c4b3327: hlt    
  0x000000010c4b3328: hlt    
  0x000000010c4b3329: hlt    
  0x000000010c4b332a: hlt    
  0x000000010c4b332b: hlt    
  0x000000010c4b332c: hlt    
  0x000000010c4b332d: hlt    
  0x000000010c4b332e: hlt    
  0x000000010c4b332f: hlt    
  0x000000010c4b3330: hlt    
  0x000000010c4b3331: hlt    
  0x000000010c4b3332: hlt    
  0x000000010c4b3333: hlt    
  0x000000010c4b3334: hlt    
  0x000000010c4b3335: hlt    
  0x000000010c4b3336: hlt    
  0x000000010c4b3337: hlt    
  0x000000010c4b3338: hlt    
  0x000000010c4b3339: hlt    
  0x000000010c4b333a: hlt    
  0x000000010c4b333b: hlt    
  0x000000010c4b333c: hlt    
  0x000000010c4b333d: hlt    
  0x000000010c4b333e: hlt    
  0x000000010c4b333f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4b3340: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4b3345: mov    %rsp,-0x28(%rsp)
  0x000000010c4b334a: sub    $0x80,%rsp
  0x000000010c4b3351: mov    %rax,0x78(%rsp)
  0x000000010c4b3356: mov    %rcx,0x70(%rsp)
  0x000000010c4b335b: mov    %rdx,0x68(%rsp)
  0x000000010c4b3360: mov    %rbx,0x60(%rsp)
  0x000000010c4b3365: mov    %rbp,0x50(%rsp)
  0x000000010c4b336a: mov    %rsi,0x48(%rsp)
  0x000000010c4b336f: mov    %rdi,0x40(%rsp)
  0x000000010c4b3374: mov    %r8,0x38(%rsp)
  0x000000010c4b3379: mov    %r9,0x30(%rsp)
  0x000000010c4b337e: mov    %r10,0x28(%rsp)
  0x000000010c4b3383: mov    %r11,0x20(%rsp)
  0x000000010c4b3388: mov    %r12,0x18(%rsp)
  0x000000010c4b338d: mov    %r13,0x10(%rsp)
  0x000000010c4b3392: mov    %r14,0x8(%rsp)
  0x000000010c4b3397: mov    %r15,(%rsp)
  0x000000010c4b339b: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4b33a5: movabs $0x10c4b3345,%rsi  ;   {internal_word}
  0x000000010c4b33af: mov    %rsp,%rdx
  0x000000010c4b33b2: and    $0xfffffffffffffff0,%rsp
  0x000000010c4b33b6: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4b33bb: hlt    
[Deopt Handler Code]
  0x000000010c4b33bc: movabs $0x10c4b33bc,%r10  ;   {section_word}
  0x000000010c4b33c6: push   %r10
  0x000000010c4b33c8: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4b33cd: hlt    
  0x000000010c4b33ce: hlt    
  0x000000010c4b33cf: hlt    
Decoding compiled method 0x000000010c4b3d10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000010c4b3f20: mov    %eax,-0x14000(%rsp)
  0x000000010c4b3f27: push   %rbp
  0x000000010c4b3f28: sub    $0xa0,%rsp
  0x000000010c4b3f2f: mov    %rsi,%r8
  0x000000010c4b3f32: mov    %rdx,%r9
  0x000000010c4b3f35: movabs $0x124ebeba0,%rbx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b3f3f: mov    0xdc(%rbx),%edx
  0x000000010c4b3f45: add    $0x8,%edx
  0x000000010c4b3f48: mov    %edx,0xdc(%rbx)
  0x000000010c4b3f4e: movabs $0x124dd86b8,%rbx  ;   {metadata({method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b3f58: and    $0x1ff8,%edx
  0x000000010c4b3f5e: cmp    $0x0,%edx
  0x000000010c4b3f61: je     0x000000010c4b47c1  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x000000010c4b3f67: mov    %rcx,%r11
  0x000000010c4b3f6a: sub    %r9d,%r11d
  0x000000010c4b3f6d: cmp    $0x0,%r11d
  0x000000010c4b3f71: movabs $0x124ebeba0,%rbx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b3f7b: movabs $0x108,%rdx
  0x000000010c4b3f85: jge    0x000000010c4b3f95
  0x000000010c4b3f8b: movabs $0x118,%rdx
  0x000000010c4b3f95: mov    (%rbx,%rdx,1),%rsi
  0x000000010c4b3f99: lea    0x1(%rsi),%rsi
  0x000000010c4b3f9d: mov    %rsi,(%rbx,%rdx,1)
  0x000000010c4b3fa1: jl     0x000000010c4b4164  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x000000010c4b3fa7: mov    %r11,%rbx
  0x000000010c4b3faa: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010c4b3fb4: movslq %ebx,%rbx
  0x000000010c4b3fb7: mov    %rbx,%rdi
  0x000000010c4b3fba: cmp    $0xffffff,%rbx
  0x000000010c4b3fc1: ja     0x000000010c4b47d8
  0x000000010c4b3fc7: movabs $0x17,%rsi
  0x000000010c4b3fd1: lea    (%rsi,%rbx,2),%rsi
  0x000000010c4b3fd5: and    $0xfffffffffffffff8,%rsi
  0x000000010c4b3fd9: mov    0x60(%r15),%rax
  0x000000010c4b3fdd: lea    (%rax,%rsi,1),%rsi
  0x000000010c4b3fe1: cmp    0x70(%r15),%rsi
  0x000000010c4b3fe5: ja     0x000000010c4b47d8
  0x000000010c4b3feb: mov    %rsi,0x60(%r15)
  0x000000010c4b3fef: sub    %rax,%rsi
  0x000000010c4b3ff2: movq   $0x1,(%rax)
  0x000000010c4b3ff9: mov    %rdx,%rcx
  0x000000010c4b3ffc: shr    $0x3,%rcx
  0x000000010c4b4000: mov    %ecx,0x8(%rax)
  0x000000010c4b4003: mov    %ebx,0xc(%rax)
  0x000000010c4b4006: sub    $0x10,%rsi
  0x000000010c4b400a: je     0x000000010c4b4021
  0x000000010c4b4010: xor    %rbx,%rbx
  0x000000010c4b4013: shr    $0x3,%rsi
  0x000000010c4b4017: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010c4b401c: dec    %rsi
  0x000000010c4b401f: jne    0x000000010c4b4017  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000010c4b4021: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000010c4b47e2
  0x000000010c4b4025: sub    %r9d,%esi
  0x000000010c4b4028: movabs $0x124ebeba0,%rdx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b4032: addq   $0x1,0x208(%rdx)
  0x000000010c4b403a: movabs $0x124e86ce8,%rdx  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b4044: mov    0xdc(%rdx),%ecx
  0x000000010c4b404a: add    $0x8,%ecx
  0x000000010c4b404d: mov    %ecx,0xdc(%rdx)
  0x000000010c4b4053: movabs $0x124db37a8,%rdx  ;   {metadata({method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b405d: and    $0x7ffff8,%ecx
  0x000000010c4b4063: cmp    $0x0,%ecx
  0x000000010c4b4066: je     0x000000010c4b47e7
  0x000000010c4b406c: cmp    %r11d,%esi
  0x000000010c4b406f: movabs $0x124e86ce8,%rdx  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b4079: movabs $0x108,%rcx
  0x000000010c4b4083: jg     0x000000010c4b4093
  0x000000010c4b4089: movabs $0x118,%rcx
  0x000000010c4b4093: mov    (%rdx,%rcx,1),%rdi
  0x000000010c4b4097: lea    0x1(%rdi),%rdi
  0x000000010c4b409b: mov    %rdi,(%rdx,%rcx,1)
  0x000000010c4b409f: jg     0x000000010c4b40bd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010c4b40a5: movabs $0x124e86ce8,%rdx  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4b40af: incl   0x128(%rdx)
  0x000000010c4b40b5: mov    %rsi,%rdi
  0x000000010c4b40b8: jmpq   0x000000010c4b40c0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010c4b40bd: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010c4b40c0: movabs $0x124ebeba0,%rsi  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b40ca: addq   $0x1,0x218(%rsi)
  0x000000010c4b40d2: mov    %r8,%rsi
  0x000000010c4b40d5: mov    %r9,%rdx
  0x000000010c4b40d8: mov    %rax,%rcx
  0x000000010c4b40db: mov    $0x0,%r8d
  0x000000010c4b40e1: mov    %rdi,%r9
  0x000000010c4b40e4: mov    %rax,0x70(%rsp)
  0x000000010c4b40e9: test   %edx,%edx
  0x000000010c4b40eb: jl     0x000000010c4b47fe
  0x000000010c4b40f1: lea    (%rdx,%r9,1),%rdi
  0x000000010c4b40f5: cmp    0xc(%rsi),%edi
  0x000000010c4b40f8: ja     0x000000010c4b47fe
  0x000000010c4b40fe: lea    (%r8,%r9,1),%rdi
  0x000000010c4b4102: cmp    0xc(%rcx),%edi
  0x000000010c4b4105: ja     0x000000010c4b47fe
  0x000000010c4b410b: test   %r9d,%r9d
  0x000000010c4b410e: jl     0x000000010c4b47fe
  0x000000010c4b4114: je     0x000000010c4b4150
  0x000000010c4b411a: movslq %edx,%rdx
  0x000000010c4b411d: movslq %r8d,%r8
  0x000000010c4b4120: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010c4b4125: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010c4b412a: mov    %r9,%rdx
  0x000000010c4b412d: test   $0xf,%esp
  0x000000010c4b4133: je     0x000000010c4b414b
  0x000000010c4b4139: sub    $0x8,%rsp
  0x000000010c4b413d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010c4b4142: add    $0x8,%rsp
  0x000000010c4b4146: jmpq   0x000000010c4b4150
  0x000000010c4b414b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x000000010c4b4150: mov    0x70(%rsp),%rax
  0x000000010c4b4155: add    $0xa0,%rsp
  0x000000010c4b415c: pop    %rbp
  0x000000010c4b415d: test   %eax,-0x2188063(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b4163: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x000000010c4b4164: mov    %ecx,0x80(%rsp)
  0x000000010c4b416b: nopl   0x0(%rax,%rax,1)
  0x000000010c4b4170: jmpq   0x000000010c4b4818  ;   {no_reloc}
  0x000000010c4b4175: add    %al,(%rax)
  0x000000010c4b4177: add    %al,(%rax)
  0x000000010c4b4179: add    %cl,-0x75(%rcx)
  0x000000010c4b417c: rex.RXB (bad) 
  0x000000010c4b417e: lea    0x20(%rax),%rdi
  0x000000010c4b4182: cmp    0x70(%r15),%rdi
  0x000000010c4b4186: ja     0x000000010c4b4822
  0x000000010c4b418c: mov    %rdi,0x60(%r15)
  0x000000010c4b4190: mov    0xa8(%rdx),%rcx
  0x000000010c4b4197: mov    %rcx,(%rax)
  0x000000010c4b419a: mov    %rdx,%rcx
  0x000000010c4b419d: shr    $0x3,%rcx
  0x000000010c4b41a1: mov    %ecx,0x8(%rax)
  0x000000010c4b41a4: xor    %rcx,%rcx
  0x000000010c4b41a7: mov    %ecx,0xc(%rax)
  0x000000010c4b41aa: xor    %rcx,%rcx
  0x000000010c4b41ad: mov    %rcx,0x10(%rax)
  0x000000010c4b41b1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x000000010c4b41b5: data32 xchg %ax,%ax
  0x000000010c4b41b8: jmpq   0x000000010c4b483e  ;   {no_reloc}
  0x000000010c4b41bd: add    %al,(%rax)
  0x000000010c4b41bf: add    %al,(%rax)
  0x000000010c4b41c1: add    %cl,-0x77(%rax)
  0x000000010c4b41c4: test   %ah,(%rax,%rcx,4)
  0x000000010c4b41c7: add    %al,(%rax)
  0x000000010c4b41c9: add    %cl,-0x75(%rcx)
  0x000000010c4b41cc: rex.RXB (bad) 
  0x000000010c4b41ce: lea    0x18(%rax),%rdi
  0x000000010c4b41d2: cmp    0x70(%r15),%rdi
  0x000000010c4b41d6: ja     0x000000010c4b4848
  0x000000010c4b41dc: mov    %rdi,0x60(%r15)
  0x000000010c4b41e0: mov    0xa8(%rdx),%rcx
  0x000000010c4b41e7: mov    %rcx,(%rax)
  0x000000010c4b41ea: mov    %rdx,%rcx
  0x000000010c4b41ed: shr    $0x3,%rcx
  0x000000010c4b41f1: mov    %ecx,0x8(%rax)
  0x000000010c4b41f4: xor    %rcx,%rcx
  0x000000010c4b41f7: mov    %ecx,0xc(%rax)
  0x000000010c4b41fa: xor    %rcx,%rcx
  0x000000010c4b41fd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x000000010c4b4201: mov    %rax,%rbx
  0x000000010c4b4204: movabs $0x124ebeba0,%rdx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b420e: addq   $0x1,0x128(%rdx)
  0x000000010c4b4216: movabs $0x124ebf000,%rbx  ;   {metadata(method data for {method} {0x0000000124d360f0} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010c4b4220: mov    0xdc(%rbx),%edx
  0x000000010c4b4226: add    $0x8,%edx
  0x000000010c4b4229: mov    %edx,0xdc(%rbx)
  0x000000010c4b422f: movabs $0x124d360f0,%rbx  ;   {metadata({method} {0x0000000124d360f0} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010c4b4239: and    $0x7ffff8,%edx
  0x000000010c4b423f: cmp    $0x0,%edx
  0x000000010c4b4242: je     0x000000010c4b4855
  0x000000010c4b4248: mov    %rax,%rbx
  0x000000010c4b424b: movabs $0x124ebf000,%rdx  ;   {metadata(method data for {method} {0x0000000124d360f0} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010c4b4255: addq   $0x1,0x108(%rdx)
  0x000000010c4b425d: movabs $0x124ebf130,%rbx  ;   {metadata(method data for {method} {0x0000000124d32420} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b4267: mov    0xdc(%rbx),%edx
  0x000000010c4b426d: add    $0x8,%edx
  0x000000010c4b4270: mov    %edx,0xdc(%rbx)
  0x000000010c4b4276: movabs $0x124d32420,%rbx  ;   {metadata({method} {0x0000000124d32420} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b4280: and    $0x7ffff8,%edx
  0x000000010c4b4286: cmp    $0x0,%edx
  0x000000010c4b4289: je     0x000000010c4b486c
  0x000000010c4b428f: mov    %rax,%rbx
  0x000000010c4b4292: movabs $0x124ebf130,%rdx  ;   {metadata(method data for {method} {0x0000000124d32420} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b429c: addq   $0x1,0x108(%rdx)
  0x000000010c4b42a4: movabs $0x124e34108,%rbx  ;   {metadata(method data for {method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010c4b42ae: mov    0xdc(%rbx),%edx
  0x000000010c4b42b4: add    $0x8,%edx
  0x000000010c4b42b7: mov    %edx,0xdc(%rbx)
  0x000000010c4b42bd: movabs $0x124cbe480,%rbx  ;   {metadata({method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010c4b42c7: and    $0x7ffff8,%edx
  0x000000010c4b42cd: cmp    $0x0,%edx
  0x000000010c4b42d0: je     0x000000010c4b4883
  0x000000010c4b42d6: mov    $0x10,%ebx
  0x000000010c4b42db: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010c4b42e5: mov    %rax,%r13
  0x000000010c4b42e8: movslq %ebx,%rbx
  0x000000010c4b42eb: mov    %rbx,%rdi
  0x000000010c4b42ee: cmp    $0xffffff,%rbx
  0x000000010c4b42f5: ja     0x000000010c4b489a
  0x000000010c4b42fb: movabs $0x17,%rsi
  0x000000010c4b4305: lea    (%rsi,%rbx,2),%rsi
  0x000000010c4b4309: and    $0xfffffffffffffff8,%rsi
  0x000000010c4b430d: mov    0x60(%r15),%rax
  0x000000010c4b4311: lea    (%rax,%rsi,1),%rsi
  0x000000010c4b4315: cmp    0x70(%r15),%rsi
  0x000000010c4b4319: ja     0x000000010c4b489a
  0x000000010c4b431f: mov    %rsi,0x60(%r15)
  0x000000010c4b4323: sub    %rax,%rsi
  0x000000010c4b4326: movq   $0x1,(%rax)
  0x000000010c4b432d: mov    %rdx,%rcx
  0x000000010c4b4330: shr    $0x3,%rcx
  0x000000010c4b4334: mov    %ecx,0x8(%rax)
  0x000000010c4b4337: mov    %ebx,0xc(%rax)
  0x000000010c4b433a: sub    $0x10,%rsi
  0x000000010c4b433e: je     0x000000010c4b4355
  0x000000010c4b4344: xor    %rbx,%rbx
  0x000000010c4b4347: shr    $0x3,%rsi
  0x000000010c4b434b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010c4b4350: dec    %rsi
  0x000000010c4b4353: jne    0x000000010c4b434b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000010c4b4355: mov    %rax,%r10
  0x000000010c4b4358: shr    $0x3,%r10
  0x000000010c4b435c: mov    %r10d,0x10(%r13)
  0x000000010c4b4360: mov    %r13,%rax
  0x000000010c4b4363: shr    $0x9,%rax
  0x000000010c4b4367: movabs $0x118167000,%rdx
  0x000000010c4b4371: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000010c4b4375: mov    %r13,%rax
  0x000000010c4b4378: movabs $0x124ebeba0,%rdx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b4382: mov    0x8(%rax),%eax
  0x000000010c4b4385: shl    $0x3,%rax
  0x000000010c4b4389: cmp    0x140(%rdx),%rax
  0x000000010c4b4390: jne    0x000000010c4b439f
  0x000000010c4b4392: addq   $0x1,0x148(%rdx)
  0x000000010c4b439a: jmpq   0x000000010c4b4405
  0x000000010c4b439f: cmp    0x150(%rdx),%rax
  0x000000010c4b43a6: jne    0x000000010c4b43b5
  0x000000010c4b43a8: addq   $0x1,0x158(%rdx)
  0x000000010c4b43b0: jmpq   0x000000010c4b4405
  0x000000010c4b43b5: cmpq   $0x0,0x140(%rdx)
  0x000000010c4b43c0: jne    0x000000010c4b43d9
  0x000000010c4b43c2: mov    %rax,0x140(%rdx)
  0x000000010c4b43c9: movq   $0x1,0x148(%rdx)
  0x000000010c4b43d4: jmpq   0x000000010c4b4405
  0x000000010c4b43d9: cmpq   $0x0,0x150(%rdx)
  0x000000010c4b43e4: jne    0x000000010c4b43fd
  0x000000010c4b43e6: mov    %rax,0x150(%rdx)
  0x000000010c4b43ed: movq   $0x1,0x158(%rdx)
  0x000000010c4b43f8: jmpq   0x000000010c4b4405
  0x000000010c4b43fd: addq   $0x1,0x138(%rdx)
  0x000000010c4b4405: movabs $0x124ebf268,%rdx  ;   {metadata(method data for {method} {0x0000000124d368c8} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b440f: mov    0xdc(%rdx),%esi
  0x000000010c4b4415: add    $0x8,%esi
  0x000000010c4b4418: mov    %esi,0xdc(%rdx)
  0x000000010c4b441e: movabs $0x124d368c8,%rdx  ;   {metadata({method} {0x0000000124d368c8} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b4428: and    $0x7ffff8,%esi
  0x000000010c4b442e: cmp    $0x0,%esi
  0x000000010c4b4431: je     0x000000010c4b48a4
  0x000000010c4b4437: mov    %r13,%rax
  0x000000010c4b443a: movabs $0x124ebf268,%rdx  ;   {metadata(method data for {method} {0x0000000124d368c8} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b4444: addq   $0x1,0x108(%rdx)
  0x000000010c4b444c: mov    %r9,%rdx
  0x000000010c4b444f: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x000000010c4b4452: mov    %r13,0x78(%rsp)
  0x000000010c4b4457: callq  0x000000010c3ed020  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010c4b445c: mov    0x78(%rsp),%rax
  0x000000010c4b4461: movabs $0x124ebeba0,%rdx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b446b: mov    0x8(%rax),%eax
  0x000000010c4b446e: shl    $0x3,%rax
  0x000000010c4b4472: cmp    0x170(%rdx),%rax
  0x000000010c4b4479: jne    0x000000010c4b4488
  0x000000010c4b447b: addq   $0x1,0x178(%rdx)
  0x000000010c4b4483: jmpq   0x000000010c4b44ee
  0x000000010c4b4488: cmp    0x180(%rdx),%rax
  0x000000010c4b448f: jne    0x000000010c4b449e
  0x000000010c4b4491: addq   $0x1,0x188(%rdx)
  0x000000010c4b4499: jmpq   0x000000010c4b44ee
  0x000000010c4b449e: cmpq   $0x0,0x170(%rdx)
  0x000000010c4b44a9: jne    0x000000010c4b44c2
  0x000000010c4b44ab: mov    %rax,0x170(%rdx)
  0x000000010c4b44b2: movq   $0x1,0x178(%rdx)
  0x000000010c4b44bd: jmpq   0x000000010c4b44ee
  0x000000010c4b44c2: cmpq   $0x0,0x180(%rdx)
  0x000000010c4b44cd: jne    0x000000010c4b44e6
  0x000000010c4b44cf: mov    %rax,0x180(%rdx)
  0x000000010c4b44d6: movq   $0x1,0x188(%rdx)
  0x000000010c4b44e1: jmpq   0x000000010c4b44ee
  0x000000010c4b44e6: addq   $0x1,0x168(%rdx)
  0x000000010c4b44ee: movabs $0x124ec0658,%rdx  ;   {metadata(method data for {method} {0x0000000124d36408} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b44f8: mov    0xdc(%rdx),%esi
  0x000000010c4b44fe: add    $0x8,%esi
  0x000000010c4b4501: mov    %esi,0xdc(%rdx)
  0x000000010c4b4507: movabs $0x124d36408,%rdx  ;   {metadata({method} {0x0000000124d36408} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b4511: and    $0x7ffff8,%esi
  0x000000010c4b4517: cmp    $0x0,%esi
  0x000000010c4b451a: je     0x000000010c4b48bb
  0x000000010c4b4520: mov    0x78(%rsp),%rax
  0x000000010c4b4525: movabs $0x124ec0658,%rdx  ;   {metadata(method data for {method} {0x0000000124d36408} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b452f: addq   $0x1,0x108(%rdx)
  0x000000010c4b4537: movabs $0x76ac47af0,%rdx  ;   {oop(" > ")}
  0x000000010c4b4541: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x000000010c4b4546: nop
  0x000000010c4b4547: callq  0x000000010c3ed020  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010c4b454c: mov    0x78(%rsp),%rax
  0x000000010c4b4551: movabs $0x124ebeba0,%rdx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b455b: mov    0x8(%rax),%eax
  0x000000010c4b455e: shl    $0x3,%rax
  0x000000010c4b4562: cmp    0x1a0(%rdx),%rax
  0x000000010c4b4569: jne    0x000000010c4b4578
  0x000000010c4b456b: addq   $0x1,0x1a8(%rdx)
  0x000000010c4b4573: jmpq   0x000000010c4b45de
  0x000000010c4b4578: cmp    0x1b0(%rdx),%rax
  0x000000010c4b457f: jne    0x000000010c4b458e
  0x000000010c4b4581: addq   $0x1,0x1b8(%rdx)
  0x000000010c4b4589: jmpq   0x000000010c4b45de
  0x000000010c4b458e: cmpq   $0x0,0x1a0(%rdx)
  0x000000010c4b4599: jne    0x000000010c4b45b2
  0x000000010c4b459b: mov    %rax,0x1a0(%rdx)
  0x000000010c4b45a2: movq   $0x1,0x1a8(%rdx)
  0x000000010c4b45ad: jmpq   0x000000010c4b45de
  0x000000010c4b45b2: cmpq   $0x0,0x1b0(%rdx)
  0x000000010c4b45bd: jne    0x000000010c4b45d6
  0x000000010c4b45bf: mov    %rax,0x1b0(%rdx)
  0x000000010c4b45c6: movq   $0x1,0x1b8(%rdx)
  0x000000010c4b45d1: jmpq   0x000000010c4b45de
  0x000000010c4b45d6: addq   $0x1,0x198(%rdx)
  0x000000010c4b45de: movabs $0x124ebf268,%rdx  ;   {metadata(method data for {method} {0x0000000124d368c8} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b45e8: mov    0xdc(%rdx),%esi
  0x000000010c4b45ee: add    $0x8,%esi
  0x000000010c4b45f1: mov    %esi,0xdc(%rdx)
  0x000000010c4b45f7: movabs $0x124d368c8,%rdx  ;   {metadata({method} {0x0000000124d368c8} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b4601: and    $0x7ffff8,%esi
  0x000000010c4b4607: cmp    $0x0,%esi
  0x000000010c4b460a: je     0x000000010c4b48d2
  0x000000010c4b4610: mov    0x78(%rsp),%rax
  0x000000010c4b4615: movabs $0x124ebf268,%rdx  ;   {metadata(method data for {method} {0x0000000124d368c8} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4b461f: addq   $0x1,0x108(%rdx)
  0x000000010c4b4627: mov    0x80(%rsp),%edx
  0x000000010c4b462e: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000000010c4b4633: nop
  0x000000010c4b4634: nop
  0x000000010c4b4635: nop
  0x000000010c4b4636: nop
  0x000000010c4b4637: callq  0x000000010c3ed020  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010c4b463c: mov    0x78(%rsp),%rax
  0x000000010c4b4641: movabs $0x124ebeba0,%rdx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b464b: mov    0x8(%rax),%eax
  0x000000010c4b464e: shl    $0x3,%rax
  0x000000010c4b4652: cmp    0x1d0(%rdx),%rax
  0x000000010c4b4659: jne    0x000000010c4b4668
  0x000000010c4b465b: addq   $0x1,0x1d8(%rdx)
  0x000000010c4b4663: jmpq   0x000000010c4b46ce
  0x000000010c4b4668: cmp    0x1e0(%rdx),%rax
  0x000000010c4b466f: jne    0x000000010c4b467e
  0x000000010c4b4671: addq   $0x1,0x1e8(%rdx)
  0x000000010c4b4679: jmpq   0x000000010c4b46ce
  0x000000010c4b467e: cmpq   $0x0,0x1d0(%rdx)
  0x000000010c4b4689: jne    0x000000010c4b46a2
  0x000000010c4b468b: mov    %rax,0x1d0(%rdx)
  0x000000010c4b4692: movq   $0x1,0x1d8(%rdx)
  0x000000010c4b469d: jmpq   0x000000010c4b46ce
  0x000000010c4b46a2: cmpq   $0x0,0x1e0(%rdx)
  0x000000010c4b46ad: jne    0x000000010c4b46c6
  0x000000010c4b46af: mov    %rax,0x1e0(%rdx)
  0x000000010c4b46b6: movq   $0x1,0x1e8(%rdx)
  0x000000010c4b46c1: jmpq   0x000000010c4b46ce
  0x000000010c4b46c6: addq   $0x1,0x1c8(%rdx)
  0x000000010c4b46ce: movabs $0x124ec0980,%rdx  ;   {metadata(method data for {method} {0x0000000124d377b8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010c4b46d8: mov    0xdc(%rdx),%esi
  0x000000010c4b46de: add    $0x8,%esi
  0x000000010c4b46e1: mov    %esi,0xdc(%rdx)
  0x000000010c4b46e7: movabs $0x124d377b8,%rdx  ;   {metadata({method} {0x0000000124d377b8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010c4b46f1: and    $0x7ffff8,%esi
  0x000000010c4b46f7: cmp    $0x0,%esi
  0x000000010c4b46fa: je     0x000000010c4b48e9
  0x000000010c4b4700: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010c4b470a: mov    0x60(%r15),%rax
  0x000000010c4b470e: lea    0x18(%rax),%rdi
  0x000000010c4b4712: cmp    0x70(%r15),%rdi
  0x000000010c4b4716: ja     0x000000010c4b4900
  0x000000010c4b471c: mov    %rdi,0x60(%r15)
  0x000000010c4b4720: mov    0xa8(%rdx),%rcx
  0x000000010c4b4727: mov    %rcx,(%rax)
  0x000000010c4b472a: mov    %rdx,%rcx
  0x000000010c4b472d: shr    $0x3,%rcx
  0x000000010c4b4731: mov    %ecx,0x8(%rax)
  0x000000010c4b4734: xor    %rcx,%rcx
  0x000000010c4b4737: mov    %ecx,0xc(%rax)
  0x000000010c4b473a: xor    %rcx,%rcx
  0x000000010c4b473d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010c4b4741: mov    0x78(%rsp),%rdx
  0x000000010c4b4746: mov    0x10(%rdx),%ecx
  0x000000010c4b4749: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010c4b474d: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010c4b4751: mov    %rax,%rdx
  0x000000010c4b4754: movabs $0x124ec0980,%rsi  ;   {metadata(method data for {method} {0x0000000124d377b8} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010c4b475e: addq   $0x1,0x108(%rsi)
  0x000000010c4b4766: mov    %rcx,%rdx
  0x000000010c4b4769: mov    $0x0,%ecx
  0x000000010c4b476e: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010c4b4771: mov    %rax,0x90(%rsp)
  0x000000010c4b4779: nop
  0x000000010c4b477a: nop
  0x000000010c4b477b: nop
  0x000000010c4b477c: nop
  0x000000010c4b477d: nop
  0x000000010c4b477e: nop
  0x000000010c4b477f: callq  0x000000010c3ed020  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010c4b4784: mov    0x88(%rsp),%rax
  0x000000010c4b478c: movabs $0x124ebeba0,%rdx  ;   {metadata(method data for {method} {0x0000000124dd86b8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010c4b4796: addq   $0x1,0x1f8(%rdx)
  0x000000010c4b479e: mov    0x90(%rsp),%rdx
  0x000000010c4b47a6: mov    0x88(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000010c4b47ae: nop
  0x000000010c4b47af: callq  0x000000010c3ed020  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010c4b47b4: mov    0x88(%rsp),%rax
  0x000000010c4b47bc: jmpq   0x000000010c4b4938
  0x000000010c4b47c1: mov    %rbx,0x8(%rsp)
  0x000000010c4b47c6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b47ce: callq  0x000000010c4a4f60  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000000010c4b47d3: jmpq   0x000000010c4b3f67
  0x000000010c4b47d8: callq  0x000000010c4a1aa0  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000010c4b47dd: jmpq   0x000000010c4b4021
  0x000000010c4b47e2: callq  0x000000010c4a0a40  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000010c4b47e7: mov    %rdx,0x8(%rsp)
  0x000000010c4b47ec: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b47f4: callq  0x000000010c4a4f60  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000010c4b47f9: jmpq   0x000000010c4b406c
  0x000000010c4b47fe: nop
  0x000000010c4b47ff: callq  0x000000010c3ed420  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000010c4b4804: jmpq   0x000000010c4b4150
  0x000000010c4b4809: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4b4813: mov    $0xa050f00,%eax
  0x000000010c4b4818: callq  0x000000010c4a3f60  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b481d: jmpq   0x000000010c4b4170
  0x000000010c4b4822: mov    %rdx,%rdx
  0x000000010c4b4825: callq  0x000000010c4a11a0  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b482a: jmpq   0x000000010c4b41b5
  0x000000010c4b482f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4b4839: mov    $0xa050f00,%eax
  0x000000010c4b483e: callq  0x000000010c4a3f60  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b4843: jmpq   0x000000010c4b41b8
  0x000000010c4b4848: mov    %rdx,%rdx
  0x000000010c4b484b: callq  0x000000010c4a11a0  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b4850: jmpq   0x000000010c4b4201
  0x000000010c4b4855: mov    %rbx,0x8(%rsp)
  0x000000010c4b485a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b4862: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b4867: jmpq   0x000000010c4b4248
  0x000000010c4b486c: mov    %rbx,0x8(%rsp)
  0x000000010c4b4871: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b4879: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b487e: jmpq   0x000000010c4b428f
  0x000000010c4b4883: mov    %rbx,0x8(%rsp)
  0x000000010c4b4888: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b4890: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b4895: jmpq   0x000000010c4b42d6
  0x000000010c4b489a: callq  0x000000010c4a1aa0  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b489f: jmpq   0x000000010c4b4355
  0x000000010c4b48a4: mov    %rdx,0x8(%rsp)
  0x000000010c4b48a9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b48b1: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b48b6: jmpq   0x000000010c4b4437
  0x000000010c4b48bb: mov    %rdx,0x8(%rsp)
  0x000000010c4b48c0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b48c8: callq  0x000000010c4a4f60  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b48cd: jmpq   0x000000010c4b4520
  0x000000010c4b48d2: mov    %rdx,0x8(%rsp)
  0x000000010c4b48d7: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b48df: callq  0x000000010c4a4f60  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b48e4: jmpq   0x000000010c4b4610
  0x000000010c4b48e9: mov    %rdx,0x8(%rsp)
  0x000000010c4b48ee: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b48f6: callq  0x000000010c4a4f60  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b48fb: jmpq   0x000000010c4b4700
  0x000000010c4b4900: mov    %rdx,%rdx
  0x000000010c4b4903: callq  0x000000010c4a11a0  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010c4b4908: jmpq   0x000000010c4b4741
  0x000000010c4b490d: nop
  0x000000010c4b490e: nop
  0x000000010c4b490f: mov    0x2a8(%r15),%rax
  0x000000010c4b4916: movabs $0x0,%r10
  0x000000010c4b4920: mov    %r10,0x2a8(%r15)
  0x000000010c4b4927: movabs $0x0,%r10
  0x000000010c4b4931: mov    %r10,0x2b0(%r15)
  0x000000010c4b4938: add    $0xa0,%rsp
  0x000000010c4b493f: pop    %rbp
  0x000000010c4b4940: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4b4945: hlt    
  0x000000010c4b4946: hlt    
  0x000000010c4b4947: hlt    
  0x000000010c4b4948: hlt    
  0x000000010c4b4949: hlt    
  0x000000010c4b494a: hlt    
  0x000000010c4b494b: hlt    
  0x000000010c4b494c: hlt    
  0x000000010c4b494d: hlt    
  0x000000010c4b494e: hlt    
  0x000000010c4b494f: hlt    
  0x000000010c4b4950: hlt    
  0x000000010c4b4951: hlt    
  0x000000010c4b4952: hlt    
  0x000000010c4b4953: hlt    
  0x000000010c4b4954: hlt    
  0x000000010c4b4955: hlt    
  0x000000010c4b4956: hlt    
  0x000000010c4b4957: hlt    
  0x000000010c4b4958: hlt    
  0x000000010c4b4959: hlt    
  0x000000010c4b495a: hlt    
  0x000000010c4b495b: hlt    
  0x000000010c4b495c: hlt    
  0x000000010c4b495d: hlt    
  0x000000010c4b495e: hlt    
  0x000000010c4b495f: hlt    
[Stub Code]
  0x000000010c4b4960: nop                       ;   {no_reloc}
  0x000000010c4b4961: nop
  0x000000010c4b4962: nop
  0x000000010c4b4963: nop
  0x000000010c4b4964: nop
  0x000000010c4b4965: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b496f: jmpq   0x000000010c4b496f  ;   {runtime_call}
  0x000000010c4b4974: nop
  0x000000010c4b4975: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b497f: jmpq   0x000000010c4b497f  ;   {runtime_call}
  0x000000010c4b4984: nop
  0x000000010c4b4985: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b498f: jmpq   0x000000010c4b498f  ;   {runtime_call}
  0x000000010c4b4994: nop
  0x000000010c4b4995: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b499f: jmpq   0x000000010c4b499f  ;   {runtime_call}
  0x000000010c4b49a4: nop
  0x000000010c4b49a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b49af: jmpq   0x000000010c4b49af  ;   {runtime_call}
  0x000000010c4b49b4: nop
  0x000000010c4b49b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b49bf: jmpq   0x000000010c4b49bf  ;   {runtime_call}
[Exception Handler]
  0x000000010c4b49c4: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4b49c9: mov    %rsp,-0x28(%rsp)
  0x000000010c4b49ce: sub    $0x80,%rsp
  0x000000010c4b49d5: mov    %rax,0x78(%rsp)
  0x000000010c4b49da: mov    %rcx,0x70(%rsp)
  0x000000010c4b49df: mov    %rdx,0x68(%rsp)
  0x000000010c4b49e4: mov    %rbx,0x60(%rsp)
  0x000000010c4b49e9: mov    %rbp,0x50(%rsp)
  0x000000010c4b49ee: mov    %rsi,0x48(%rsp)
  0x000000010c4b49f3: mov    %rdi,0x40(%rsp)
  0x000000010c4b49f8: mov    %r8,0x38(%rsp)
  0x000000010c4b49fd: mov    %r9,0x30(%rsp)
  0x000000010c4b4a02: mov    %r10,0x28(%rsp)
  0x000000010c4b4a07: mov    %r11,0x20(%rsp)
  0x000000010c4b4a0c: mov    %r12,0x18(%rsp)
  0x000000010c4b4a11: mov    %r13,0x10(%rsp)
  0x000000010c4b4a16: mov    %r14,0x8(%rsp)
  0x000000010c4b4a1b: mov    %r15,(%rsp)
  0x000000010c4b4a1f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4b4a29: movabs $0x10c4b49c9,%rsi  ;   {internal_word}
  0x000000010c4b4a33: mov    %rsp,%rdx
  0x000000010c4b4a36: and    $0xfffffffffffffff0,%rsp
  0x000000010c4b4a3a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4b4a3f: hlt    
[Deopt Handler Code]
  0x000000010c4b4a40: movabs $0x10c4b4a40,%r10  ;   {section_word}
  0x000000010c4b4a4a: push   %r10
  0x000000010c4b4a4c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4b4a51: hlt    
  0x000000010c4b4a52: hlt    
  0x000000010c4b4a53: hlt    
  0x000000010c4b4a54: hlt    
  0x000000010c4b4a55: hlt    
  0x000000010c4b4a56: hlt    
  0x000000010c4b4a57: hlt    
Decoding compiled method 0x000000010c4b2590:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x000000010c4b2760: mov    0x8(%rsi),%r10d
  0x000000010c4b2764: shl    $0x3,%r10
  0x000000010c4b2768: cmp    %rax,%r10
  0x000000010c4b276b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4b2771: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4b277c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4b2780: mov    %eax,-0x14000(%rsp)
  0x000000010c4b2787: push   %rbp
  0x000000010c4b2788: sub    $0x60,%rsp
  0x000000010c4b278c: movabs $0x124ec0ab0,%rdi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b2796: mov    0xdc(%rdi),%ebx
  0x000000010c4b279c: add    $0x8,%ebx
  0x000000010c4b279f: mov    %ebx,0xdc(%rdi)
  0x000000010c4b27a5: movabs $0x124cc11a0,%rdi  ;   {metadata({method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b27af: and    $0x1ff8,%ebx
  0x000000010c4b27b5: cmp    $0x0,%ebx
  0x000000010c4b27b8: je     0x000000010c4b2a86  ;*aload_0
                                                ; - java.lang.String::<init>@0 (line 190)

  0x000000010c4b27be: mov    %rsi,%rdi
  0x000000010c4b27c1: movabs $0x124ec0ab0,%rbx  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b27cb: addq   $0x1,0x108(%rbx)
  0x000000010c4b27d3: movabs $0x124e34108,%rdi  ;   {metadata(method data for {method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010c4b27dd: mov    0xdc(%rdi),%ebx
  0x000000010c4b27e3: add    $0x8,%ebx
  0x000000010c4b27e6: mov    %ebx,0xdc(%rdi)
  0x000000010c4b27ec: movabs $0x124cbe480,%rdi  ;   {metadata({method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010c4b27f6: and    $0x7ffff8,%ebx
  0x000000010c4b27fc: cmp    $0x0,%ebx
  0x000000010c4b27ff: je     0x000000010c4b2a9d
  0x000000010c4b2805: cmp    $0x0,%ecx
  0x000000010c4b2808: movabs $0x124ec0ab0,%rdi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b2812: movabs $0x118,%rbx
  0x000000010c4b281c: jge    0x000000010c4b282c
  0x000000010c4b2822: movabs $0x128,%rbx
  0x000000010c4b282c: mov    (%rdi,%rbx,1),%rax
  0x000000010c4b2830: lea    0x1(%rax),%rax
  0x000000010c4b2834: mov    %rax,(%rdi,%rbx,1)
  0x000000010c4b2838: jl     0x000000010c4b2a46  ;*ifge
                                                ; - java.lang.String::<init>@5 (line 191)

  0x000000010c4b283e: cmp    $0x0,%r8d
  0x000000010c4b2842: movabs $0x124ec0ab0,%rdi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b284c: movabs $0x148,%rbx
  0x000000010c4b2856: jg     0x000000010c4b2866
  0x000000010c4b285c: movabs $0x158,%rbx
  0x000000010c4b2866: mov    (%rdi,%rbx,1),%rax
  0x000000010c4b286a: lea    0x1(%rax),%rax
  0x000000010c4b286e: mov    %rax,(%rdi,%rbx,1)
  0x000000010c4b2872: jg     0x000000010c4b28ed  ;*ifgt
                                                ; - java.lang.String::<init>@18 (line 194)

  0x000000010c4b2878: cmp    $0x0,%r8d
  0x000000010c4b287c: movabs $0x124ec0ab0,%rdi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b2886: movabs $0x168,%rbx
  0x000000010c4b2890: jge    0x000000010c4b28a0
  0x000000010c4b2896: movabs $0x178,%rbx
  0x000000010c4b28a0: mov    (%rdi,%rbx,1),%rax
  0x000000010c4b28a4: lea    0x1(%rax),%rax
  0x000000010c4b28a8: mov    %rax,(%rdi,%rbx,1)
  0x000000010c4b28ac: jl     0x000000010c4b2a06  ;*ifge
                                                ; - java.lang.String::<init>@22 (line 195)

  0x000000010c4b28b2: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ; implicit exception: dispatches to 0x000000010c4b2ab4
  0x000000010c4b28b5: cmp    %edi,%ecx
  0x000000010c4b28b7: movabs $0x124ec0ab0,%rdi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b28c1: movabs $0x198,%rbx
  0x000000010c4b28cb: jg     0x000000010c4b28db
  0x000000010c4b28d1: movabs $0x1a8,%rbx
  0x000000010c4b28db: mov    (%rdi,%rbx,1),%rax
  0x000000010c4b28df: lea    0x1(%rax),%rax
  0x000000010c4b28e3: mov    %rax,(%rdi,%rbx,1)
  0x000000010c4b28e7: jle    0x000000010c4b2982  ;*if_icmpgt
                                                ; - java.lang.String::<init>@37 (line 198)

  0x000000010c4b28ed: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ; implicit exception: dispatches to 0x000000010c4b2ab9
  0x000000010c4b28f0: sub    %r8d,%edi
  0x000000010c4b28f3: cmp    %edi,%ecx
  0x000000010c4b28f5: movabs $0x124ec0ab0,%rdi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b28ff: movabs $0x1b8,%rbx
  0x000000010c4b2909: jle    0x000000010c4b2919
  0x000000010c4b290f: movabs $0x1c8,%rbx
  0x000000010c4b2919: mov    (%rdi,%rbx,1),%rax
  0x000000010c4b291d: lea    0x1(%rax),%rax
  0x000000010c4b2921: mov    %rax,(%rdi,%rbx,1)
  0x000000010c4b2925: jg     0x000000010c4b29bc  ;*if_icmple
                                                ; - java.lang.String::<init>@55 (line 204)

  0x000000010c4b292b: mov    %rsi,0x38(%rsp)
  0x000000010c4b2930: movabs $0x124ec0ab0,%rdi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b293a: addq   $0x1,0x1e8(%rdi)
  0x000000010c4b2942: add    %ecx,%r8d
  0x000000010c4b2945: mov    %rdx,%rsi
  0x000000010c4b2948: mov    %rcx,%rdx
  0x000000010c4b294b: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)

  0x000000010c4b294e: nop
  0x000000010c4b294f: callq  0x000000010c3ed420  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)
                                                ;   {static_call}
  0x000000010c4b2954: mov    0x38(%rsp),%rsi
  0x000000010c4b2959: mov    %rax,%r10
  0x000000010c4b295c: shr    $0x3,%r10
  0x000000010c4b2960: mov    %r10d,0xc(%rsi)
  0x000000010c4b2964: shr    $0x9,%rsi
  0x000000010c4b2968: movabs $0x118167000,%rdx
  0x000000010c4b2972: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@78 (line 207)

  0x000000010c4b2976: add    $0x60,%rsp
  0x000000010c4b297a: pop    %rbp
  0x000000010c4b297b: test   %eax,-0x2186881(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b2981: retq                      ;*return
                                                ; - java.lang.String::<init>@81 (line 208)

  0x000000010c4b2982: movabs $0x76ab0a678,%rdx  ;   {oop("")}
  0x000000010c4b298c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x000000010c4b2abe
  0x000000010c4b298f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)

  0x000000010c4b2993: mov    %rdx,%r10
  0x000000010c4b2996: shr    $0x3,%r10
  0x000000010c4b299a: mov    %r10d,0xc(%rsi)
  0x000000010c4b299e: shr    $0x9,%rsi
  0x000000010c4b29a2: movabs $0x118167000,%rdx
  0x000000010c4b29ac: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@46 (line 199)

  0x000000010c4b29b0: add    $0x60,%rsp
  0x000000010c4b29b4: pop    %rbp
  0x000000010c4b29b5: test   %eax,-0x21868bb(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b29bb: retq                      ;*return
                                                ; - java.lang.String::<init>@49 (line 200)

  0x000000010c4b29bc: nopl   0x0(%rax)
  0x000000010c4b29c0: jmpq   0x000000010c4b2ad2  ;   {no_reloc}
  0x000000010c4b29c5: add    %al,(%rax)
  0x000000010c4b29c7: add    %al,(%rax)
  0x000000010c4b29c9: add    %ch,%cl
  0x000000010c4b29cb: or     $0x48000001,%eax   ;*new  ; - java.lang.String::<init>@58 (line 205)

  0x000000010c4b29d0: mov    %eax,%edx
  0x000000010c4b29d2: movabs $0x124ec0ab0,%rsi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b29dc: addq   $0x1,0x1d8(%rsi)
  0x000000010c4b29e4: add    %ecx,%r8d
  0x000000010c4b29e7: mov    %r8,%rdx
  0x000000010c4b29ea: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)

  0x000000010c4b29ed: mov    %rax,0x40(%rsp)
  0x000000010c4b29f2: nop
  0x000000010c4b29f3: nop
  0x000000010c4b29f4: nop
  0x000000010c4b29f5: nop
  0x000000010c4b29f6: nop
  0x000000010c4b29f7: callq  0x000000010c3ed020  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)
                                                ;   {optimized virtual_call}
  0x000000010c4b29fc: mov    0x40(%rsp),%rax
  0x000000010c4b2a01: jmpq   0x000000010c4b2b60  ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x000000010c4b2a06: xchg   %ax,%ax
  0x000000010c4b2a08: jmpq   0x000000010c4b2af8  ;   {no_reloc}
  0x000000010c4b2a0d: add    %al,(%rax)
  0x000000010c4b2a0f: add    %al,(%rax)
  0x000000010c4b2a11: add    %ch,%cl
  0x000000010c4b2a13: jmp    0x000000010c4b2a15
  0x000000010c4b2a15: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@25 (line 196)

  0x000000010c4b2a17: mov    %rax,%rdx
  0x000000010c4b2a1a: movabs $0x124ec0ab0,%rsi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b2a24: addq   $0x1,0x188(%rsi)
  0x000000010c4b2a2c: mov    %r8,%rdx
  0x000000010c4b2a2f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)

  0x000000010c4b2a32: mov    %rax,0x48(%rsp)
  0x000000010c4b2a37: callq  0x000000010c3ed020  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)
                                                ;   {optimized virtual_call}
  0x000000010c4b2a3c: mov    0x48(%rsp),%rax
  0x000000010c4b2a41: jmpq   0x000000010c4b2b60  ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x000000010c4b2a46: xchg   %ax,%ax
  0x000000010c4b2a48: jmpq   0x000000010c4b2b1e  ;   {no_reloc}
  0x000000010c4b2a4d: add    %al,(%rax)
  0x000000010c4b2a4f: add    %al,(%rax)
  0x000000010c4b2a51: add    %ch,%cl
  0x000000010c4b2a53: roll   (%rax)
  0x000000010c4b2a55: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@8 (line 192)

  0x000000010c4b2a57: mov    %rax,%rdx
  0x000000010c4b2a5a: movabs $0x124ec0ab0,%rsi  ;   {metadata(method data for {method} {0x0000000124cc11a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000010c4b2a64: addq   $0x1,0x138(%rsi)
  0x000000010c4b2a6c: mov    %rcx,%rdx
  0x000000010c4b2a6f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)

  0x000000010c4b2a72: mov    %rax,0x50(%rsp)
  0x000000010c4b2a77: callq  0x000000010c3ed020  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000000010c4b2a7c: mov    0x50(%rsp),%rax
  0x000000010c4b2a81: jmpq   0x000000010c4b2b60
  0x000000010c4b2a86: mov    %rdi,0x8(%rsp)
  0x000000010c4b2a8b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b2a93: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 190)
                                                ;   {runtime_call}
  0x000000010c4b2a98: jmpq   0x000000010c4b27be
  0x000000010c4b2a9d: mov    %rdi,0x8(%rsp)
  0x000000010c4b2aa2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b2aaa: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 190)
                                                ;   {runtime_call}
  0x000000010c4b2aaf: jmpq   0x000000010c4b2805
  0x000000010c4b2ab4: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ;   {runtime_call}
  0x000000010c4b2ab9: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ;   {runtime_call}
  0x000000010c4b2abe: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)
                                                ;   {runtime_call}
  0x000000010c4b2ac3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4b2acd: mov    $0xa050f00,%eax
  0x000000010c4b2ad2: callq  0x000000010c4a3f60  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x000000010c4b2ad7: jmpq   0x000000010c4b29c0
  0x000000010c4b2adc: mov    %rdx,%rdx
  0x000000010c4b2adf: callq  0x000000010c4a0ee0  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x000000010c4b2ae4: jmpq   0x000000010c4b29cf
  0x000000010c4b2ae9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4b2af3: mov    $0xa050f00,%eax
  0x000000010c4b2af8: callq  0x000000010c4a3f60  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x000000010c4b2afd: jmpq   0x000000010c4b2a08
  0x000000010c4b2b02: mov    %rdx,%rdx
  0x000000010c4b2b05: callq  0x000000010c4a0ee0  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x000000010c4b2b0a: jmpq   0x000000010c4b2a17
  0x000000010c4b2b0f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4b2b19: mov    $0xa050f00,%eax
  0x000000010c4b2b1e: callq  0x000000010c4a3f60  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x000000010c4b2b23: jmpq   0x000000010c4b2a48
  0x000000010c4b2b28: mov    %rdx,%rdx
  0x000000010c4b2b2b: callq  0x000000010c4a0ee0  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x000000010c4b2b30: jmpq   0x000000010c4b2a57
  0x000000010c4b2b35: nop
  0x000000010c4b2b36: nop
  0x000000010c4b2b37: mov    0x2a8(%r15),%rax
  0x000000010c4b2b3e: movabs $0x0,%r10
  0x000000010c4b2b48: mov    %r10,0x2a8(%r15)
  0x000000010c4b2b4f: movabs $0x0,%r10
  0x000000010c4b2b59: mov    %r10,0x2b0(%r15)
  0x000000010c4b2b60: add    $0x60,%rsp
  0x000000010c4b2b64: pop    %rbp
  0x000000010c4b2b65: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4b2b6a: hlt    
  0x000000010c4b2b6b: hlt    
  0x000000010c4b2b6c: hlt    
  0x000000010c4b2b6d: hlt    
  0x000000010c4b2b6e: hlt    
  0x000000010c4b2b6f: hlt    
  0x000000010c4b2b70: hlt    
  0x000000010c4b2b71: hlt    
  0x000000010c4b2b72: hlt    
  0x000000010c4b2b73: hlt    
  0x000000010c4b2b74: hlt    
  0x000000010c4b2b75: hlt    
  0x000000010c4b2b76: hlt    
  0x000000010c4b2b77: hlt    
  0x000000010c4b2b78: hlt    
  0x000000010c4b2b79: hlt    
  0x000000010c4b2b7a: hlt    
  0x000000010c4b2b7b: hlt    
  0x000000010c4b2b7c: hlt    
  0x000000010c4b2b7d: hlt    
  0x000000010c4b2b7e: hlt    
  0x000000010c4b2b7f: hlt    
[Stub Code]
  0x000000010c4b2b80: nop                       ;   {no_reloc}
  0x000000010c4b2b81: nop
  0x000000010c4b2b82: nop
  0x000000010c4b2b83: nop
  0x000000010c4b2b84: nop
  0x000000010c4b2b85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b2b8f: jmpq   0x000000010c4b2b8f  ;   {runtime_call}
  0x000000010c4b2b94: nop
  0x000000010c4b2b95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b2b9f: jmpq   0x000000010c4b2b9f  ;   {runtime_call}
  0x000000010c4b2ba4: nop
  0x000000010c4b2ba5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b2baf: jmpq   0x000000010c4b2baf  ;   {runtime_call}
  0x000000010c4b2bb4: nop
  0x000000010c4b2bb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b2bbf: jmpq   0x000000010c4b2bbf  ;   {runtime_call}
[Exception Handler]
  0x000000010c4b2bc4: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4b2bc9: mov    %rsp,-0x28(%rsp)
  0x000000010c4b2bce: sub    $0x80,%rsp
  0x000000010c4b2bd5: mov    %rax,0x78(%rsp)
  0x000000010c4b2bda: mov    %rcx,0x70(%rsp)
  0x000000010c4b2bdf: mov    %rdx,0x68(%rsp)
  0x000000010c4b2be4: mov    %rbx,0x60(%rsp)
  0x000000010c4b2be9: mov    %rbp,0x50(%rsp)
  0x000000010c4b2bee: mov    %rsi,0x48(%rsp)
  0x000000010c4b2bf3: mov    %rdi,0x40(%rsp)
  0x000000010c4b2bf8: mov    %r8,0x38(%rsp)
  0x000000010c4b2bfd: mov    %r9,0x30(%rsp)
  0x000000010c4b2c02: mov    %r10,0x28(%rsp)
  0x000000010c4b2c07: mov    %r11,0x20(%rsp)
  0x000000010c4b2c0c: mov    %r12,0x18(%rsp)
  0x000000010c4b2c11: mov    %r13,0x10(%rsp)
  0x000000010c4b2c16: mov    %r14,0x8(%rsp)
  0x000000010c4b2c1b: mov    %r15,(%rsp)
  0x000000010c4b2c1f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4b2c29: movabs $0x10c4b2bc9,%rsi  ;   {internal_word}
  0x000000010c4b2c33: mov    %rsp,%rdx
  0x000000010c4b2c36: and    $0xfffffffffffffff0,%rsp
  0x000000010c4b2c3a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4b2c3f: hlt    
[Deopt Handler Code]
  0x000000010c4b2c40: movabs $0x10c4b2c40,%r10  ;   {section_word}
  0x000000010c4b2c4a: push   %r10
  0x000000010c4b2c4c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4b2c51: hlt    
  0x000000010c4b2c52: hlt    
  0x000000010c4b2c53: hlt    
  0x000000010c4b2c54: hlt    
  0x000000010c4b2c55: hlt    
  0x000000010c4b2c56: hlt    
  0x000000010c4b2c57: hlt    
Decoding compiled method 0x000000010c4b5a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124ce64d0} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/Reference'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4b5ba0: mov    0x8(%rsi),%r10d
  0x000000010c4b5ba4: shl    $0x3,%r10
  0x000000010c4b5ba8: cmp    %rax,%r10
  0x000000010c4b5bab: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4b5bb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4b5bbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4b5bc0: mov    %eax,-0x14000(%rsp)
  0x000000010c4b5bc7: push   %rbp
  0x000000010c4b5bc8: sub    $0x30,%rsp
  0x000000010c4b5bcc: mov    0xc(%rsi),%eax
  0x000000010c4b5bcf: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x000000010c4b5bd3: add    $0x30,%rsp
  0x000000010c4b5bd7: pop    %rbp
  0x000000010c4b5bd8: test   %eax,-0x2189ade(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b5bde: retq   
  0x000000010c4b5bdf: nop
  0x000000010c4b5be0: nop
  0x000000010c4b5be1: mov    0x2a8(%r15),%rax
  0x000000010c4b5be8: movabs $0x0,%r10
  0x000000010c4b5bf2: mov    %r10,0x2a8(%r15)
  0x000000010c4b5bf9: movabs $0x0,%r10
  0x000000010c4b5c03: mov    %r10,0x2b0(%r15)
  0x000000010c4b5c0a: add    $0x30,%rsp
  0x000000010c4b5c0e: pop    %rbp
  0x000000010c4b5c0f: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4b5c14: hlt    
  0x000000010c4b5c15: hlt    
  0x000000010c4b5c16: hlt    
  0x000000010c4b5c17: hlt    
  0x000000010c4b5c18: hlt    
  0x000000010c4b5c19: hlt    
  0x000000010c4b5c1a: hlt    
  0x000000010c4b5c1b: hlt    
  0x000000010c4b5c1c: hlt    
  0x000000010c4b5c1d: hlt    
  0x000000010c4b5c1e: hlt    
  0x000000010c4b5c1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4b5c20: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4b5c25: mov    %rsp,-0x28(%rsp)
  0x000000010c4b5c2a: sub    $0x80,%rsp
  0x000000010c4b5c31: mov    %rax,0x78(%rsp)
  0x000000010c4b5c36: mov    %rcx,0x70(%rsp)
  0x000000010c4b5c3b: mov    %rdx,0x68(%rsp)
  0x000000010c4b5c40: mov    %rbx,0x60(%rsp)
  0x000000010c4b5c45: mov    %rbp,0x50(%rsp)
  0x000000010c4b5c4a: mov    %rsi,0x48(%rsp)
  0x000000010c4b5c4f: mov    %rdi,0x40(%rsp)
  0x000000010c4b5c54: mov    %r8,0x38(%rsp)
  0x000000010c4b5c59: mov    %r9,0x30(%rsp)
  0x000000010c4b5c5e: mov    %r10,0x28(%rsp)
  0x000000010c4b5c63: mov    %r11,0x20(%rsp)
  0x000000010c4b5c68: mov    %r12,0x18(%rsp)
  0x000000010c4b5c6d: mov    %r13,0x10(%rsp)
  0x000000010c4b5c72: mov    %r14,0x8(%rsp)
  0x000000010c4b5c77: mov    %r15,(%rsp)
  0x000000010c4b5c7b: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4b5c85: movabs $0x10c4b5c25,%rsi  ;   {internal_word}
  0x000000010c4b5c8f: mov    %rsp,%rdx
  0x000000010c4b5c92: and    $0xfffffffffffffff0,%rsp
  0x000000010c4b5c96: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4b5c9b: hlt    
[Deopt Handler Code]
  0x000000010c4b5c9c: movabs $0x10c4b5c9c,%r10  ;   {section_word}
  0x000000010c4b5ca6: push   %r10
  0x000000010c4b5ca8: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4b5cad: hlt    
  0x000000010c4b5cae: hlt    
  0x000000010c4b5caf: hlt    
Decoding compiled method 0x000000010c4b7ad0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000124dc2710} 'access$400' '(Ljava/lang/ThreadLocal;)I' in 'java/lang/ThreadLocal'
  # parm0:    rsi:rsi   = 'java/lang/ThreadLocal'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4b7c20: mov    %eax,-0x14000(%rsp)
  0x000000010c4b7c27: push   %rbp
  0x000000010c4b7c28: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.ThreadLocal::access$400@0 (line 74)

  0x000000010c4b7c2c: mov    0xc(%rsi),%eax     ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; implicit exception: dispatches to 0x000000010c4b7c3b
  0x000000010c4b7c2f: add    $0x30,%rsp
  0x000000010c4b7c33: pop    %rbp
  0x000000010c4b7c34: test   %eax,-0x218bb3a(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b7c3a: retq   
  0x000000010c4b7c3b: callq  0x000000010c4a0a40  ; OopMap{off=32}
                                                ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ;   {runtime_call}
  0x000000010c4b7c40: nop
  0x000000010c4b7c41: nop
  0x000000010c4b7c42: mov    0x2a8(%r15),%rax
  0x000000010c4b7c49: movabs $0x0,%r10
  0x000000010c4b7c53: mov    %r10,0x2a8(%r15)
  0x000000010c4b7c5a: movabs $0x0,%r10
  0x000000010c4b7c64: mov    %r10,0x2b0(%r15)
  0x000000010c4b7c6b: add    $0x30,%rsp
  0x000000010c4b7c6f: pop    %rbp
  0x000000010c4b7c70: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4b7c75: hlt    
  0x000000010c4b7c76: hlt    
  0x000000010c4b7c77: hlt    
  0x000000010c4b7c78: hlt    
  0x000000010c4b7c79: hlt    
  0x000000010c4b7c7a: hlt    
  0x000000010c4b7c7b: hlt    
  0x000000010c4b7c7c: hlt    
  0x000000010c4b7c7d: hlt    
  0x000000010c4b7c7e: hlt    
  0x000000010c4b7c7f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4b7c80: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4b7c85: mov    %rsp,-0x28(%rsp)
  0x000000010c4b7c8a: sub    $0x80,%rsp
  0x000000010c4b7c91: mov    %rax,0x78(%rsp)
  0x000000010c4b7c96: mov    %rcx,0x70(%rsp)
  0x000000010c4b7c9b: mov    %rdx,0x68(%rsp)
  0x000000010c4b7ca0: mov    %rbx,0x60(%rsp)
  0x000000010c4b7ca5: mov    %rbp,0x50(%rsp)
  0x000000010c4b7caa: mov    %rsi,0x48(%rsp)
  0x000000010c4b7caf: mov    %rdi,0x40(%rsp)
  0x000000010c4b7cb4: mov    %r8,0x38(%rsp)
  0x000000010c4b7cb9: mov    %r9,0x30(%rsp)
  0x000000010c4b7cbe: mov    %r10,0x28(%rsp)
  0x000000010c4b7cc3: mov    %r11,0x20(%rsp)
  0x000000010c4b7cc8: mov    %r12,0x18(%rsp)
  0x000000010c4b7ccd: mov    %r13,0x10(%rsp)
  0x000000010c4b7cd2: mov    %r14,0x8(%rsp)
  0x000000010c4b7cd7: mov    %r15,(%rsp)
  0x000000010c4b7cdb: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4b7ce5: movabs $0x10c4b7c85,%rsi  ;   {internal_word}
  0x000000010c4b7cef: mov    %rsp,%rdx
  0x000000010c4b7cf2: and    $0xfffffffffffffff0,%rsp
  0x000000010c4b7cf6: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4b7cfb: hlt    
[Deopt Handler Code]
  0x000000010c4b7cfc: movabs $0x10c4b7cfc,%r10  ;   {section_word}
  0x000000010c4b7d06: push   %r10
  0x000000010c4b7d08: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4b7d0d: hlt    
  0x000000010c4b7d0e: hlt    
  0x000000010c4b7d0f: hlt    
Decoding compiled method 0x000000010c4b7dd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader'
  # this:     rsi:rsi   = 'java/io/BufferedReader'
  # parm0:    rdx       = boolean
  #           [sp+0xf0]  (sp of caller)
  0x000000010c4b8080: mov    0x8(%rsi),%r10d
  0x000000010c4b8084: shl    $0x3,%r10
  0x000000010c4b8088: cmp    %rax,%r10
  0x000000010c4b808b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4b8091: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4b809c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4b80a0: mov    %eax,-0x14000(%rsp)
  0x000000010c4b80a7: push   %rbp
  0x000000010c4b80a8: sub    $0xe0,%rsp
  0x000000010c4b80af: mov    %rsi,0x70(%rsp)
  0x000000010c4b80b4: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b80be: mov    0xdc(%rax),%edi
  0x000000010c4b80c4: add    $0x8,%edi
  0x000000010c4b80c7: mov    %edi,0xdc(%rax)
  0x000000010c4b80cd: movabs $0x124e44d58,%rax  ;   {metadata({method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b80d7: and    $0x1ff8,%edi
  0x000000010c4b80dd: cmp    $0x0,%edi
  0x000000010c4b80e0: je     0x000000010c4b93ba  ;*aconst_null
                                                ; - java.io.BufferedReader::readLine@0 (line 313)

  0x000000010c4b80e6: mov    0xc(%rsi),%edi
  0x000000010c4b80e9: shl    $0x3,%rdi          ;*getfield lock
                                                ; - java.io.BufferedReader::readLine@3 (line 316)

  0x000000010c4b80ed: mov    %rdi,0x88(%rsp)
  0x000000010c4b80f5: lea    0xb0(%rsp),%rbx
  0x000000010c4b80fd: mov    %rdi,0x8(%rbx)
  0x000000010c4b8101: mov    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010c4b93d1
  0x000000010c4b8104: mov    %rax,%rcx
  0x000000010c4b8107: and    $0x7,%rcx
  0x000000010c4b810b: cmp    $0x5,%rcx
  0x000000010c4b810f: jne    0x000000010c4b8196
  0x000000010c4b8115: mov    0x8(%rdi),%ecx
  0x000000010c4b8118: shl    $0x3,%rcx
  0x000000010c4b811c: mov    0xa8(%rcx),%rcx
  0x000000010c4b8123: or     %r15,%rcx
  0x000000010c4b8126: xor    %rax,%rcx
  0x000000010c4b8129: and    $0xffffffffffffff87,%rcx
  0x000000010c4b812d: je     0x000000010c4b81be
  0x000000010c4b8133: test   $0x7,%rcx
  0x000000010c4b813a: jne    0x000000010c4b8183
  0x000000010c4b813c: test   $0x300,%rcx
  0x000000010c4b8143: jne    0x000000010c4b8162
  0x000000010c4b8145: and    $0x37f,%rax
  0x000000010c4b814c: mov    %rax,%rcx
  0x000000010c4b814f: or     %r15,%rcx
  0x000000010c4b8152: lock cmpxchg %rcx,(%rdi)
  0x000000010c4b8157: jne    0x000000010c4b93d6
  0x000000010c4b815d: jmpq   0x000000010c4b81be
  0x000000010c4b8162: mov    0x8(%rdi),%ecx
  0x000000010c4b8165: shl    $0x3,%rcx
  0x000000010c4b8169: mov    0xa8(%rcx),%rcx
  0x000000010c4b8170: or     %r15,%rcx
  0x000000010c4b8173: lock cmpxchg %rcx,(%rdi)
  0x000000010c4b8178: jne    0x000000010c4b93d6
  0x000000010c4b817e: jmpq   0x000000010c4b81be
  0x000000010c4b8183: mov    0x8(%rdi),%ecx
  0x000000010c4b8186: shl    $0x3,%rcx
  0x000000010c4b818a: mov    0xa8(%rcx),%rcx
  0x000000010c4b8191: lock cmpxchg %rcx,(%rdi)
  0x000000010c4b8196: mov    (%rdi),%rax
  0x000000010c4b8199: or     $0x1,%rax
  0x000000010c4b819d: mov    %rax,(%rbx)
  0x000000010c4b81a0: lock cmpxchg %rbx,(%rdi)
  0x000000010c4b81a5: je     0x000000010c4b81be
  0x000000010c4b81ab: sub    %rsp,%rax
  0x000000010c4b81ae: and    $0xfffffffffffff007,%rax
  0x000000010c4b81b5: mov    %rax,(%rbx)
  0x000000010c4b81b8: jne    0x000000010c4b93d6  ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)

  0x000000010c4b81be: mov    %rsi,%rbx
  0x000000010c4b81c1: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b81cb: addq   $0x1,0x108(%rax)
  0x000000010c4b81d3: movabs $0x124efeac8,%rbx  ;   {metadata(method data for {method} {0x0000000124e44630} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000010c4b81dd: mov    0xdc(%rbx),%eax
  0x000000010c4b81e3: add    $0x8,%eax
  0x000000010c4b81e6: mov    %eax,0xdc(%rbx)
  0x000000010c4b81ec: movabs $0x124e44630,%rbx  ;   {metadata({method} {0x0000000124e44630} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000010c4b81f6: and    $0x7ffff8,%eax
  0x000000010c4b81fc: cmp    $0x0,%eax
  0x000000010c4b81ff: je     0x000000010c4b93e9
  0x000000010c4b8205: mov    0x28(%rsi),%ebx
  0x000000010c4b8208: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.BufferedReader::ensureOpen@1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010c4b820c: cmp    $0x0,%rbx
  0x000000010c4b8210: movabs $0x124efeac8,%rbx  ;   {metadata(method data for {method} {0x0000000124e44630} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000010c4b821a: movabs $0x108,%rax
  0x000000010c4b8224: jne    0x000000010c4b8234
  0x000000010c4b822a: movabs $0x118,%rax
  0x000000010c4b8234: mov    (%rbx,%rax,1),%rcx
  0x000000010c4b8238: lea    0x1(%rcx),%rcx
  0x000000010c4b823c: mov    %rcx,(%rbx,%rax,1)
  0x000000010c4b8240: je     0x000000010c4b91bb  ;*ifnonnull
                                                ; - java.io.BufferedReader::ensureOpen@4 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010c4b8246: cmp    $0x0,%edx
  0x000000010c4b8249: movabs $0x124efe5f0,%rbx  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8253: movabs $0x118,%rax
  0x000000010c4b825d: jne    0x000000010c4b826d
  0x000000010c4b8263: movabs $0x128,%rax
  0x000000010c4b826d: mov    (%rbx,%rax,1),%rdx
  0x000000010c4b8271: lea    0x1(%rdx),%rdx
  0x000000010c4b8275: mov    %rdx,(%rbx,%rax,1)
  0x000000010c4b8279: jne    0x000000010c4b82bc  ;*ifne
                                                ; - java.io.BufferedReader::readLine@15 (line 318)

  0x000000010c4b827f: movsbl 0x24(%rsi),%ebx    ;*getfield skipLF
                                                ; - java.io.BufferedReader::readLine@19 (line 318)

  0x000000010c4b8283: cmp    $0x0,%ebx
  0x000000010c4b8286: movabs $0x124efe5f0,%rbx  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8290: movabs $0x138,%rax
  0x000000010c4b829a: je     0x000000010c4b82aa
  0x000000010c4b82a0: movabs $0x148,%rax
  0x000000010c4b82aa: mov    (%rbx,%rax,1),%rdx
  0x000000010c4b82ae: lea    0x1(%rdx),%rdx
  0x000000010c4b82b2: mov    %rdx,(%rbx,%rax,1)
  0x000000010c4b82b6: je     0x000000010c4b82d6  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@22 (line 318)

  0x000000010c4b82bc: movabs $0x124efe5f0,%rbx  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b82c6: incl   0x158(%rbx)
  0x000000010c4b82cc: mov    $0x1,%ebx
  0x000000010c4b82d1: jmpq   0x000000010c4b82db  ;*goto
                                                ; - java.io.BufferedReader::readLine@26 (line 318)

  0x000000010c4b82d6: mov    $0x0,%ebx          ;*istore
                                                ; - java.io.BufferedReader::readLine@30 (line 318)

  0x000000010c4b82db: movabs $0x0,%rax          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@32 (line 323)
                                                ;   {oop(NULL)}
  0x000000010c4b82e5: mov    %ebx,0x78(%rsp)
  0x000000010c4b82e9: mov    %rax,0x80(%rsp)
  0x000000010c4b82f1: nopl   0x0(%rax)
  0x000000010c4b82f8: mov    0x18(%rsi),%edx    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@33 (line 323)

  0x000000010c4b82fb: mov    0x14(%rsi),%ecx    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@37 (line 323)

  0x000000010c4b82fe: cmp    %ecx,%edx
  0x000000010c4b8300: movabs $0x124efe5f0,%rdx  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b830a: movabs $0x170,%rcx
  0x000000010c4b8314: jl     0x000000010c4b8324
  0x000000010c4b831a: movabs $0x180,%rcx
  0x000000010c4b8324: mov    (%rdx,%rcx,1),%r8
  0x000000010c4b8328: lea    0x1(%r8),%r8
  0x000000010c4b832c: mov    %r8,(%rdx,%rcx,1)
  0x000000010c4b8330: jl     0x000000010c4b8361  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@40 (line 323)

  0x000000010c4b8336: mov    %rsi,%rdx
  0x000000010c4b8339: movabs $0x124efe5f0,%rcx  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8343: addq   $0x1,0x190(%rcx)
  0x000000010c4b834b: mov    %rsi,%rdx
  0x000000010c4b834e: mov    %rdx,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)

  0x000000010c4b8351: nop
  0x000000010c4b8352: nop
  0x000000010c4b8353: nop
  0x000000010c4b8354: nop
  0x000000010c4b8355: nop
  0x000000010c4b8356: nop
  0x000000010c4b8357: callq  0x000000010c3ed020  ; OopMap{[112]=Oop [136]=Oop [128]=Oop [184]=Oop off=732}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)
                                                ;   {optimized virtual_call}
  0x000000010c4b835c: mov    0x70(%rsp),%rsi
  0x000000010c4b8361: mov    0x18(%rsi),%edx    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@48 (line 325)

  0x000000010c4b8364: mov    0x14(%rsi),%edi    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@52 (line 325)

  0x000000010c4b8367: cmp    %edi,%edx
  0x000000010c4b8369: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8373: movabs $0x1a0,%rcx
  0x000000010c4b837d: jl     0x000000010c4b838d
  0x000000010c4b8383: movabs $0x1b0,%rcx
  0x000000010c4b838d: mov    (%rax,%rcx,1),%rbx
  0x000000010c4b8391: lea    0x1(%rbx),%rbx
  0x000000010c4b8395: mov    %rbx,(%rax,%rcx,1)
  0x000000010c4b8399: jge    0x000000010c4b8e3a  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@55 (line 325)

  0x000000010c4b839f: mov    0x78(%rsp),%ebx
  0x000000010c4b83a3: cmp    $0x0,%ebx
  0x000000010c4b83a6: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b83b0: movabs $0x260,%rcx
  0x000000010c4b83ba: je     0x000000010c4b83ca
  0x000000010c4b83c0: movabs $0x270,%rcx
  0x000000010c4b83ca: mov    (%rax,%rcx,1),%rbx
  0x000000010c4b83ce: lea    0x1(%rbx),%rbx
  0x000000010c4b83d2: mov    %rbx,(%rax,%rcx,1)
  0x000000010c4b83d6: je     0x000000010c4b8432  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@90 (line 336)

  0x000000010c4b83dc: mov    0x2c(%rsi),%eax
  0x000000010c4b83df: shl    $0x3,%rax          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@94 (line 336)

  0x000000010c4b83e3: movslq %edx,%rcx
  0x000000010c4b83e6: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010c4b9400
  0x000000010c4b83e9: jae    0x000000010c4b940a
  0x000000010c4b83ef: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)

  0x000000010c4b83f4: cmp    $0xa,%eax
  0x000000010c4b83f7: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8401: movabs $0x280,%rcx
  0x000000010c4b840b: jne    0x000000010c4b841b
  0x000000010c4b8411: movabs $0x290,%rcx
  0x000000010c4b841b: mov    (%rax,%rcx,1),%rbx
  0x000000010c4b841f: lea    0x1(%rbx),%rbx
  0x000000010c4b8423: mov    %rbx,(%rax,%rcx,1)
  0x000000010c4b8427: jne    0x000000010c4b8432  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@104 (line 336)

  0x000000010c4b842d: inc    %edx
  0x000000010c4b842f: mov    %edx,0x18(%rsi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@114 (line 337)

  0x000000010c4b8432: movb   $0x0,0x24(%rsi)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@119 (line 338)

  0x000000010c4b8436: mov    0x18(%rsi),%r8d    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@126 (line 342)

  0x000000010c4b843a: mov    %r8,%r9
  0x000000010c4b843d: mov    $0x0,%edx
  0x000000010c4b8442: jmpq   0x000000010c4b851e  ;*iload
                                                ; - java.io.BufferedReader::readLine@131 (line 342)

  0x000000010c4b8447: nop
  0x000000010c4b8448: mov    0x2c(%rsi),%edx
  0x000000010c4b844b: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@141 (line 343)

  0x000000010c4b844f: movslq %r9d,%rax
  0x000000010c4b8452: cmp    0xc(%rdx),%r9d     ; implicit exception: dispatches to 0x000000010c4b9413
  0x000000010c4b8456: jae    0x000000010c4b941d
  0x000000010c4b845c: movzwl 0x10(%rdx,%rax,2),%edx  ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)

  0x000000010c4b8461: cmp    $0xa,%edx
  0x000000010c4b8464: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b846e: movabs $0x2c0,%rcx
  0x000000010c4b8478: je     0x000000010c4b8488
  0x000000010c4b847e: movabs $0x2d0,%rcx
  0x000000010c4b8488: mov    (%rax,%rcx,1),%rbx
  0x000000010c4b848c: lea    0x1(%rbx),%rbx
  0x000000010c4b8490: mov    %rbx,(%rax,%rcx,1)
  0x000000010c4b8494: je     0x000000010c4b8561  ;*if_icmpeq
                                                ; - java.io.BufferedReader::readLine@153 (line 344)

  0x000000010c4b849a: cmp    $0xd,%edx
  0x000000010c4b849d: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b84a7: movabs $0x2e0,%rcx
  0x000000010c4b84b1: jne    0x000000010c4b84c1
  0x000000010c4b84b7: movabs $0x2f0,%rcx
  0x000000010c4b84c1: mov    (%rax,%rcx,1),%rbx
  0x000000010c4b84c5: lea    0x1(%rbx),%rbx
  0x000000010c4b84c9: mov    %rbx,(%rax,%rcx,1)
  0x000000010c4b84cd: je     0x000000010c4b8561  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@160 (line 344)

  0x000000010c4b84d3: inc    %r9d
  0x000000010c4b84d6: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b84e0: mov    0xe0(%rax),%ecx
  0x000000010c4b84e6: add    $0x8,%ecx
  0x000000010c4b84e9: mov    %ecx,0xe0(%rax)
  0x000000010c4b84ef: movabs $0x124e44d58,%rax  ;   {metadata({method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b84f9: and    $0xfff8,%ecx
  0x000000010c4b84ff: cmp    $0x0,%ecx
  0x000000010c4b8502: je     0x000000010c4b9426  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop [184]=Oop off=1160}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x000000010c4b8508: test   %eax,-0x218c40e(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4b850e: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8518: incl   0x318(%rax)        ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x000000010c4b851e: cmp    %edi,%r9d
  0x000000010c4b8521: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b852b: movabs $0x2a0,%rcx
  0x000000010c4b8535: jge    0x000000010c4b8545
  0x000000010c4b853b: movabs $0x2b0,%rcx
  0x000000010c4b8545: mov    (%rax,%rcx,1),%rbx
  0x000000010c4b8549: lea    0x1(%rbx),%rbx
  0x000000010c4b854d: mov    %rbx,(%rax,%rcx,1)
  0x000000010c4b8551: jl     0x000000010c4b8448  ;*if_icmpge
                                                ; - java.io.BufferedReader::readLine@137 (line 342)

  0x000000010c4b8557: mov    $0x0,%edi
  0x000000010c4b855c: jmpq   0x000000010c4b8576  ;*aload_0
                                                ; - java.io.BufferedReader::readLine@175 (line 350)

  0x000000010c4b8561: movabs $0x124efe5f0,%rdi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b856b: incl   0x300(%rdi)
  0x000000010c4b8571: mov    $0x1,%edi          ;*goto
                                                ; - java.io.BufferedReader::readLine@166 (line 346)

  0x000000010c4b8576: mov    %r9d,0x18(%rsi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@183 (line 351)

  0x000000010c4b857a: cmp    $0x0,%edi
  0x000000010c4b857d: movabs $0x124efe5f0,%rdi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8587: movabs $0x330,%rax
  0x000000010c4b8591: je     0x000000010c4b85a1
  0x000000010c4b8597: movabs $0x340,%rax
  0x000000010c4b85a1: mov    (%rdi,%rax,1),%rcx
  0x000000010c4b85a5: lea    0x1(%rcx),%rcx
  0x000000010c4b85a9: mov    %rcx,(%rdi,%rax,1)
  0x000000010c4b85ad: mov    0x80(%rsp),%rax
  0x000000010c4b85b5: jne    0x000000010c4b8a4b  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@188 (line 353)

  0x000000010c4b85bb: cmp    $0x0,%rax
  0x000000010c4b85bf: movabs $0x124efe5f0,%rdx  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b85c9: movabs $0x418,%rdi
  0x000000010c4b85d3: jne    0x000000010c4b85e3
  0x000000010c4b85d9: movabs $0x428,%rdi
  0x000000010c4b85e3: mov    (%rdx,%rdi,1),%rcx
  0x000000010c4b85e7: lea    0x1(%rcx),%rcx
  0x000000010c4b85eb: mov    %rcx,(%rdx,%rdi,1)
  0x000000010c4b85ef: je     0x000000010c4b85fd  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@265 (line 368)

  0x000000010c4b85f5: mov    %rsi,%r11
  0x000000010c4b85f8: jmpq   0x000000010c4b87c3  ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x000000010c4b85fd: data32 xchg %ax,%ax
  0x000000010c4b8600: jmpq   0x000000010c4b944c  ;   {no_reloc}
  0x000000010c4b8605: add    %al,(%rax)
  0x000000010c4b8607: add    %al,(%rax)
  0x000000010c4b8609: add    %cl,-0x22(%rbx,%rcx,4)
  0x000000010c4b860d: mov    0x60(%r15),%rax
  0x000000010c4b8611: lea    0x18(%rax),%rdi
  0x000000010c4b8615: cmp    0x70(%r15),%rdi
  0x000000010c4b8619: ja     0x000000010c4b9456
  0x000000010c4b861f: mov    %rdi,0x60(%r15)
  0x000000010c4b8623: mov    0xa8(%rdx),%rcx
  0x000000010c4b862a: mov    %rcx,(%rax)
  0x000000010c4b862d: mov    %rdx,%rcx
  0x000000010c4b8630: shr    $0x3,%rcx
  0x000000010c4b8634: mov    %ecx,0x8(%rax)
  0x000000010c4b8637: xor    %rcx,%rcx
  0x000000010c4b863a: mov    %ecx,0xc(%rax)
  0x000000010c4b863d: xor    %rcx,%rcx
  0x000000010c4b8640: mov    %rcx,0x10(%rax)
  0x000000010c4b8644: mov    %rax,%r13          ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)

  0x000000010c4b8647: movabs $0x76ab31bf8,%rbx  ;   {oop(a 'java/lang/Class' = 'java/io/BufferedReader')}
  0x000000010c4b8651: mov    0x74(%rbx),%ebx    ;*getstatic defaultExpectedLineLength
                                                ; - java.io.BufferedReader::readLine@272 (line 369)

  0x000000010c4b8654: mov    %r13,%rdx
  0x000000010c4b8657: movabs $0x124efe5f0,%rsi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8661: addq   $0x1,0x438(%rsi)
  0x000000010c4b8669: movabs $0x124eff308,%rdx  ;   {metadata(method data for {method} {0x0000000124d2db08} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000010c4b8673: mov    0xdc(%rdx),%esi
  0x000000010c4b8679: add    $0x8,%esi
  0x000000010c4b867c: mov    %esi,0xdc(%rdx)
  0x000000010c4b8682: movabs $0x124d2db08,%rdx  ;   {metadata({method} {0x0000000124d2db08} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000010c4b868c: and    $0x7ffff8,%esi
  0x000000010c4b8692: cmp    $0x0,%esi
  0x000000010c4b8695: je     0x000000010c4b9463
  0x000000010c4b869b: mov    %r13,%rdx
  0x000000010c4b869e: movabs $0x124eff308,%rsi  ;   {metadata(method data for {method} {0x0000000124d2db08} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000010c4b86a8: addq   $0x1,0x108(%rsi)
  0x000000010c4b86b0: movabs $0x124ebf130,%rdx  ;   {metadata(method data for {method} {0x0000000124d32420} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b86ba: mov    0xdc(%rdx),%esi
  0x000000010c4b86c0: add    $0x8,%esi
  0x000000010c4b86c3: mov    %esi,0xdc(%rdx)
  0x000000010c4b86c9: movabs $0x124d32420,%rdx  ;   {metadata({method} {0x0000000124d32420} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b86d3: and    $0x7ffff8,%esi
  0x000000010c4b86d9: cmp    $0x0,%esi
  0x000000010c4b86dc: je     0x000000010c4b947a
  0x000000010c4b86e2: mov    %r13,%rdx
  0x000000010c4b86e5: movabs $0x124ebf130,%rsi  ;   {metadata(method data for {method} {0x0000000124d32420} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4b86ef: addq   $0x1,0x108(%rsi)
  0x000000010c4b86f7: movabs $0x124e34108,%rdx  ;   {metadata(method data for {method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010c4b8701: mov    0xdc(%rdx),%esi
  0x000000010c4b8707: add    $0x8,%esi
  0x000000010c4b870a: mov    %esi,0xdc(%rdx)
  0x000000010c4b8710: movabs $0x124cbe480,%rdx  ;   {metadata({method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010c4b871a: and    $0x7ffff8,%esi
  0x000000010c4b8720: cmp    $0x0,%esi
  0x000000010c4b8723: je     0x000000010c4b9491
  0x000000010c4b8729: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010c4b8733: movslq %ebx,%rbx
  0x000000010c4b8736: mov    %rbx,%rdi
  0x000000010c4b8739: cmp    $0xffffff,%rbx
  0x000000010c4b8740: ja     0x000000010c4b94a8
  0x000000010c4b8746: movabs $0x17,%rsi
  0x000000010c4b8750: lea    (%rsi,%rbx,2),%rsi
  0x000000010c4b8754: and    $0xfffffffffffffff8,%rsi
  0x000000010c4b8758: mov    0x60(%r15),%rax
  0x000000010c4b875c: lea    (%rax,%rsi,1),%rsi
  0x000000010c4b8760: cmp    0x70(%r15),%rsi
  0x000000010c4b8764: ja     0x000000010c4b94a8
  0x000000010c4b876a: mov    %rsi,0x60(%r15)
  0x000000010c4b876e: sub    %rax,%rsi
  0x000000010c4b8771: movq   $0x1,(%rax)
  0x000000010c4b8778: mov    %rdx,%rcx
  0x000000010c4b877b: shr    $0x3,%rcx
  0x000000010c4b877f: mov    %ecx,0x8(%rax)
  0x000000010c4b8782: mov    %ebx,0xc(%rax)
  0x000000010c4b8785: sub    $0x10,%rsi
  0x000000010c4b8789: je     0x000000010c4b87a0
  0x000000010c4b878f: xor    %rbx,%rbx
  0x000000010c4b8792: shr    $0x3,%rsi
  0x000000010c4b8796: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010c4b879b: dec    %rsi
  0x000000010c4b879e: jne    0x000000010c4b8796  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x000000010c4b87a0: mov    %rax,%r10
  0x000000010c4b87a3: shr    $0x3,%r10
  0x000000010c4b87a7: mov    %r10d,0x10(%r13)
  0x000000010c4b87ab: mov    %r13,%rax
  0x000000010c4b87ae: shr    $0x9,%rax
  0x000000010c4b87b2: movabs $0x118167000,%rdx
  0x000000010c4b87bc: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x000000010c4b87c0: mov    %r13,%rax          ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x000000010c4b87c3: mov    0x2c(%r11),%edx
  0x000000010c4b87c7: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@281 (line 370)

  0x000000010c4b87cb: cmp    (%rax),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ; implicit exception: dispatches to 0x000000010c4b94b2
  0x000000010c4b87ce: mov    %rax,%rcx
  0x000000010c4b87d1: movabs $0x124efe5f0,%rsi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b87db: mov    0x8(%rcx),%ecx
  0x000000010c4b87de: shl    $0x3,%rcx
  0x000000010c4b87e2: cmp    0x450(%rsi),%rcx
  0x000000010c4b87e9: jne    0x000000010c4b87f8
  0x000000010c4b87eb: addq   $0x1,0x458(%rsi)
  0x000000010c4b87f3: jmpq   0x000000010c4b885e
  0x000000010c4b87f8: cmp    0x460(%rsi),%rcx
  0x000000010c4b87ff: jne    0x000000010c4b880e
  0x000000010c4b8801: addq   $0x1,0x468(%rsi)
  0x000000010c4b8809: jmpq   0x000000010c4b885e
  0x000000010c4b880e: cmpq   $0x0,0x450(%rsi)
  0x000000010c4b8819: jne    0x000000010c4b8832
  0x000000010c4b881b: mov    %rcx,0x450(%rsi)
  0x000000010c4b8822: movq   $0x1,0x458(%rsi)
  0x000000010c4b882d: jmpq   0x000000010c4b885e
  0x000000010c4b8832: cmpq   $0x0,0x460(%rsi)
  0x000000010c4b883d: jne    0x000000010c4b8856
  0x000000010c4b883f: mov    %rcx,0x460(%rsi)
  0x000000010c4b8846: movq   $0x1,0x468(%rsi)
  0x000000010c4b8851: jmpq   0x000000010c4b885e
  0x000000010c4b8856: addq   $0x1,0x448(%rsi)
  0x000000010c4b885e: sub    %r8d,%r9d
  0x000000010c4b8861: lea    0xc0(%rsp),%rcx
  0x000000010c4b8869: mov    %rax,%rdi
  0x000000010c4b886c: mov    %rdi,0x8(%rcx)
  0x000000010c4b8870: mov    (%rdi),%rax
  0x000000010c4b8873: mov    %rax,%rsi
  0x000000010c4b8876: and    $0x7,%rsi
  0x000000010c4b887a: cmp    $0x5,%rsi
  0x000000010c4b887e: jne    0x000000010c4b8905
  0x000000010c4b8884: mov    0x8(%rdi),%esi
  0x000000010c4b8887: shl    $0x3,%rsi
  0x000000010c4b888b: mov    0xa8(%rsi),%rsi
  0x000000010c4b8892: or     %r15,%rsi
  0x000000010c4b8895: xor    %rax,%rsi
  0x000000010c4b8898: and    $0xffffffffffffff87,%rsi
  0x000000010c4b889c: je     0x000000010c4b892d
  0x000000010c4b88a2: test   $0x7,%rsi
  0x000000010c4b88a9: jne    0x000000010c4b88f2
  0x000000010c4b88ab: test   $0x300,%rsi
  0x000000010c4b88b2: jne    0x000000010c4b88d1
  0x000000010c4b88b4: and    $0x37f,%rax
  0x000000010c4b88bb: mov    %rax,%rsi
  0x000000010c4b88be: or     %r15,%rsi
  0x000000010c4b88c1: lock cmpxchg %rsi,(%rdi)
  0x000000010c4b88c6: jne    0x000000010c4b94b7
  0x000000010c4b88cc: jmpq   0x000000010c4b892d
  0x000000010c4b88d1: mov    0x8(%rdi),%esi
  0x000000010c4b88d4: shl    $0x3,%rsi
  0x000000010c4b88d8: mov    0xa8(%rsi),%rsi
  0x000000010c4b88df: or     %r15,%rsi
  0x000000010c4b88e2: lock cmpxchg %rsi,(%rdi)
  0x000000010c4b88e7: jne    0x000000010c4b94b7
  0x000000010c4b88ed: jmpq   0x000000010c4b892d
  0x000000010c4b88f2: mov    0x8(%rdi),%esi
  0x000000010c4b88f5: shl    $0x3,%rsi
  0x000000010c4b88f9: mov    0xa8(%rsi),%rsi
  0x000000010c4b8900: lock cmpxchg %rsi,(%rdi)
  0x000000010c4b8905: mov    (%rdi),%rax
  0x000000010c4b8908: or     $0x1,%rax
  0x000000010c4b890c: mov    %rax,(%rcx)
  0x000000010c4b890f: lock cmpxchg %rcx,(%rdi)
  0x000000010c4b8914: je     0x000000010c4b892d
  0x000000010c4b891a: sub    %rsp,%rax
  0x000000010c4b891d: and    $0xfffffffffffff007,%rax
  0x000000010c4b8924: mov    %rax,(%rcx)
  0x000000010c4b8927: jne    0x000000010c4b94b7  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010c4b892d: movabs $0x124eff020,%rcx  ;   {metadata(method data for {method} {0x0000000124d2e8b8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010c4b8937: mov    0xdc(%rcx),%esi
  0x000000010c4b893d: add    $0x8,%esi
  0x000000010c4b8940: mov    %esi,0xdc(%rcx)
  0x000000010c4b8946: movabs $0x124d2e8b8,%rcx  ;   {metadata({method} {0x0000000124d2e8b8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010c4b8950: and    $0x7ffff8,%esi
  0x000000010c4b8956: cmp    $0x0,%esi
  0x000000010c4b8959: je     0x000000010c4b94ca
  0x000000010c4b895f: movl   $0x0,0x14(%rdi)
  0x000000010c4b8966: mov    %rdi,%rax
  0x000000010c4b8969: shr    $0x9,%rax
  0x000000010c4b896d: movabs $0x118167000,%rcx
  0x000000010c4b8977: movb   $0x0,(%rax,%rcx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010c4b897b: mov    %rdi,%rax
  0x000000010c4b897e: movabs $0x124eff020,%rcx  ;   {metadata(method data for {method} {0x0000000124d2e8b8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010c4b8988: addq   $0x1,0x108(%rcx)
  0x000000010c4b8990: mov    %r8,%rcx
  0x000000010c4b8993: mov    %r9,%r8
  0x000000010c4b8996: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010c4b8999: mov    %rdi,0x90(%rsp)
  0x000000010c4b89a1: nop
  0x000000010c4b89a2: nop
  0x000000010c4b89a3: nop
  0x000000010c4b89a4: nop
  0x000000010c4b89a5: nop
  0x000000010c4b89a6: nop
  0x000000010c4b89a7: callq  0x000000010c3ed020  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop [200]=Oop off=2348}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {optimized virtual_call}
  0x000000010c4b89ac: lea    0xc0(%rsp),%rax
  0x000000010c4b89b4: mov    0x8(%rax),%rsi
  0x000000010c4b89b8: mov    (%rsi),%rdx
  0x000000010c4b89bb: and    $0x7,%rdx
  0x000000010c4b89bf: cmp    $0x5,%rdx
  0x000000010c4b89c3: je     0x000000010c4b89e0
  0x000000010c4b89c9: mov    (%rax),%rdx
  0x000000010c4b89cc: test   %rdx,%rdx
  0x000000010c4b89cf: je     0x000000010c4b89e0
  0x000000010c4b89d5: lock cmpxchg %rdx,(%rsi)
  0x000000010c4b89da: jne    0x000000010c4b94e1  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010c4b89e0: movabs $0x124efe5f0,%rdx  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b89ea: mov    0xe0(%rdx),%esi
  0x000000010c4b89f0: add    $0x8,%esi
  0x000000010c4b89f3: mov    %esi,0xe0(%rdx)
  0x000000010c4b89f9: movabs $0x124e44d58,%rdx  ;   {metadata({method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8a03: and    $0xfff8,%esi
  0x000000010c4b8a09: cmp    $0x0,%esi
  0x000000010c4b8a0c: je     0x000000010c4b94f7  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop off=2450}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x000000010c4b8a12: test   %eax,-0x218c918(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4b8a18: movabs $0x124efe5f0,%rdx  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8a22: incl   0x478(%rdx)
  0x000000010c4b8a28: mov    0x90(%rsp),%rax
  0x000000010c4b8a30: mov    $0x0,%ebx
  0x000000010c4b8a35: mov    %ebx,0x78(%rsp)
  0x000000010c4b8a39: mov    %rax,0x80(%rsp)
  0x000000010c4b8a41: mov    0x70(%rsp),%rsi
  0x000000010c4b8a46: jmpq   0x000000010c4b82f8  ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x000000010c4b8a4b: cmp    $0x0,%rax
  0x000000010c4b8a4f: movabs $0x124efe5f0,%rsi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8a59: movabs $0x350,%rdi
  0x000000010c4b8a63: jne    0x000000010c4b8a73
  0x000000010c4b8a69: movabs $0x360,%rdi
  0x000000010c4b8a73: mov    (%rsi,%rdi,1),%rcx
  0x000000010c4b8a77: lea    0x1(%rcx),%rcx
  0x000000010c4b8a7b: mov    %rcx,(%rsi,%rdi,1)
  0x000000010c4b8a7f: mov    %edx,0x7c(%rsp)
  0x000000010c4b8a83: mov    0x70(%rsp),%rsi
  0x000000010c4b8a88: jne    0x000000010c4b8b29  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@192 (line 355)

  0x000000010c4b8a8e: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010c4b8a98: mov    %rsi,%r11
  0x000000010c4b8a9b: mov    0x60(%r15),%rax
  0x000000010c4b8a9f: lea    0x18(%rax),%rdi
  0x000000010c4b8aa3: cmp    0x70(%r15),%rdi
  0x000000010c4b8aa7: ja     0x000000010c4b950e
  0x000000010c4b8aad: mov    %rdi,0x60(%r15)
  0x000000010c4b8ab1: mov    0xa8(%rdx),%rcx
  0x000000010c4b8ab8: mov    %rcx,(%rax)
  0x000000010c4b8abb: mov    %rdx,%rcx
  0x000000010c4b8abe: shr    $0x3,%rcx
  0x000000010c4b8ac2: mov    %ecx,0x8(%rax)
  0x000000010c4b8ac5: xor    %rcx,%rcx
  0x000000010c4b8ac8: mov    %ecx,0xc(%rax)
  0x000000010c4b8acb: xor    %rcx,%rcx
  0x000000010c4b8ace: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)

  0x000000010c4b8ad2: mov    0x2c(%r11),%edx
  0x000000010c4b8ad6: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@200 (line 356)

  0x000000010c4b8ada: mov    %rax,%rcx
  0x000000010c4b8add: movabs $0x124efe5f0,%rsi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8ae7: addq   $0x1,0x370(%rsi)
  0x000000010c4b8aef: sub    %r8d,%r9d
  0x000000010c4b8af2: mov    %r8,%rcx
  0x000000010c4b8af5: mov    %r9,%r8
  0x000000010c4b8af8: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedReader::readLine@208 (line 356)

  0x000000010c4b8afb: mov    %rax,0x98(%rsp)
  0x000000010c4b8b03: nop
  0x000000010c4b8b04: nop
  0x000000010c4b8b05: nop
  0x000000010c4b8b06: nop
  0x000000010c4b8b07: callq  0x000000010c3ed020  ; OopMap{[136]=Oop [112]=Oop [152]=Oop [184]=Oop off=2700}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedReader::readLine@208 (line 356)
                                                ;   {optimized virtual_call}
  0x000000010c4b8b0c: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8b16: incl   0x380(%rax)
  0x000000010c4b8b1c: mov    0x98(%rsp),%rsi
  0x000000010c4b8b24: jmpq   0x000000010c4b8de7  ;*goto
                                                ; - java.io.BufferedReader::readLine@213 (line 356)

  0x000000010c4b8b29: mov    0x2c(%rsi),%edx
  0x000000010c4b8b2c: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@218 (line 358)

  0x000000010c4b8b30: cmp    (%rax),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ; implicit exception: dispatches to 0x000000010c4b951b
  0x000000010c4b8b33: mov    %rax,%rcx
  0x000000010c4b8b36: movabs $0x124efe5f0,%rdi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8b40: mov    0x8(%rcx),%ecx
  0x000000010c4b8b43: shl    $0x3,%rcx
  0x000000010c4b8b47: cmp    0x3a0(%rdi),%rcx
  0x000000010c4b8b4e: jne    0x000000010c4b8b5d
  0x000000010c4b8b50: addq   $0x1,0x3a8(%rdi)
  0x000000010c4b8b58: jmpq   0x000000010c4b8bc3
  0x000000010c4b8b5d: cmp    0x3b0(%rdi),%rcx
  0x000000010c4b8b64: jne    0x000000010c4b8b73
  0x000000010c4b8b66: addq   $0x1,0x3b8(%rdi)
  0x000000010c4b8b6e: jmpq   0x000000010c4b8bc3
  0x000000010c4b8b73: cmpq   $0x0,0x3a0(%rdi)
  0x000000010c4b8b7e: jne    0x000000010c4b8b97
  0x000000010c4b8b80: mov    %rcx,0x3a0(%rdi)
  0x000000010c4b8b87: movq   $0x1,0x3a8(%rdi)
  0x000000010c4b8b92: jmpq   0x000000010c4b8bc3
  0x000000010c4b8b97: cmpq   $0x0,0x3b0(%rdi)
  0x000000010c4b8ba2: jne    0x000000010c4b8bbb
  0x000000010c4b8ba4: mov    %rcx,0x3b0(%rdi)
  0x000000010c4b8bab: movq   $0x1,0x3b8(%rdi)
  0x000000010c4b8bb6: jmpq   0x000000010c4b8bc3
  0x000000010c4b8bbb: addq   $0x1,0x398(%rdi)
  0x000000010c4b8bc3: sub    %r8d,%r9d
  0x000000010c4b8bc6: lea    0xc0(%rsp),%rcx
  0x000000010c4b8bce: mov    %rax,%rdi
  0x000000010c4b8bd1: mov    %rdi,0x8(%rcx)
  0x000000010c4b8bd5: mov    (%rdi),%rax
  0x000000010c4b8bd8: mov    %rax,%rbx
  0x000000010c4b8bdb: and    $0x7,%rbx
  0x000000010c4b8bdf: cmp    $0x5,%rbx
  0x000000010c4b8be3: jne    0x000000010c4b8c6a
  0x000000010c4b8be9: mov    0x8(%rdi),%ebx
  0x000000010c4b8bec: shl    $0x3,%rbx
  0x000000010c4b8bf0: mov    0xa8(%rbx),%rbx
  0x000000010c4b8bf7: or     %r15,%rbx
  0x000000010c4b8bfa: xor    %rax,%rbx
  0x000000010c4b8bfd: and    $0xffffffffffffff87,%rbx
  0x000000010c4b8c01: je     0x000000010c4b8c92
  0x000000010c4b8c07: test   $0x7,%rbx
  0x000000010c4b8c0e: jne    0x000000010c4b8c57
  0x000000010c4b8c10: test   $0x300,%rbx
  0x000000010c4b8c17: jne    0x000000010c4b8c36
  0x000000010c4b8c19: and    $0x37f,%rax
  0x000000010c4b8c20: mov    %rax,%rbx
  0x000000010c4b8c23: or     %r15,%rbx
  0x000000010c4b8c26: lock cmpxchg %rbx,(%rdi)
  0x000000010c4b8c2b: jne    0x000000010c4b9520
  0x000000010c4b8c31: jmpq   0x000000010c4b8c92
  0x000000010c4b8c36: mov    0x8(%rdi),%ebx
  0x000000010c4b8c39: shl    $0x3,%rbx
  0x000000010c4b8c3d: mov    0xa8(%rbx),%rbx
  0x000000010c4b8c44: or     %r15,%rbx
  0x000000010c4b8c47: lock cmpxchg %rbx,(%rdi)
  0x000000010c4b8c4c: jne    0x000000010c4b9520
  0x000000010c4b8c52: jmpq   0x000000010c4b8c92
  0x000000010c4b8c57: mov    0x8(%rdi),%ebx
  0x000000010c4b8c5a: shl    $0x3,%rbx
  0x000000010c4b8c5e: mov    0xa8(%rbx),%rbx
  0x000000010c4b8c65: lock cmpxchg %rbx,(%rdi)
  0x000000010c4b8c6a: mov    (%rdi),%rax
  0x000000010c4b8c6d: or     $0x1,%rax
  0x000000010c4b8c71: mov    %rax,(%rcx)
  0x000000010c4b8c74: lock cmpxchg %rcx,(%rdi)
  0x000000010c4b8c79: je     0x000000010c4b8c92
  0x000000010c4b8c7f: sub    %rsp,%rax
  0x000000010c4b8c82: and    $0xfffffffffffff007,%rax
  0x000000010c4b8c89: mov    %rax,(%rcx)
  0x000000010c4b8c8c: jne    0x000000010c4b9520  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010c4b8c92: movabs $0x124eff020,%rcx  ;   {metadata(method data for {method} {0x0000000124d2e8b8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010c4b8c9c: mov    0xdc(%rcx),%ebx
  0x000000010c4b8ca2: add    $0x8,%ebx
  0x000000010c4b8ca5: mov    %ebx,0xdc(%rcx)
  0x000000010c4b8cab: movabs $0x124d2e8b8,%rcx  ;   {metadata({method} {0x0000000124d2e8b8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010c4b8cb5: and    $0x7ffff8,%ebx
  0x000000010c4b8cbb: cmp    $0x0,%ebx
  0x000000010c4b8cbe: je     0x000000010c4b9533
  0x000000010c4b8cc4: movl   $0x0,0x14(%rdi)
  0x000000010c4b8ccb: mov    %rdi,%rax
  0x000000010c4b8cce: shr    $0x9,%rax
  0x000000010c4b8cd2: movabs $0x118167000,%rcx
  0x000000010c4b8cdc: movb   $0x0,(%rax,%rcx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010c4b8ce0: mov    %rdi,%rax
  0x000000010c4b8ce3: movabs $0x124eff020,%rcx  ;   {metadata(method data for {method} {0x0000000124d2e8b8} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000010c4b8ced: addq   $0x1,0x108(%rcx)
  0x000000010c4b8cf5: mov    %r8,%rcx
  0x000000010c4b8cf8: mov    %r9,%r8
  0x000000010c4b8cfb: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010c4b8cfe: mov    %rdi,0x80(%rsp)
  0x000000010c4b8d06: nop
  0x000000010c4b8d07: callq  0x000000010c3ed020  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop [200]=Oop off=3212}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {optimized virtual_call}
  0x000000010c4b8d0c: lea    0xc0(%rsp),%rax
  0x000000010c4b8d14: mov    0x8(%rax),%rdi
  0x000000010c4b8d18: mov    (%rdi),%rsi
  0x000000010c4b8d1b: and    $0x7,%rsi
  0x000000010c4b8d1f: cmp    $0x5,%rsi
  0x000000010c4b8d23: je     0x000000010c4b8d40
  0x000000010c4b8d29: mov    (%rax),%rsi
  0x000000010c4b8d2c: test   %rsi,%rsi
  0x000000010c4b8d2f: je     0x000000010c4b8d40
  0x000000010c4b8d35: lock cmpxchg %rsi,(%rdi)
  0x000000010c4b8d3a: jne    0x000000010c4b954a  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010c4b8d40: mov    0x80(%rsp),%rax
  0x000000010c4b8d48: movabs $0x124efe5f0,%rsi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8d52: mov    0x8(%rax),%eax
  0x000000010c4b8d55: shl    $0x3,%rax
  0x000000010c4b8d59: cmp    0x3d0(%rsi),%rax
  0x000000010c4b8d60: jne    0x000000010c4b8d6f
  0x000000010c4b8d62: addq   $0x1,0x3d8(%rsi)
  0x000000010c4b8d6a: jmpq   0x000000010c4b8dd5
  0x000000010c4b8d6f: cmp    0x3e0(%rsi),%rax
  0x000000010c4b8d76: jne    0x000000010c4b8d85
  0x000000010c4b8d78: addq   $0x1,0x3e8(%rsi)
  0x000000010c4b8d80: jmpq   0x000000010c4b8dd5
  0x000000010c4b8d85: cmpq   $0x0,0x3d0(%rsi)
  0x000000010c4b8d90: jne    0x000000010c4b8da9
  0x000000010c4b8d92: mov    %rax,0x3d0(%rsi)
  0x000000010c4b8d99: movq   $0x1,0x3d8(%rsi)
  0x000000010c4b8da4: jmpq   0x000000010c4b8dd5
  0x000000010c4b8da9: cmpq   $0x0,0x3e0(%rsi)
  0x000000010c4b8db4: jne    0x000000010c4b8dcd
  0x000000010c4b8db6: mov    %rax,0x3e0(%rsi)
  0x000000010c4b8dbd: movq   $0x1,0x3e8(%rsi)
  0x000000010c4b8dc8: jmpq   0x000000010c4b8dd5
  0x000000010c4b8dcd: addq   $0x1,0x3c8(%rsi)
  0x000000010c4b8dd5: mov    0x80(%rsp),%rsi    ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)

  0x000000010c4b8ddd: nop
  0x000000010c4b8dde: nop
  0x000000010c4b8ddf: callq  0x000000010c3ed020  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=3428}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)
                                                ;   {optimized virtual_call}
  0x000000010c4b8de4: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@236 (line 361)

  0x000000010c4b8de7: mov    0x7c(%rsp),%ebx
  0x000000010c4b8deb: mov    0x70(%rsp),%rdi
  0x000000010c4b8df0: mov    0x18(%rdi),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@238 (line 361)

  0x000000010c4b8df3: inc    %eax
  0x000000010c4b8df5: mov    %eax,0x18(%rdi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@243 (line 361)

  0x000000010c4b8df8: cmp    $0xd,%ebx
  0x000000010c4b8dfb: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8e05: movabs $0x3f8,%rbx
  0x000000010c4b8e0f: jne    0x000000010c4b8e1f
  0x000000010c4b8e15: movabs $0x408,%rbx
  0x000000010c4b8e1f: mov    (%rax,%rbx,1),%rdx
  0x000000010c4b8e23: lea    0x1(%rdx),%rdx
  0x000000010c4b8e27: mov    %rdx,(%rax,%rbx,1)
  0x000000010c4b8e2b: jne    0x000000010c4b9175  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@250 (line 362)

  0x000000010c4b8e31: movb   $0x1,0x24(%rdi)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@255 (line 363)

  0x000000010c4b8e35: jmpq   0x000000010c4b9175  ;*aload
                                                ; - java.io.BufferedReader::readLine@258 (line 365)

  0x000000010c4b8e3a: mov    0x80(%rsp),%rsi
  0x000000010c4b8e42: cmp    $0x0,%rsi
  0x000000010c4b8e46: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8e50: movabs $0x1c0,%rdi
  0x000000010c4b8e5a: je     0x000000010c4b8e6a
  0x000000010c4b8e60: movabs $0x1d0,%rdi
  0x000000010c4b8e6a: mov    (%rax,%rdi,1),%rbx
  0x000000010c4b8e6e: lea    0x1(%rbx),%rbx
  0x000000010c4b8e72: mov    %rbx,(%rax,%rdi,1)
  0x000000010c4b8e76: je     0x000000010c4b9048  ;*ifnull
                                                ; - java.io.BufferedReader::readLine@59 (line 326)

  0x000000010c4b8e7c: cmp    (%rsi),%rax        ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ; implicit exception: dispatches to 0x000000010c4b9560
  0x000000010c4b8e7f: mov    %rsi,%rax
  0x000000010c4b8e82: movabs $0x124efe5f0,%rdi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b8e8c: mov    0x8(%rax),%eax
  0x000000010c4b8e8f: shl    $0x3,%rax
  0x000000010c4b8e93: cmp    0x1e8(%rdi),%rax
  0x000000010c4b8e9a: jne    0x000000010c4b8ea9
  0x000000010c4b8e9c: addq   $0x1,0x1f0(%rdi)
  0x000000010c4b8ea4: jmpq   0x000000010c4b8f0f
  0x000000010c4b8ea9: cmp    0x1f8(%rdi),%rax
  0x000000010c4b8eb0: jne    0x000000010c4b8ebf
  0x000000010c4b8eb2: addq   $0x1,0x200(%rdi)
  0x000000010c4b8eba: jmpq   0x000000010c4b8f0f
  0x000000010c4b8ebf: cmpq   $0x0,0x1e8(%rdi)
  0x000000010c4b8eca: jne    0x000000010c4b8ee3
  0x000000010c4b8ecc: mov    %rax,0x1e8(%rdi)
  0x000000010c4b8ed3: movq   $0x1,0x1f0(%rdi)
  0x000000010c4b8ede: jmpq   0x000000010c4b8f0f
  0x000000010c4b8ee3: cmpq   $0x0,0x1f8(%rdi)
  0x000000010c4b8eee: jne    0x000000010c4b8f07
  0x000000010c4b8ef0: mov    %rax,0x1f8(%rdi)
  0x000000010c4b8ef7: movq   $0x1,0x200(%rdi)
  0x000000010c4b8f02: jmpq   0x000000010c4b8f0f
  0x000000010c4b8f07: addq   $0x1,0x1e0(%rdi)
  0x000000010c4b8f0f: lea    0xc0(%rsp),%rdi
  0x000000010c4b8f17: mov    %rsi,0x8(%rdi)
  0x000000010c4b8f1b: mov    (%rsi),%rax
  0x000000010c4b8f1e: mov    %rax,%rbx
  0x000000010c4b8f21: and    $0x7,%rbx
  0x000000010c4b8f25: cmp    $0x5,%rbx
  0x000000010c4b8f29: jne    0x000000010c4b8fb0
  0x000000010c4b8f2f: mov    0x8(%rsi),%ebx
  0x000000010c4b8f32: shl    $0x3,%rbx
  0x000000010c4b8f36: mov    0xa8(%rbx),%rbx
  0x000000010c4b8f3d: or     %r15,%rbx
  0x000000010c4b8f40: xor    %rax,%rbx
  0x000000010c4b8f43: and    $0xffffffffffffff87,%rbx
  0x000000010c4b8f47: je     0x000000010c4b8fd8
  0x000000010c4b8f4d: test   $0x7,%rbx
  0x000000010c4b8f54: jne    0x000000010c4b8f9d
  0x000000010c4b8f56: test   $0x300,%rbx
  0x000000010c4b8f5d: jne    0x000000010c4b8f7c
  0x000000010c4b8f5f: and    $0x37f,%rax
  0x000000010c4b8f66: mov    %rax,%rbx
  0x000000010c4b8f69: or     %r15,%rbx
  0x000000010c4b8f6c: lock cmpxchg %rbx,(%rsi)
  0x000000010c4b8f71: jne    0x000000010c4b9565
  0x000000010c4b8f77: jmpq   0x000000010c4b8fd8
  0x000000010c4b8f7c: mov    0x8(%rsi),%ebx
  0x000000010c4b8f7f: shl    $0x3,%rbx
  0x000000010c4b8f83: mov    0xa8(%rbx),%rbx
  0x000000010c4b8f8a: or     %r15,%rbx
  0x000000010c4b8f8d: lock cmpxchg %rbx,(%rsi)
  0x000000010c4b8f92: jne    0x000000010c4b9565
  0x000000010c4b8f98: jmpq   0x000000010c4b8fd8
  0x000000010c4b8f9d: mov    0x8(%rsi),%ebx
  0x000000010c4b8fa0: shl    $0x3,%rbx
  0x000000010c4b8fa4: mov    0xa8(%rbx),%rbx
  0x000000010c4b8fab: lock cmpxchg %rbx,(%rsi)
  0x000000010c4b8fb0: mov    (%rsi),%rax
  0x000000010c4b8fb3: or     $0x1,%rax
  0x000000010c4b8fb7: mov    %rax,(%rdi)
  0x000000010c4b8fba: lock cmpxchg %rdi,(%rsi)
  0x000000010c4b8fbf: je     0x000000010c4b8fd8
  0x000000010c4b8fc5: sub    %rsp,%rax
  0x000000010c4b8fc8: and    $0xfffffffffffff007,%rax
  0x000000010c4b8fcf: mov    %rax,(%rdi)
  0x000000010c4b8fd2: jne    0x000000010c4b9565  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010c4b8fd8: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010c4b8fdb: lea    0xc0(%rsp),%rax
  0x000000010c4b8fe3: mov    0x8(%rax),%rdx
  0x000000010c4b8fe7: mov    (%rdx),%rbx
  0x000000010c4b8fea: and    $0x7,%rbx
  0x000000010c4b8fee: cmp    $0x5,%rbx
  0x000000010c4b8ff2: je     0x000000010c4b900f
  0x000000010c4b8ff8: mov    (%rax),%rbx
  0x000000010c4b8ffb: test   %rbx,%rbx
  0x000000010c4b8ffe: je     0x000000010c4b900f
  0x000000010c4b9004: lock cmpxchg %rbx,(%rdx)
  0x000000010c4b9009: jne    0x000000010c4b9578  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010c4b900f: cmp    $0x0,%edi
  0x000000010c4b9012: movabs $0x124efe5f0,%rax  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b901c: movabs $0x210,%rdi
  0x000000010c4b9026: jle    0x000000010c4b9036
  0x000000010c4b902c: movabs $0x220,%rdi
  0x000000010c4b9036: mov    (%rax,%rdi,1),%rbx
  0x000000010c4b903a: lea    0x1(%rbx),%rbx
  0x000000010c4b903e: mov    %rbx,(%rax,%rdi,1)
  0x000000010c4b9042: jg     0x000000010c4b9095  ;*ifle
                                                ; - java.io.BufferedReader::readLine@66 (line 326)

  0x000000010c4b9048: lea    0xb0(%rsp),%rax
  0x000000010c4b9050: mov    0x8(%rax),%rdi
  0x000000010c4b9054: mov    (%rdi),%rsi
  0x000000010c4b9057: and    $0x7,%rsi
  0x000000010c4b905b: cmp    $0x5,%rsi
  0x000000010c4b905f: je     0x000000010c4b907c
  0x000000010c4b9065: mov    (%rax),%rsi
  0x000000010c4b9068: test   %rsi,%rsi
  0x000000010c4b906b: je     0x000000010c4b907c
  0x000000010c4b9071: lock cmpxchg %rsi,(%rdi)
  0x000000010c4b9076: jne    0x000000010c4b958e  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@80 (line 329)

  0x000000010c4b907c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010c4b9086: add    $0xe0,%rsp
  0x000000010c4b908d: pop    %rbp
  0x000000010c4b908e: test   %eax,-0x218cf94(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b9094: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@81 (line 329)

  0x000000010c4b9095: mov    %rsi,%rax
  0x000000010c4b9098: movabs $0x124efe5f0,%rdi  ;   {metadata(method data for {method} {0x0000000124e44d58} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000010c4b90a2: mov    0x8(%rax),%eax
  0x000000010c4b90a5: shl    $0x3,%rax
  0x000000010c4b90a9: cmp    0x238(%rdi),%rax
  0x000000010c4b90b0: jne    0x000000010c4b90bf
  0x000000010c4b90b2: addq   $0x1,0x240(%rdi)
  0x000000010c4b90ba: jmpq   0x000000010c4b9125
  0x000000010c4b90bf: cmp    0x248(%rdi),%rax
  0x000000010c4b90c6: jne    0x000000010c4b90d5
  0x000000010c4b90c8: addq   $0x1,0x250(%rdi)
  0x000000010c4b90d0: jmpq   0x000000010c4b9125
  0x000000010c4b90d5: cmpq   $0x0,0x238(%rdi)
  0x000000010c4b90e0: jne    0x000000010c4b90f9
  0x000000010c4b90e2: mov    %rax,0x238(%rdi)
  0x000000010c4b90e9: movq   $0x1,0x240(%rdi)
  0x000000010c4b90f4: jmpq   0x000000010c4b9125
  0x000000010c4b90f9: cmpq   $0x0,0x248(%rdi)
  0x000000010c4b9104: jne    0x000000010c4b911d
  0x000000010c4b9106: mov    %rax,0x248(%rdi)
  0x000000010c4b910d: movq   $0x1,0x250(%rdi)
  0x000000010c4b9118: jmpq   0x000000010c4b9125
  0x000000010c4b911d: addq   $0x1,0x230(%rdi)
  0x000000010c4b9125: nop
  0x000000010c4b9126: nop
  0x000000010c4b9127: callq  0x000000010c3ed020  ; OopMap{[136]=Oop [184]=Oop off=4268}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)
                                                ;   {optimized virtual_call}
  0x000000010c4b912c: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x000000010c4b912f: lea    0xb0(%rsp),%rax
  0x000000010c4b9137: mov    0x8(%rax),%rdi
  0x000000010c4b913b: mov    (%rdi),%rsi
  0x000000010c4b913e: and    $0x7,%rsi
  0x000000010c4b9142: cmp    $0x5,%rsi
  0x000000010c4b9146: je     0x000000010c4b9163
  0x000000010c4b914c: mov    (%rax),%rsi
  0x000000010c4b914f: test   %rsi,%rsi
  0x000000010c4b9152: je     0x000000010c4b9163
  0x000000010c4b9158: lock cmpxchg %rsi,(%rdi)
  0x000000010c4b915d: jne    0x000000010c4b95a4  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@75 (line 327)

  0x000000010c4b9163: mov    %rdx,%rax
  0x000000010c4b9166: add    $0xe0,%rsp
  0x000000010c4b916d: pop    %rbp
  0x000000010c4b916e: test   %eax,-0x218d074(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b9174: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@76 (line 327)

  0x000000010c4b9175: lea    0xb0(%rsp),%rax
  0x000000010c4b917d: mov    0x8(%rax),%rdi
  0x000000010c4b9181: mov    (%rdi),%rdx
  0x000000010c4b9184: and    $0x7,%rdx
  0x000000010c4b9188: cmp    $0x5,%rdx
  0x000000010c4b918c: je     0x000000010c4b91a9
  0x000000010c4b9192: mov    (%rax),%rdx
  0x000000010c4b9195: test   %rdx,%rdx
  0x000000010c4b9198: je     0x000000010c4b91a9
  0x000000010c4b919e: lock cmpxchg %rdx,(%rdi)
  0x000000010c4b91a3: jne    0x000000010c4b95ba  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@262 (line 365)

  0x000000010c4b91a9: mov    %rsi,%rax
  0x000000010c4b91ac: add    $0xe0,%rsp
  0x000000010c4b91b3: pop    %rbp
  0x000000010c4b91b4: test   %eax,-0x218d0ba(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4b91ba: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@263 (line 365)

  0x000000010c4b91bb: mov    %edx,0xa8(%rsp)
  0x000000010c4b91c2: nopw   0x0(%rax,%rax,1)
  0x000000010c4b91c8: jmpq   0x000000010c4b95df  ;   {no_reloc}
  0x000000010c4b91cd: add    %al,(%rax)
  0x000000010c4b91cf: add    %al,(%rax)
  0x000000010c4b91d1: add    %ch,%cl
  0x000000010c4b91d3: adc    (%rax,%rax,1),%al
  0x000000010c4b91d6: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010c4b91d9: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x0000000124e44630} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000010c4b91dc: enterq $0xefea,$0x24
  0x000000010c4b91e0: add    %eax,(%rax)
  0x000000010c4b91e2: add    %al,(%rax)
  0x000000010c4b91e4: addq   $0x1,0x128(%rbx)
  0x000000010c4b91ec: movabs $0x76ac47b20,%rdx  ;   {oop("Stream closed")}
  0x000000010c4b91f6: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010c4b91f9: mov    %rax,0xa0(%rsp)
  0x000000010c4b9201: nop
  0x000000010c4b9202: nop
  0x000000010c4b9203: nop
  0x000000010c4b9204: nop
  0x000000010c4b9205: nop
  0x000000010c4b9206: nop
  0x000000010c4b9207: callq  0x000000010c3ed020  ; OopMap{[136]=Oop [160]=Oop [112]=Oop [184]=Oop off=4492}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {optimized virtual_call}
  0x000000010c4b920c: mov    0xa0(%rsp),%rax    ; OopMap{[136]=Oop [112]=Oop [184]=Oop rax=Oop off=4500}
                                                ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010c4b9214: movabs $0x10c4b9214,%rdx  ;   {section_word}
  0x000000010c4b921e: callq  0x000000010c412de0  ;   {runtime_call}
  0x000000010c4b9223: nop                       ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000010c4b9224: mov    0x2a8(%r15),%rax
  0x000000010c4b922b: xor    %r10,%r10
  0x000000010c4b922e: mov    %r10,0x2a8(%r15)
  0x000000010c4b9235: xor    %r10,%r10
  0x000000010c4b9238: mov    %r10,0x2b0(%r15)
  0x000000010c4b923f: mov    %rax,%rdx
  0x000000010c4b9242: lea    0xc0(%rsp),%rax
  0x000000010c4b924a: mov    0x8(%rax),%rbx
  0x000000010c4b924e: mov    (%rbx),%rdi
  0x000000010c4b9251: and    $0x7,%rdi
  0x000000010c4b9255: cmp    $0x5,%rdi
  0x000000010c4b9259: je     0x000000010c4b9276
  0x000000010c4b925f: mov    (%rax),%rdi
  0x000000010c4b9262: test   %rdi,%rdi
  0x000000010c4b9265: je     0x000000010c4b9276
  0x000000010c4b926b: lock cmpxchg %rdi,(%rbx)
  0x000000010c4b9270: jne    0x000000010c4b95f6  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010c4b9276: mov    %rdx,%rax          ; OopMap{rsi=Oop [136]=Oop [184]=Oop rax=Oop off=4601}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010c4b9279: movabs $0x10c4b9279,%rdx  ;   {section_word}
  0x000000010c4b9283: callq  0x000000010c412de0  ;   {runtime_call}
  0x000000010c4b9288: nop                       ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000010c4b9289: mov    0x2a8(%r15),%rax
  0x000000010c4b9290: xor    %r10,%r10
  0x000000010c4b9293: mov    %r10,0x2a8(%r15)
  0x000000010c4b929a: xor    %r10,%r10
  0x000000010c4b929d: mov    %r10,0x2b0(%r15)
  0x000000010c4b92a4: mov    %rax,%rdx
  0x000000010c4b92a7: lea    0xc0(%rsp),%rax
  0x000000010c4b92af: mov    0x8(%rax),%rcx
  0x000000010c4b92b3: mov    (%rcx),%rdi
  0x000000010c4b92b6: and    $0x7,%rdi
  0x000000010c4b92ba: cmp    $0x5,%rdi
  0x000000010c4b92be: je     0x000000010c4b92db
  0x000000010c4b92c4: mov    (%rax),%rdi
  0x000000010c4b92c7: test   %rdi,%rdi
  0x000000010c4b92ca: je     0x000000010c4b92db
  0x000000010c4b92d0: lock cmpxchg %rdi,(%rcx)
  0x000000010c4b92d5: jne    0x000000010c4b960c  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010c4b92db: mov    %rdx,%rax          ; OopMap{[112]=Oop [136]=Oop rsi=Oop [184]=Oop rax=Oop off=4702}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010c4b92de: movabs $0x10c4b92de,%rdx  ;   {section_word}
  0x000000010c4b92e8: callq  0x000000010c412de0  ;   {runtime_call}
  0x000000010c4b92ed: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000010c4b92ee: mov    0x88(%rsp),%rbx
  0x000000010c4b92f6: mov    0x70(%rsp),%rsi
  0x000000010c4b92fb: mov    0x2a8(%r15),%rax
  0x000000010c4b9302: xor    %r10,%r10
  0x000000010c4b9305: mov    %r10,0x2a8(%r15)
  0x000000010c4b930c: xor    %r10,%r10
  0x000000010c4b930f: mov    %r10,0x2b0(%r15)
  0x000000010c4b9316: mov    %rax,%rdx
  0x000000010c4b9319: lea    0xc0(%rsp),%rax
  0x000000010c4b9321: mov    0x8(%rax),%r8
  0x000000010c4b9325: mov    (%r8),%rcx
  0x000000010c4b9328: and    $0x7,%rcx
  0x000000010c4b932c: cmp    $0x5,%rcx
  0x000000010c4b9330: je     0x000000010c4b934d
  0x000000010c4b9336: mov    (%rax),%rcx
  0x000000010c4b9339: test   %rcx,%rcx
  0x000000010c4b933c: je     0x000000010c4b934d
  0x000000010c4b9342: lock cmpxchg %rcx,(%r8)
  0x000000010c4b9347: jne    0x000000010c4b9622  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010c4b934d: mov    %rdx,%rax          ; OopMap{rdi=Oop rsi=Oop [112]=Oop rbx=Oop [136]=Oop [184]=Oop rax=Oop off=4816}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010c4b9350: movabs $0x10c4b9350,%rdx  ;   {section_word}
  0x000000010c4b935a: callq  0x000000010c412de0  ;   {runtime_call}
  0x000000010c4b935f: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000010c4b9360: mov    0x2a8(%r15),%rax
  0x000000010c4b9367: xor    %r10,%r10
  0x000000010c4b936a: mov    %r10,0x2a8(%r15)
  0x000000010c4b9371: xor    %r10,%r10
  0x000000010c4b9374: mov    %r10,0x2b0(%r15)
  0x000000010c4b937b: mov    %rax,%rsi
  0x000000010c4b937e: lea    0xb0(%rsp),%rax
  0x000000010c4b9386: mov    0x8(%rax),%rbx
  0x000000010c4b938a: mov    (%rbx),%rdi
  0x000000010c4b938d: and    $0x7,%rdi
  0x000000010c4b9391: cmp    $0x5,%rdi
  0x000000010c4b9395: je     0x000000010c4b93b2
  0x000000010c4b939b: mov    (%rax),%rdi
  0x000000010c4b939e: test   %rdi,%rdi
  0x000000010c4b93a1: je     0x000000010c4b93b2
  0x000000010c4b93a7: lock cmpxchg %rdi,(%rbx)
  0x000000010c4b93ac: jne    0x000000010c4b9638  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@300 (line 372)

  0x000000010c4b93b2: mov    %rsi,%rax
  0x000000010c4b93b5: jmpq   0x000000010c4b9697
  0x000000010c4b93ba: mov    %rax,0x8(%rsp)
  0x000000010c4b93bf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b93c7: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [112]=Oop off=4940}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::readLine@-1 (line 313)
                                                ;   {runtime_call}
  0x000000010c4b93cc: jmpq   0x000000010c4b80e6
  0x000000010c4b93d1: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop off=4950}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x000000010c4b93d6: mov    %rdi,0x8(%rsp)
  0x000000010c4b93db: mov    %rbx,(%rsp)
  0x000000010c4b93df: callq  0x000000010c4a33e0  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop off=4964}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x000000010c4b93e4: jmpq   0x000000010c4b81be
  0x000000010c4b93e9: mov    %rbx,0x8(%rsp)
  0x000000010c4b93ee: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b93f6: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop off=4987}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::ensureOpen@-1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000010c4b93fb: jmpq   0x000000010c4b8205
  0x000000010c4b9400: callq  0x000000010c4a0a40  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=4997}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000010c4b9405: callq  0x000000010c4a0a40  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5002}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000010c4b940a: mov    %rdx,(%rsp)
  0x000000010c4b940e: callq  0x000000010c413000  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5011}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000010c4b9413: callq  0x000000010c4a0a40  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5016}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000010c4b9418: callq  0x000000010c4a0a40  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5021}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000010c4b941d: mov    %r9,(%rsp)
  0x000000010c4b9421: callq  0x000000010c413000  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5030}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000010c4b9426: mov    %rax,0x8(%rsp)
  0x000000010c4b942b: movq   $0xac,(%rsp)
  0x000000010c4b9433: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop [184]=Oop off=5048}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)
                                                ;   {runtime_call}
  0x000000010c4b9438: jmpq   0x000000010c4b8508
  0x000000010c4b943d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4b9447: mov    $0xa050f00,%eax
  0x000000010c4b944c: callq  0x000000010c4a3f60  ; OopMap{[136]=Oop rsi=Oop [112]=Oop [184]=Oop off=5073}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x000000010c4b9451: jmpq   0x000000010c4b8600
  0x000000010c4b9456: mov    %rdx,%rdx
  0x000000010c4b9459: callq  0x000000010c4a11a0  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5086}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x000000010c4b945e: jmpq   0x000000010c4b8644
  0x000000010c4b9463: mov    %rdx,0x8(%rsp)
  0x000000010c4b9468: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b9470: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5109}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::<init>@-1 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000010c4b9475: jmpq   0x000000010c4b869b
  0x000000010c4b947a: mov    %rdx,0x8(%rsp)
  0x000000010c4b947f: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b9487: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5132}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000010c4b948c: jmpq   0x000000010c4b86e2
  0x000000010c4b9491: mov    %rdx,0x8(%rsp)
  0x000000010c4b9496: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b949e: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5155}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000010c4b94a3: jmpq   0x000000010c4b8729
  0x000000010c4b94a8: callq  0x000000010c4a1aa0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5165}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000010c4b94ad: jmpq   0x000000010c4b87a0
  0x000000010c4b94b2: callq  0x000000010c4a0a40  ; OopMap{[136]=Oop r11=Oop [112]=Oop rax=Oop rdx=Oop [184]=Oop off=5175}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000010c4b94b7: mov    %rdi,0x8(%rsp)
  0x000000010c4b94bc: mov    %rcx,(%rsp)
  0x000000010c4b94c0: callq  0x000000010c4a33e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5189}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000010c4b94c5: jmpq   0x000000010c4b892d
  0x000000010c4b94ca: mov    %rcx,0x8(%rsp)
  0x000000010c4b94cf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b94d7: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop r11=Oop [112]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5212}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000010c4b94dc: jmpq   0x000000010c4b895f
  0x000000010c4b94e1: lea    0xc0(%rsp),%rax
  0x000000010c4b94e9: mov    %rax,(%rsp)
  0x000000010c4b94ed: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b94f2: jmpq   0x000000010c4b89e0
  0x000000010c4b94f7: mov    %rdx,0x8(%rsp)
  0x000000010c4b94fc: movq   $0x125,(%rsp)
  0x000000010c4b9504: callq  0x000000010c4a4f60  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop off=5257}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)
                                                ;   {runtime_call}
  0x000000010c4b9509: jmpq   0x000000010c4b8a12
  0x000000010c4b950e: mov    %rdx,%rdx
  0x000000010c4b9511: callq  0x000000010c4a11a0  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5270}
                                                ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)
                                                ;   {runtime_call}
  0x000000010c4b9516: jmpq   0x000000010c4b8ad2
  0x000000010c4b951b: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [112]=Oop rax=Oop [136]=Oop rdx=Oop [184]=Oop off=5280}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000010c4b9520: mov    %rdi,0x8(%rsp)
  0x000000010c4b9525: mov    %rcx,(%rsp)
  0x000000010c4b9529: callq  0x000000010c4a33e0  ; OopMap{rsi=Oop [112]=Oop [136]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5294}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000010c4b952e: jmpq   0x000000010c4b8c92
  0x000000010c4b9533: mov    %rcx,0x8(%rsp)
  0x000000010c4b9538: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4b9540: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [112]=Oop [136]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5317}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000010c4b9545: jmpq   0x000000010c4b8cc4
  0x000000010c4b954a: lea    0xc0(%rsp),%rax
  0x000000010c4b9552: mov    %rax,(%rsp)
  0x000000010c4b9556: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b955b: jmpq   0x000000010c4b8d40
  0x000000010c4b9560: callq  0x000000010c4a0a40  ; OopMap{[136]=Oop rsi=Oop [184]=Oop off=5349}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x000000010c4b9565: mov    %rsi,0x8(%rsp)
  0x000000010c4b956a: mov    %rdi,(%rsp)
  0x000000010c4b956e: callq  0x000000010c4a33e0  ; OopMap{[136]=Oop rsi=Oop [184]=Oop [200]=Oop off=5363}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x000000010c4b9573: jmpq   0x000000010c4b8fd8
  0x000000010c4b9578: lea    0xc0(%rsp),%rax
  0x000000010c4b9580: mov    %rax,(%rsp)
  0x000000010c4b9584: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b9589: jmpq   0x000000010c4b900f
  0x000000010c4b958e: lea    0xb0(%rsp),%rax
  0x000000010c4b9596: mov    %rax,(%rsp)
  0x000000010c4b959a: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b959f: jmpq   0x000000010c4b907c
  0x000000010c4b95a4: lea    0xb0(%rsp),%rax
  0x000000010c4b95ac: mov    %rax,(%rsp)
  0x000000010c4b95b0: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b95b5: jmpq   0x000000010c4b9163
  0x000000010c4b95ba: lea    0xb0(%rsp),%rax
  0x000000010c4b95c2: mov    %rax,(%rsp)
  0x000000010c4b95c6: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b95cb: jmpq   0x000000010c4b91a9
  0x000000010c4b95d0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4b95da: mov    $0xa050f00,%eax
  0x000000010c4b95df: callq  0x000000010c4a3f60  ; OopMap{[112]=Oop [136]=Oop [184]=Oop off=5476}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000010c4b95e4: jmpq   0x000000010c4b91c8
  0x000000010c4b95e9: mov    %rdx,%rdx
  0x000000010c4b95ec: callq  0x000000010c4a0ee0  ; OopMap{[112]=Oop [136]=Oop [184]=Oop off=5489}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000010c4b95f1: jmpq   0x000000010c4b91d7
  0x000000010c4b95f6: lea    0xc0(%rsp),%rax
  0x000000010c4b95fe: mov    %rax,(%rsp)
  0x000000010c4b9602: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b9607: jmpq   0x000000010c4b9276
  0x000000010c4b960c: lea    0xc0(%rsp),%rax
  0x000000010c4b9614: mov    %rax,(%rsp)
  0x000000010c4b9618: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b961d: jmpq   0x000000010c4b92db
  0x000000010c4b9622: lea    0xc0(%rsp),%rax
  0x000000010c4b962a: mov    %rax,(%rsp)
  0x000000010c4b962e: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b9633: jmpq   0x000000010c4b934d
  0x000000010c4b9638: lea    0xb0(%rsp),%rax
  0x000000010c4b9640: mov    %rax,(%rsp)
  0x000000010c4b9644: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4b9649: jmpq   0x000000010c4b93b2
  0x000000010c4b964e: mov    0x90(%rsp),%rdi
  0x000000010c4b9656: jmpq   0x000000010c4b92ee
  0x000000010c4b965b: mov    0x7c(%rsp),%ebx
  0x000000010c4b965f: mov    0x80(%rsp),%rsi
  0x000000010c4b9667: jmpq   0x000000010c4b9289
  0x000000010c4b966c: nop
  0x000000010c4b966d: nop
  0x000000010c4b966e: mov    0x2a8(%r15),%rax
  0x000000010c4b9675: movabs $0x0,%r10
  0x000000010c4b967f: mov    %r10,0x2a8(%r15)
  0x000000010c4b9686: movabs $0x0,%r10
  0x000000010c4b9690: mov    %r10,0x2b0(%r15)
  0x000000010c4b9697: add    $0xe0,%rsp
  0x000000010c4b969e: pop    %rbp
  0x000000010c4b969f: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4b96a4: hlt    
  0x000000010c4b96a5: hlt    
  0x000000010c4b96a6: hlt    
  0x000000010c4b96a7: hlt    
  0x000000010c4b96a8: hlt    
  0x000000010c4b96a9: hlt    
  0x000000010c4b96aa: hlt    
  0x000000010c4b96ab: hlt    
  0x000000010c4b96ac: hlt    
  0x000000010c4b96ad: hlt    
  0x000000010c4b96ae: hlt    
  0x000000010c4b96af: hlt    
  0x000000010c4b96b0: hlt    
  0x000000010c4b96b1: hlt    
  0x000000010c4b96b2: hlt    
  0x000000010c4b96b3: hlt    
  0x000000010c4b96b4: hlt    
  0x000000010c4b96b5: hlt    
  0x000000010c4b96b6: hlt    
  0x000000010c4b96b7: hlt    
  0x000000010c4b96b8: hlt    
  0x000000010c4b96b9: hlt    
  0x000000010c4b96ba: hlt    
  0x000000010c4b96bb: hlt    
  0x000000010c4b96bc: hlt    
  0x000000010c4b96bd: hlt    
  0x000000010c4b96be: hlt    
  0x000000010c4b96bf: hlt    
[Stub Code]
  0x000000010c4b96c0: nop                       ;   {no_reloc}
  0x000000010c4b96c1: nop
  0x000000010c4b96c2: nop
  0x000000010c4b96c3: nop
  0x000000010c4b96c4: nop
  0x000000010c4b96c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b96cf: jmpq   0x000000010c4b96cf  ;   {runtime_call}
  0x000000010c4b96d4: nop
  0x000000010c4b96d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b96df: jmpq   0x000000010c4b96df  ;   {runtime_call}
  0x000000010c4b96e4: nop
  0x000000010c4b96e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b96ef: jmpq   0x000000010c4b96ef  ;   {runtime_call}
  0x000000010c4b96f4: nop
  0x000000010c4b96f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b96ff: jmpq   0x000000010c4b96ff  ;   {runtime_call}
  0x000000010c4b9704: nop
  0x000000010c4b9705: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b970f: jmpq   0x000000010c4b970f  ;   {runtime_call}
  0x000000010c4b9714: nop
  0x000000010c4b9715: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b971f: jmpq   0x000000010c4b971f  ;   {runtime_call}
  0x000000010c4b9724: nop
  0x000000010c4b9725: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4b972f: jmpq   0x000000010c4b972f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4b9734: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4b9739: mov    %rsp,-0x28(%rsp)
  0x000000010c4b973e: sub    $0x80,%rsp
  0x000000010c4b9745: mov    %rax,0x78(%rsp)
  0x000000010c4b974a: mov    %rcx,0x70(%rsp)
  0x000000010c4b974f: mov    %rdx,0x68(%rsp)
  0x000000010c4b9754: mov    %rbx,0x60(%rsp)
  0x000000010c4b9759: mov    %rbp,0x50(%rsp)
  0x000000010c4b975e: mov    %rsi,0x48(%rsp)
  0x000000010c4b9763: mov    %rdi,0x40(%rsp)
  0x000000010c4b9768: mov    %r8,0x38(%rsp)
  0x000000010c4b976d: mov    %r9,0x30(%rsp)
  0x000000010c4b9772: mov    %r10,0x28(%rsp)
  0x000000010c4b9777: mov    %r11,0x20(%rsp)
  0x000000010c4b977c: mov    %r12,0x18(%rsp)
  0x000000010c4b9781: mov    %r13,0x10(%rsp)
  0x000000010c4b9786: mov    %r14,0x8(%rsp)
  0x000000010c4b978b: mov    %r15,(%rsp)
  0x000000010c4b978f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4b9799: movabs $0x10c4b9739,%rsi  ;   {internal_word}
  0x000000010c4b97a3: mov    %rsp,%rdx
  0x000000010c4b97a6: and    $0xfffffffffffffff0,%rsp
  0x000000010c4b97aa: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4b97af: hlt    
[Deopt Handler Code]
  0x000000010c4b97b0: movabs $0x10c4b97b0,%r10  ;   {section_word}
  0x000000010c4b97ba: push   %r10
  0x000000010c4b97bc: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4b97c1: hlt    
  0x000000010c4b97c2: hlt    
  0x000000010c4b97c3: hlt    
  0x000000010c4b97c4: hlt    
  0x000000010c4b97c5: hlt    
  0x000000010c4b97c6: hlt    
  0x000000010c4b97c7: hlt    
Decoding compiled method 0x000000010c4ba990:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc3098} 'indexOf' '(I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010c4bab00: mov    0x8(%rsi),%r10d
  0x000000010c4bab04: shl    $0x3,%r10
  0x000000010c4bab08: cmp    %rax,%r10
  0x000000010c4bab0b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4bab11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4bab1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4bab20: mov    %eax,-0x14000(%rsp)
  0x000000010c4bab27: push   %rbp
  0x000000010c4bab28: sub    $0x30,%rsp
  0x000000010c4bab2c: movabs $0x124f07d10,%rcx  ;   {metadata(method data for {method} {0x0000000124cc3098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010c4bab36: mov    0xdc(%rcx),%edi
  0x000000010c4bab3c: add    $0x8,%edi
  0x000000010c4bab3f: mov    %edi,0xdc(%rcx)
  0x000000010c4bab45: movabs $0x124cc3098,%rcx  ;   {metadata({method} {0x0000000124cc3098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010c4bab4f: and    $0x1ff8,%edi
  0x000000010c4bab55: cmp    $0x0,%edi
  0x000000010c4bab58: je     0x000000010c4bac08  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x000000010c4bab5e: mov    %rsi,%rcx
  0x000000010c4bab61: movabs $0x124f07d10,%rdi  ;   {metadata(method data for {method} {0x0000000124cc3098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010c4bab6b: mov    0x8(%rcx),%ecx
  0x000000010c4bab6e: shl    $0x3,%rcx
  0x000000010c4bab72: cmp    0x110(%rdi),%rcx
  0x000000010c4bab79: jne    0x000000010c4bab88
  0x000000010c4bab7b: addq   $0x1,0x118(%rdi)
  0x000000010c4bab83: jmpq   0x000000010c4babee
  0x000000010c4bab88: cmp    0x120(%rdi),%rcx
  0x000000010c4bab8f: jne    0x000000010c4bab9e
  0x000000010c4bab91: addq   $0x1,0x128(%rdi)
  0x000000010c4bab99: jmpq   0x000000010c4babee
  0x000000010c4bab9e: cmpq   $0x0,0x110(%rdi)
  0x000000010c4baba9: jne    0x000000010c4babc2
  0x000000010c4babab: mov    %rcx,0x110(%rdi)
  0x000000010c4babb2: movq   $0x1,0x118(%rdi)
  0x000000010c4babbd: jmpq   0x000000010c4babee
  0x000000010c4babc2: cmpq   $0x0,0x120(%rdi)
  0x000000010c4babcd: jne    0x000000010c4babe6
  0x000000010c4babcf: mov    %rcx,0x120(%rdi)
  0x000000010c4babd6: movq   $0x1,0x128(%rdi)
  0x000000010c4babe1: jmpq   0x000000010c4babee
  0x000000010c4babe6: addq   $0x1,0x108(%rdi)
  0x000000010c4babee: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x000000010c4babf3: nop
  0x000000010c4babf4: nop
  0x000000010c4babf5: nop
  0x000000010c4babf6: nop
  0x000000010c4babf7: callq  0x000000010c3ed020  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x000000010c4babfc: add    $0x30,%rsp
  0x000000010c4bac00: pop    %rbp
  0x000000010c4bac01: test   %eax,-0x218eb07(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bac07: retq   
  0x000000010c4bac08: mov    %rcx,0x8(%rsp)
  0x000000010c4bac0d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bac15: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x000000010c4bac1a: jmpq   0x000000010c4bab5e
  0x000000010c4bac1f: nop
  0x000000010c4bac20: nop
  0x000000010c4bac21: mov    0x2a8(%r15),%rax
  0x000000010c4bac28: movabs $0x0,%r10
  0x000000010c4bac32: mov    %r10,0x2a8(%r15)
  0x000000010c4bac39: movabs $0x0,%r10
  0x000000010c4bac43: mov    %r10,0x2b0(%r15)
  0x000000010c4bac4a: add    $0x30,%rsp
  0x000000010c4bac4e: pop    %rbp
  0x000000010c4bac4f: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bac54: hlt    
  0x000000010c4bac55: hlt    
  0x000000010c4bac56: hlt    
  0x000000010c4bac57: hlt    
  0x000000010c4bac58: hlt    
  0x000000010c4bac59: hlt    
  0x000000010c4bac5a: hlt    
  0x000000010c4bac5b: hlt    
  0x000000010c4bac5c: hlt    
  0x000000010c4bac5d: hlt    
  0x000000010c4bac5e: hlt    
  0x000000010c4bac5f: hlt    
[Stub Code]
  0x000000010c4bac60: nop                       ;   {no_reloc}
  0x000000010c4bac61: nop
  0x000000010c4bac62: nop
  0x000000010c4bac63: nop
  0x000000010c4bac64: nop
  0x000000010c4bac65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4bac6f: jmpq   0x000000010c4bac6f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4bac74: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4bac79: mov    %rsp,-0x28(%rsp)
  0x000000010c4bac7e: sub    $0x80,%rsp
  0x000000010c4bac85: mov    %rax,0x78(%rsp)
  0x000000010c4bac8a: mov    %rcx,0x70(%rsp)
  0x000000010c4bac8f: mov    %rdx,0x68(%rsp)
  0x000000010c4bac94: mov    %rbx,0x60(%rsp)
  0x000000010c4bac99: mov    %rbp,0x50(%rsp)
  0x000000010c4bac9e: mov    %rsi,0x48(%rsp)
  0x000000010c4baca3: mov    %rdi,0x40(%rsp)
  0x000000010c4baca8: mov    %r8,0x38(%rsp)
  0x000000010c4bacad: mov    %r9,0x30(%rsp)
  0x000000010c4bacb2: mov    %r10,0x28(%rsp)
  0x000000010c4bacb7: mov    %r11,0x20(%rsp)
  0x000000010c4bacbc: mov    %r12,0x18(%rsp)
  0x000000010c4bacc1: mov    %r13,0x10(%rsp)
  0x000000010c4bacc6: mov    %r14,0x8(%rsp)
  0x000000010c4baccb: mov    %r15,(%rsp)
  0x000000010c4baccf: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bacd9: movabs $0x10c4bac79,%rsi  ;   {internal_word}
  0x000000010c4bace3: mov    %rsp,%rdx
  0x000000010c4bace6: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bacea: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bacef: hlt    
[Deopt Handler Code]
  0x000000010c4bacf0: movabs $0x10c4bacf0,%r10  ;   {section_word}
  0x000000010c4bacfa: push   %r10
  0x000000010c4bacfc: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bad01: hlt    
  0x000000010c4bad02: hlt    
  0x000000010c4bad03: hlt    
  0x000000010c4bad04: hlt    
  0x000000010c4bad05: hlt    
  0x000000010c4bad06: hlt    
  0x000000010c4bad07: hlt    
Decoding compiled method 0x000000010c4badd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000124cd7778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4baf20: mov    %eax,-0x14000(%rsp)
  0x000000010c4baf27: push   %rbp
  0x000000010c4baf28: sub    $0x30,%rsp
  0x000000010c4baf2c: movabs $0x124f09be8,%rax  ;   {metadata(method data for {method} {0x0000000124cd7778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010c4baf36: mov    0xdc(%rax),%esi
  0x000000010c4baf3c: add    $0x8,%esi
  0x000000010c4baf3f: mov    %esi,0xdc(%rax)
  0x000000010c4baf45: movabs $0x124cd7778,%rax  ;   {metadata({method} {0x0000000124cd7778} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010c4baf4f: and    $0x1ff8,%esi
  0x000000010c4baf55: cmp    $0x0,%esi
  0x000000010c4baf58: je     0x000000010c4baf7b
  0x000000010c4baf5e: movabs $0x76ab00c78,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010c4baf68: mov    0x74(%rax),%eax
  0x000000010c4baf6b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x000000010c4baf6f: add    $0x30,%rsp
  0x000000010c4baf73: pop    %rbp
  0x000000010c4baf74: test   %eax,-0x218ee7a(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4baf7a: retq   
  0x000000010c4baf7b: mov    %rax,0x8(%rsp)
  0x000000010c4baf80: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4baf88: callq  0x000000010c4a4f60  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x000000010c4baf8d: jmp    0x000000010c4baf5e
  0x000000010c4baf8f: nop
  0x000000010c4baf90: nop
  0x000000010c4baf91: mov    0x2a8(%r15),%rax
  0x000000010c4baf98: movabs $0x0,%r10
  0x000000010c4bafa2: mov    %r10,0x2a8(%r15)
  0x000000010c4bafa9: movabs $0x0,%r10
  0x000000010c4bafb3: mov    %r10,0x2b0(%r15)
  0x000000010c4bafba: add    $0x30,%rsp
  0x000000010c4bafbe: pop    %rbp
  0x000000010c4bafbf: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bafc4: hlt    
  0x000000010c4bafc5: hlt    
  0x000000010c4bafc6: hlt    
  0x000000010c4bafc7: hlt    
  0x000000010c4bafc8: hlt    
  0x000000010c4bafc9: hlt    
  0x000000010c4bafca: hlt    
  0x000000010c4bafcb: hlt    
  0x000000010c4bafcc: hlt    
  0x000000010c4bafcd: hlt    
  0x000000010c4bafce: hlt    
  0x000000010c4bafcf: hlt    
  0x000000010c4bafd0: hlt    
  0x000000010c4bafd1: hlt    
  0x000000010c4bafd2: hlt    
  0x000000010c4bafd3: hlt    
  0x000000010c4bafd4: hlt    
  0x000000010c4bafd5: hlt    
  0x000000010c4bafd6: hlt    
  0x000000010c4bafd7: hlt    
  0x000000010c4bafd8: hlt    
  0x000000010c4bafd9: hlt    
  0x000000010c4bafda: hlt    
  0x000000010c4bafdb: hlt    
  0x000000010c4bafdc: hlt    
  0x000000010c4bafdd: hlt    
  0x000000010c4bafde: hlt    
  0x000000010c4bafdf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4bafe0: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4bafe5: mov    %rsp,-0x28(%rsp)
  0x000000010c4bafea: sub    $0x80,%rsp
  0x000000010c4baff1: mov    %rax,0x78(%rsp)
  0x000000010c4baff6: mov    %rcx,0x70(%rsp)
  0x000000010c4baffb: mov    %rdx,0x68(%rsp)
  0x000000010c4bb000: mov    %rbx,0x60(%rsp)
  0x000000010c4bb005: mov    %rbp,0x50(%rsp)
  0x000000010c4bb00a: mov    %rsi,0x48(%rsp)
  0x000000010c4bb00f: mov    %rdi,0x40(%rsp)
  0x000000010c4bb014: mov    %r8,0x38(%rsp)
  0x000000010c4bb019: mov    %r9,0x30(%rsp)
  0x000000010c4bb01e: mov    %r10,0x28(%rsp)
  0x000000010c4bb023: mov    %r11,0x20(%rsp)
  0x000000010c4bb028: mov    %r12,0x18(%rsp)
  0x000000010c4bb02d: mov    %r13,0x10(%rsp)
  0x000000010c4bb032: mov    %r14,0x8(%rsp)
  0x000000010c4bb037: mov    %r15,(%rsp)
  0x000000010c4bb03b: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bb045: movabs $0x10c4bafe5,%rsi  ;   {internal_word}
  0x000000010c4bb04f: mov    %rsp,%rdx
  0x000000010c4bb052: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bb056: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bb05b: hlt    
[Deopt Handler Code]
  0x000000010c4bb05c: movabs $0x10c4bb05c,%r10  ;   {section_word}
  0x000000010c4bb066: push   %r10
  0x000000010c4bb068: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bb06d: hlt    
  0x000000010c4bb06e: hlt    
  0x000000010c4bb06f: hlt    
Decoding compiled method 0x000000010c4bb110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000124e81bb8} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010c4bb2c0: mov    %eax,-0x14000(%rsp)
  0x000000010c4bb2c7: push   %rbp
  0x000000010c4bb2c8: sub    $0x30,%rsp
  0x000000010c4bb2cc: movabs $0x124f13c48,%rax  ;   {metadata(method data for {method} {0x0000000124e81bb8} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010c4bb2d6: mov    0xdc(%rax),%edi
  0x000000010c4bb2dc: add    $0x8,%edi
  0x000000010c4bb2df: mov    %edi,0xdc(%rax)
  0x000000010c4bb2e5: movabs $0x124e81bb8,%rax  ;   {metadata({method} {0x0000000124e81bb8} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010c4bb2ef: and    $0x1ff8,%edi
  0x000000010c4bb2f5: cmp    $0x0,%edi
  0x000000010c4bb2f8: je     0x000000010c4bb47c  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000010c4bb2fe: mov    %rsi,%rax
  0x000000010c4bb301: shr    $0x8,%eax
  0x000000010c4bb304: cmp    $0x0,%eax
  0x000000010c4bb307: movabs $0x124f13c48,%rax  ;   {metadata(method data for {method} {0x0000000124e81bb8} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010c4bb311: movabs $0x108,%rdi
  0x000000010c4bb31b: jne    0x000000010c4bb32b
  0x000000010c4bb321: movabs $0x118,%rdi
  0x000000010c4bb32b: mov    (%rax,%rdi,1),%rbx
  0x000000010c4bb32f: lea    0x1(%rbx),%rbx
  0x000000010c4bb333: mov    %rbx,(%rax,%rdi,1)
  0x000000010c4bb337: je     0x000000010c4bb466  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x000000010c4bb33d: shr    $0x10,%esi
  0x000000010c4bb340: cmp    $0x0,%esi
  0x000000010c4bb343: je     0x000000010c4bb43e
  0x000000010c4bb349: cmp    $0x1,%esi
  0x000000010c4bb34c: je     0x000000010c4bb416
  0x000000010c4bb352: cmp    $0x2,%esi
  0x000000010c4bb355: je     0x000000010c4bb3ee
  0x000000010c4bb35b: cmp    $0xe,%esi
  0x000000010c4bb35e: je     0x000000010c4bb3c6
  0x000000010c4bb364: cmp    $0xf,%esi
  0x000000010c4bb367: je     0x000000010c4bb376
  0x000000010c4bb36d: cmp    $0x10,%esi
  0x000000010c4bb370: jne    0x000000010c4bb39e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x000000010c4bb376: xchg   %ax,%ax
  0x000000010c4bb378: jmpq   0x000000010c4bb4f0  ;   {no_reloc}
  0x000000010c4bb37d: add    %al,(%rax)
  0x000000010c4bb37f: add    %al,(%rax)
  0x000000010c4bb381: add    %ah,0xf(%rsi)
  0x000000010c4bb384: (bad)  
  0x000000010c4bb385: add    %r8b,(%rax)
  0x000000010c4bb388: jmpq   0x000000010c4bb50a  ; implicit exception: dispatches to 0x000000010c4bb4fa
  0x000000010c4bb38d: nop
  0x000000010c4bb38e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x000000010c4bb392: add    $0x30,%rsp
  0x000000010c4bb396: pop    %rbp
  0x000000010c4bb397: test   %eax,-0x218f29d(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bb39d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x000000010c4bb39e: xchg   %ax,%ax
  0x000000010c4bb3a0: jmpq   0x000000010c4bb571  ;   {no_reloc}
  0x000000010c4bb3a5: add    %al,(%rax)
  0x000000010c4bb3a7: add    %al,(%rax)
  0x000000010c4bb3a9: add    %ah,0xf(%rsi)
  0x000000010c4bb3ac: (bad)  
  0x000000010c4bb3ad: add    %r8b,(%rax)
  0x000000010c4bb3b0: jmpq   0x000000010c4bb58b  ; implicit exception: dispatches to 0x000000010c4bb57b
  0x000000010c4bb3b5: nop
  0x000000010c4bb3b6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x000000010c4bb3ba: add    $0x30,%rsp
  0x000000010c4bb3be: pop    %rbp
  0x000000010c4bb3bf: test   %eax,-0x218f2c5(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bb3c5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x000000010c4bb3c6: xchg   %ax,%ax
  0x000000010c4bb3c8: jmpq   0x000000010c4bb5f2  ;   {no_reloc}
  0x000000010c4bb3cd: add    %al,(%rax)
  0x000000010c4bb3cf: add    %al,(%rax)
  0x000000010c4bb3d1: add    %ah,0xf(%rsi)
  0x000000010c4bb3d4: (bad)  
  0x000000010c4bb3d5: add    %r8b,(%rax)
  0x000000010c4bb3d8: jmpq   0x000000010c4bb60c  ; implicit exception: dispatches to 0x000000010c4bb5fc
  0x000000010c4bb3dd: nop
  0x000000010c4bb3de: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x000000010c4bb3e2: add    $0x30,%rsp
  0x000000010c4bb3e6: pop    %rbp
  0x000000010c4bb3e7: test   %eax,-0x218f2ed(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bb3ed: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x000000010c4bb3ee: xchg   %ax,%ax
  0x000000010c4bb3f0: jmpq   0x000000010c4bb673  ;   {no_reloc}
  0x000000010c4bb3f5: add    %al,(%rax)
  0x000000010c4bb3f7: add    %al,(%rax)
  0x000000010c4bb3f9: add    %ah,0xf(%rsi)
  0x000000010c4bb3fc: (bad)  
  0x000000010c4bb3fd: add    %r8b,(%rax)
  0x000000010c4bb400: jmpq   0x000000010c4bb68d  ; implicit exception: dispatches to 0x000000010c4bb67d
  0x000000010c4bb405: nop
  0x000000010c4bb406: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x000000010c4bb40a: add    $0x30,%rsp
  0x000000010c4bb40e: pop    %rbp
  0x000000010c4bb40f: test   %eax,-0x218f315(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bb415: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x000000010c4bb416: xchg   %ax,%ax
  0x000000010c4bb418: jmpq   0x000000010c4bb6f4  ;   {no_reloc}
  0x000000010c4bb41d: add    %al,(%rax)
  0x000000010c4bb41f: add    %al,(%rax)
  0x000000010c4bb421: add    %ah,0xf(%rsi)
  0x000000010c4bb424: (bad)  
  0x000000010c4bb425: add    %r8b,(%rax)
  0x000000010c4bb428: jmpq   0x000000010c4bb70e  ; implicit exception: dispatches to 0x000000010c4bb6fe
  0x000000010c4bb42d: nop
  0x000000010c4bb42e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x000000010c4bb432: add    $0x30,%rsp
  0x000000010c4bb436: pop    %rbp
  0x000000010c4bb437: test   %eax,-0x218f33d(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bb43d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x000000010c4bb43e: xchg   %ax,%ax
  0x000000010c4bb440: jmpq   0x000000010c4bb775  ;   {no_reloc}
  0x000000010c4bb445: add    %al,(%rax)
  0x000000010c4bb447: add    %al,(%rax)
  0x000000010c4bb449: add    %ah,0xf(%rsi)
  0x000000010c4bb44c: (bad)  
  0x000000010c4bb44d: add    %r8b,(%rax)
  0x000000010c4bb450: jmpq   0x000000010c4bb78f  ; implicit exception: dispatches to 0x000000010c4bb77f
  0x000000010c4bb455: nop
  0x000000010c4bb456: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x000000010c4bb45a: add    $0x30,%rsp
  0x000000010c4bb45e: pop    %rbp
  0x000000010c4bb45f: test   %eax,-0x218f365(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bb465: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x000000010c4bb466: movabs $0x76ab471f0,%rax  ;   {oop(a 'java/lang/CharacterDataLatin1')}
  0x000000010c4bb470: add    $0x30,%rsp
  0x000000010c4bb474: pop    %rbp
  0x000000010c4bb475: test   %eax,-0x218f37b(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bb47b: retq   
  0x000000010c4bb47c: mov    %rax,0x8(%rsp)
  0x000000010c4bb481: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bb489: callq  0x000000010c4a4f60  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x000000010c4bb48e: jmpq   0x000000010c4bb2fe
  0x000000010c4bb493: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010c4bb49d: push   %rax
  0x000000010c4bb49e: push   %rbx
  0x000000010c4bb49f: mov    0x48(%rax),%rbx
  0x000000010c4bb4a3: push   %rdi
  0x000000010c4bb4a4: push   %rsi
  0x000000010c4bb4a5: push   %rdx
  0x000000010c4bb4a6: push   %rcx
  0x000000010c4bb4a7: push   %r8
  0x000000010c4bb4a9: push   %r9
  0x000000010c4bb4ab: push   %r10
  0x000000010c4bb4ad: mov    %rsp,%r10
  0x000000010c4bb4b0: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bb4b4: push   %r10
  0x000000010c4bb4b6: push   %r11
  0x000000010c4bb4b8: mov    $0x102,%edi
  0x000000010c4bb4bd: movabs $0x7fff9aac7aa2,%r10  ;   {runtime_call}
  0x000000010c4bb4c7: callq  *%r10
  0x000000010c4bb4ca: pop    %r11
  0x000000010c4bb4cc: pop    %rsp
  0x000000010c4bb4cd: pop    %r10
  0x000000010c4bb4cf: pop    %r9
  0x000000010c4bb4d1: pop    %r8
  0x000000010c4bb4d3: pop    %rcx
  0x000000010c4bb4d4: pop    %rdx
  0x000000010c4bb4d5: pop    %rsi
  0x000000010c4bb4d6: pop    %rdi
  0x000000010c4bb4d7: cmp    0x118(%rbx),%rax
  0x000000010c4bb4de: pop    %rbx
  0x000000010c4bb4df: pop    %rax
  0x000000010c4bb4e0: jne    0x000000010c4bb4f0
  0x000000010c4bb4e6: jmpq   0x000000010c4bb382
  0x000000010c4bb4eb: mov    $0xa535d00,%eax
  0x000000010c4bb4f0: callq  0x000000010c4a4360  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010c4bb4f5: jmpq   0x000000010c4bb378
  0x000000010c4bb4fa: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010c4bb4ff: mov    0x0(%rax),%eax
  0x000000010c4bb505: mov    $0x6050b00,%eax
  0x000000010c4bb50a: callq  0x000000010c4a3b60  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010c4bb50f: jmpq   0x000000010c4bb388
  0x000000010c4bb514: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010c4bb51e: push   %rax
  0x000000010c4bb51f: push   %rbx
  0x000000010c4bb520: mov    0x48(%rax),%rbx
  0x000000010c4bb524: push   %rdi
  0x000000010c4bb525: push   %rsi
  0x000000010c4bb526: push   %rdx
  0x000000010c4bb527: push   %rcx
  0x000000010c4bb528: push   %r8
  0x000000010c4bb52a: push   %r9
  0x000000010c4bb52c: push   %r10
  0x000000010c4bb52e: mov    %rsp,%r10
  0x000000010c4bb531: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bb535: push   %r10
  0x000000010c4bb537: push   %r11
  0x000000010c4bb539: mov    $0x102,%edi
  0x000000010c4bb53e: movabs $0x7fff9aac7aa2,%r10  ;   {runtime_call}
  0x000000010c4bb548: callq  *%r10
  0x000000010c4bb54b: pop    %r11
  0x000000010c4bb54d: pop    %rsp
  0x000000010c4bb54e: pop    %r10
  0x000000010c4bb550: pop    %r9
  0x000000010c4bb552: pop    %r8
  0x000000010c4bb554: pop    %rcx
  0x000000010c4bb555: pop    %rdx
  0x000000010c4bb556: pop    %rsi
  0x000000010c4bb557: pop    %rdi
  0x000000010c4bb558: cmp    0x118(%rbx),%rax
  0x000000010c4bb55f: pop    %rbx
  0x000000010c4bb560: pop    %rax
  0x000000010c4bb561: jne    0x000000010c4bb571
  0x000000010c4bb567: jmpq   0x000000010c4bb3aa
  0x000000010c4bb56c: mov    $0xa535d00,%eax
  0x000000010c4bb571: callq  0x000000010c4a4360  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010c4bb576: jmpq   0x000000010c4bb3a0
  0x000000010c4bb57b: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010c4bb580: mov    0x0(%rax),%eax
  0x000000010c4bb586: mov    $0x6050b00,%eax
  0x000000010c4bb58b: callq  0x000000010c4a3b60  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010c4bb590: jmpq   0x000000010c4bb3b0
  0x000000010c4bb595: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010c4bb59f: push   %rax
  0x000000010c4bb5a0: push   %rbx
  0x000000010c4bb5a1: mov    0x48(%rax),%rbx
  0x000000010c4bb5a5: push   %rdi
  0x000000010c4bb5a6: push   %rsi
  0x000000010c4bb5a7: push   %rdx
  0x000000010c4bb5a8: push   %rcx
  0x000000010c4bb5a9: push   %r8
  0x000000010c4bb5ab: push   %r9
  0x000000010c4bb5ad: push   %r10
  0x000000010c4bb5af: mov    %rsp,%r10
  0x000000010c4bb5b2: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bb5b6: push   %r10
  0x000000010c4bb5b8: push   %r11
  0x000000010c4bb5ba: mov    $0x102,%edi
  0x000000010c4bb5bf: movabs $0x7fff9aac7aa2,%r10  ;   {runtime_call}
  0x000000010c4bb5c9: callq  *%r10
  0x000000010c4bb5cc: pop    %r11
  0x000000010c4bb5ce: pop    %rsp
  0x000000010c4bb5cf: pop    %r10
  0x000000010c4bb5d1: pop    %r9
  0x000000010c4bb5d3: pop    %r8
  0x000000010c4bb5d5: pop    %rcx
  0x000000010c4bb5d6: pop    %rdx
  0x000000010c4bb5d7: pop    %rsi
  0x000000010c4bb5d8: pop    %rdi
  0x000000010c4bb5d9: cmp    0x118(%rbx),%rax
  0x000000010c4bb5e0: pop    %rbx
  0x000000010c4bb5e1: pop    %rax
  0x000000010c4bb5e2: jne    0x000000010c4bb5f2
  0x000000010c4bb5e8: jmpq   0x000000010c4bb3d2
  0x000000010c4bb5ed: mov    $0xa535d00,%eax
  0x000000010c4bb5f2: callq  0x000000010c4a4360  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010c4bb5f7: jmpq   0x000000010c4bb3c8
  0x000000010c4bb5fc: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010c4bb601: mov    0x0(%rax),%eax
  0x000000010c4bb607: mov    $0x6050b00,%eax
  0x000000010c4bb60c: callq  0x000000010c4a3b60  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010c4bb611: jmpq   0x000000010c4bb3d8
  0x000000010c4bb616: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010c4bb620: push   %rax
  0x000000010c4bb621: push   %rbx
  0x000000010c4bb622: mov    0x48(%rax),%rbx
  0x000000010c4bb626: push   %rdi
  0x000000010c4bb627: push   %rsi
  0x000000010c4bb628: push   %rdx
  0x000000010c4bb629: push   %rcx
  0x000000010c4bb62a: push   %r8
  0x000000010c4bb62c: push   %r9
  0x000000010c4bb62e: push   %r10
  0x000000010c4bb630: mov    %rsp,%r10
  0x000000010c4bb633: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bb637: push   %r10
  0x000000010c4bb639: push   %r11
  0x000000010c4bb63b: mov    $0x102,%edi
  0x000000010c4bb640: movabs $0x7fff9aac7aa2,%r10  ;   {runtime_call}
  0x000000010c4bb64a: callq  *%r10
  0x000000010c4bb64d: pop    %r11
  0x000000010c4bb64f: pop    %rsp
  0x000000010c4bb650: pop    %r10
  0x000000010c4bb652: pop    %r9
  0x000000010c4bb654: pop    %r8
  0x000000010c4bb656: pop    %rcx
  0x000000010c4bb657: pop    %rdx
  0x000000010c4bb658: pop    %rsi
  0x000000010c4bb659: pop    %rdi
  0x000000010c4bb65a: cmp    0x118(%rbx),%rax
  0x000000010c4bb661: pop    %rbx
  0x000000010c4bb662: pop    %rax
  0x000000010c4bb663: jne    0x000000010c4bb673
  0x000000010c4bb669: jmpq   0x000000010c4bb3fa
  0x000000010c4bb66e: mov    $0xa535d00,%eax
  0x000000010c4bb673: callq  0x000000010c4a4360  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010c4bb678: jmpq   0x000000010c4bb3f0
  0x000000010c4bb67d: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010c4bb682: mov    0x0(%rax),%eax
  0x000000010c4bb688: mov    $0x6050b00,%eax
  0x000000010c4bb68d: callq  0x000000010c4a3b60  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010c4bb692: jmpq   0x000000010c4bb400
  0x000000010c4bb697: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010c4bb6a1: push   %rax
  0x000000010c4bb6a2: push   %rbx
  0x000000010c4bb6a3: mov    0x48(%rax),%rbx
  0x000000010c4bb6a7: push   %rdi
  0x000000010c4bb6a8: push   %rsi
  0x000000010c4bb6a9: push   %rdx
  0x000000010c4bb6aa: push   %rcx
  0x000000010c4bb6ab: push   %r8
  0x000000010c4bb6ad: push   %r9
  0x000000010c4bb6af: push   %r10
  0x000000010c4bb6b1: mov    %rsp,%r10
  0x000000010c4bb6b4: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bb6b8: push   %r10
  0x000000010c4bb6ba: push   %r11
  0x000000010c4bb6bc: mov    $0x102,%edi
  0x000000010c4bb6c1: movabs $0x7fff9aac7aa2,%r10  ;   {runtime_call}
  0x000000010c4bb6cb: callq  *%r10
  0x000000010c4bb6ce: pop    %r11
  0x000000010c4bb6d0: pop    %rsp
  0x000000010c4bb6d1: pop    %r10
  0x000000010c4bb6d3: pop    %r9
  0x000000010c4bb6d5: pop    %r8
  0x000000010c4bb6d7: pop    %rcx
  0x000000010c4bb6d8: pop    %rdx
  0x000000010c4bb6d9: pop    %rsi
  0x000000010c4bb6da: pop    %rdi
  0x000000010c4bb6db: cmp    0x118(%rbx),%rax
  0x000000010c4bb6e2: pop    %rbx
  0x000000010c4bb6e3: pop    %rax
  0x000000010c4bb6e4: jne    0x000000010c4bb6f4
  0x000000010c4bb6ea: jmpq   0x000000010c4bb422
  0x000000010c4bb6ef: mov    $0xa535d00,%eax
  0x000000010c4bb6f4: callq  0x000000010c4a4360  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010c4bb6f9: jmpq   0x000000010c4bb418
  0x000000010c4bb6fe: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010c4bb703: mov    0x0(%rax),%eax
  0x000000010c4bb709: mov    $0x6050b00,%eax
  0x000000010c4bb70e: callq  0x000000010c4a3b60  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010c4bb713: jmpq   0x000000010c4bb428
  0x000000010c4bb718: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010c4bb722: push   %rax
  0x000000010c4bb723: push   %rbx
  0x000000010c4bb724: mov    0x48(%rax),%rbx
  0x000000010c4bb728: push   %rdi
  0x000000010c4bb729: push   %rsi
  0x000000010c4bb72a: push   %rdx
  0x000000010c4bb72b: push   %rcx
  0x000000010c4bb72c: push   %r8
  0x000000010c4bb72e: push   %r9
  0x000000010c4bb730: push   %r10
  0x000000010c4bb732: mov    %rsp,%r10
  0x000000010c4bb735: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bb739: push   %r10
  0x000000010c4bb73b: push   %r11
  0x000000010c4bb73d: mov    $0x102,%edi
  0x000000010c4bb742: movabs $0x7fff9aac7aa2,%r10  ;   {runtime_call}
  0x000000010c4bb74c: callq  *%r10
  0x000000010c4bb74f: pop    %r11
  0x000000010c4bb751: pop    %rsp
  0x000000010c4bb752: pop    %r10
  0x000000010c4bb754: pop    %r9
  0x000000010c4bb756: pop    %r8
  0x000000010c4bb758: pop    %rcx
  0x000000010c4bb759: pop    %rdx
  0x000000010c4bb75a: pop    %rsi
  0x000000010c4bb75b: pop    %rdi
  0x000000010c4bb75c: cmp    0x118(%rbx),%rax
  0x000000010c4bb763: pop    %rbx
  0x000000010c4bb764: pop    %rax
  0x000000010c4bb765: jne    0x000000010c4bb775
  0x000000010c4bb76b: jmpq   0x000000010c4bb44a
  0x000000010c4bb770: mov    $0xa535d00,%eax
  0x000000010c4bb775: callq  0x000000010c4a4360  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010c4bb77a: jmpq   0x000000010c4bb440
  0x000000010c4bb77f: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010c4bb784: mov    0x0(%rax),%eax
  0x000000010c4bb78a: mov    $0x6050b00,%eax
  0x000000010c4bb78f: callq  0x000000010c4a3b60  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010c4bb794: jmpq   0x000000010c4bb450
  0x000000010c4bb799: nop
  0x000000010c4bb79a: nop
  0x000000010c4bb79b: mov    0x2a8(%r15),%rax
  0x000000010c4bb7a2: movabs $0x0,%r10
  0x000000010c4bb7ac: mov    %r10,0x2a8(%r15)
  0x000000010c4bb7b3: movabs $0x0,%r10
  0x000000010c4bb7bd: mov    %r10,0x2b0(%r15)
  0x000000010c4bb7c4: add    $0x30,%rsp
  0x000000010c4bb7c8: pop    %rbp
  0x000000010c4bb7c9: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bb7ce: hlt    
  0x000000010c4bb7cf: hlt    
  0x000000010c4bb7d0: hlt    
  0x000000010c4bb7d1: hlt    
  0x000000010c4bb7d2: hlt    
  0x000000010c4bb7d3: hlt    
  0x000000010c4bb7d4: hlt    
  0x000000010c4bb7d5: hlt    
  0x000000010c4bb7d6: hlt    
  0x000000010c4bb7d7: hlt    
  0x000000010c4bb7d8: hlt    
  0x000000010c4bb7d9: hlt    
  0x000000010c4bb7da: hlt    
  0x000000010c4bb7db: hlt    
  0x000000010c4bb7dc: hlt    
  0x000000010c4bb7dd: hlt    
  0x000000010c4bb7de: hlt    
  0x000000010c4bb7df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4bb7e0: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4bb7e5: mov    %rsp,-0x28(%rsp)
  0x000000010c4bb7ea: sub    $0x80,%rsp
  0x000000010c4bb7f1: mov    %rax,0x78(%rsp)
  0x000000010c4bb7f6: mov    %rcx,0x70(%rsp)
  0x000000010c4bb7fb: mov    %rdx,0x68(%rsp)
  0x000000010c4bb800: mov    %rbx,0x60(%rsp)
  0x000000010c4bb805: mov    %rbp,0x50(%rsp)
  0x000000010c4bb80a: mov    %rsi,0x48(%rsp)
  0x000000010c4bb80f: mov    %rdi,0x40(%rsp)
  0x000000010c4bb814: mov    %r8,0x38(%rsp)
  0x000000010c4bb819: mov    %r9,0x30(%rsp)
  0x000000010c4bb81e: mov    %r10,0x28(%rsp)
  0x000000010c4bb823: mov    %r11,0x20(%rsp)
  0x000000010c4bb828: mov    %r12,0x18(%rsp)
  0x000000010c4bb82d: mov    %r13,0x10(%rsp)
  0x000000010c4bb832: mov    %r14,0x8(%rsp)
  0x000000010c4bb837: mov    %r15,(%rsp)
  0x000000010c4bb83b: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bb845: movabs $0x10c4bb7e5,%rsi  ;   {internal_word}
  0x000000010c4bb84f: mov    %rsp,%rdx
  0x000000010c4bb852: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bb856: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bb85b: hlt    
[Deopt Handler Code]
  0x000000010c4bb85c: movabs $0x10c4bb85c,%r10  ;   {section_word}
  0x000000010c4bb866: push   %r10
  0x000000010c4bb868: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bb86d: hlt    
  0x000000010c4bb86e: hlt    
  0x000000010c4bb86f: hlt    
Decoding compiled method 0x000000010c4bbbd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124e82290} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010c4bbd40: mov    0x8(%rsi),%r10d
  0x000000010c4bbd44: shl    $0x3,%r10
  0x000000010c4bbd48: cmp    %rax,%r10
  0x000000010c4bbd4b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4bbd51: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4bbd5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4bbd60: mov    %eax,-0x14000(%rsp)
  0x000000010c4bbd67: push   %rbp
  0x000000010c4bbd68: sub    $0x30,%rsp
  0x000000010c4bbd6c: movabs $0x124f13eb8,%rax  ;   {metadata(method data for {method} {0x0000000124e82290} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bbd76: mov    0xdc(%rax),%edi
  0x000000010c4bbd7c: add    $0x8,%edi
  0x000000010c4bbd7f: mov    %edi,0xdc(%rax)
  0x000000010c4bbd85: movabs $0x124e82290,%rax  ;   {metadata({method} {0x0000000124e82290} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bbd8f: and    $0x1ff8,%edi
  0x000000010c4bbd95: cmp    $0x0,%edi
  0x000000010c4bbd98: je     0x000000010c4bbdca  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000010c4bbd9e: and    $0xffff,%edx
  0x000000010c4bbda4: movabs $0x76ab47200,%rax  ;   {oop([I)}
  0x000000010c4bbdae: movslq %edx,%rsi
  0x000000010c4bbdb1: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010c4bbdde
  0x000000010c4bbdb4: jae    0x000000010c4bbde8
  0x000000010c4bbdba: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x000000010c4bbdbe: add    $0x30,%rsp
  0x000000010c4bbdc2: pop    %rbp
  0x000000010c4bbdc3: test   %eax,-0x218fcc9(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bbdc9: retq   
  0x000000010c4bbdca: mov    %rax,0x8(%rsp)
  0x000000010c4bbdcf: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bbdd7: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=156}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000010c4bbddc: jmp    0x000000010c4bbd9e
  0x000000010c4bbdde: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=163}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010c4bbde3: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=168}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010c4bbde8: mov    %rdx,(%rsp)
  0x000000010c4bbdec: callq  0x000000010c413000  ; OopMap{rax=Oop off=177}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010c4bbdf1: nop
  0x000000010c4bbdf2: nop
  0x000000010c4bbdf3: mov    0x2a8(%r15),%rax
  0x000000010c4bbdfa: movabs $0x0,%r10
  0x000000010c4bbe04: mov    %r10,0x2a8(%r15)
  0x000000010c4bbe0b: movabs $0x0,%r10
  0x000000010c4bbe15: mov    %r10,0x2b0(%r15)
  0x000000010c4bbe1c: add    $0x30,%rsp
  0x000000010c4bbe20: pop    %rbp
  0x000000010c4bbe21: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bbe26: hlt    
  0x000000010c4bbe27: hlt    
  0x000000010c4bbe28: hlt    
  0x000000010c4bbe29: hlt    
  0x000000010c4bbe2a: hlt    
  0x000000010c4bbe2b: hlt    
  0x000000010c4bbe2c: hlt    
  0x000000010c4bbe2d: hlt    
  0x000000010c4bbe2e: hlt    
  0x000000010c4bbe2f: hlt    
  0x000000010c4bbe30: hlt    
  0x000000010c4bbe31: hlt    
  0x000000010c4bbe32: hlt    
  0x000000010c4bbe33: hlt    
  0x000000010c4bbe34: hlt    
  0x000000010c4bbe35: hlt    
  0x000000010c4bbe36: hlt    
  0x000000010c4bbe37: hlt    
  0x000000010c4bbe38: hlt    
  0x000000010c4bbe39: hlt    
  0x000000010c4bbe3a: hlt    
  0x000000010c4bbe3b: hlt    
  0x000000010c4bbe3c: hlt    
  0x000000010c4bbe3d: hlt    
  0x000000010c4bbe3e: hlt    
  0x000000010c4bbe3f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4bbe40: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4bbe45: mov    %rsp,-0x28(%rsp)
  0x000000010c4bbe4a: sub    $0x80,%rsp
  0x000000010c4bbe51: mov    %rax,0x78(%rsp)
  0x000000010c4bbe56: mov    %rcx,0x70(%rsp)
  0x000000010c4bbe5b: mov    %rdx,0x68(%rsp)
  0x000000010c4bbe60: mov    %rbx,0x60(%rsp)
  0x000000010c4bbe65: mov    %rbp,0x50(%rsp)
  0x000000010c4bbe6a: mov    %rsi,0x48(%rsp)
  0x000000010c4bbe6f: mov    %rdi,0x40(%rsp)
  0x000000010c4bbe74: mov    %r8,0x38(%rsp)
  0x000000010c4bbe79: mov    %r9,0x30(%rsp)
  0x000000010c4bbe7e: mov    %r10,0x28(%rsp)
  0x000000010c4bbe83: mov    %r11,0x20(%rsp)
  0x000000010c4bbe88: mov    %r12,0x18(%rsp)
  0x000000010c4bbe8d: mov    %r13,0x10(%rsp)
  0x000000010c4bbe92: mov    %r14,0x8(%rsp)
  0x000000010c4bbe97: mov    %r15,(%rsp)
  0x000000010c4bbe9b: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bbea5: movabs $0x10c4bbe45,%rsi  ;   {internal_word}
  0x000000010c4bbeaf: mov    %rsp,%rdx
  0x000000010c4bbeb2: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bbeb6: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bbebb: hlt    
[Deopt Handler Code]
  0x000000010c4bbebc: movabs $0x10c4bbebc,%r10  ;   {section_word}
  0x000000010c4bbec6: push   %r10
  0x000000010c4bbec8: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bbecd: hlt    
  0x000000010c4bbece: hlt    
  0x000000010c4bbecf: hlt    
Decoding compiled method 0x000000010c4bbfd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000124d5a250} 'toUpperCaseEx' '(I)I' in 'java/lang/Character'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010c4bc140: mov    %eax,-0x14000(%rsp)
  0x000000010c4bc147: push   %rbp
  0x000000010c4bc148: sub    $0x30,%rsp
  0x000000010c4bc14c: movabs $0x124f13fe0,%rdi  ;   {metadata(method data for {method} {0x0000000124d5a250} 'toUpperCaseEx' '(I)I' in 'java/lang/Character')}
  0x000000010c4bc156: mov    0xdc(%rdi),%ebx
  0x000000010c4bc15c: add    $0x8,%ebx
  0x000000010c4bc15f: mov    %ebx,0xdc(%rdi)
  0x000000010c4bc165: movabs $0x124d5a250,%rdi  ;   {metadata({method} {0x0000000124d5a250} 'toUpperCaseEx' '(I)I' in 'java/lang/Character')}
  0x000000010c4bc16f: and    $0x1ff8,%ebx
  0x000000010c4bc175: cmp    $0x0,%ebx
  0x000000010c4bc178: je     0x000000010c4bc270  ;*getstatic $assertionsDisabled
                                                ; - java.lang.Character::toUpperCaseEx@0 (line 7137)

  0x000000010c4bc17e: movabs $0x124f13fe0,%rdi  ;   {metadata(method data for {method} {0x0000000124d5a250} 'toUpperCaseEx' '(I)I' in 'java/lang/Character')}
  0x000000010c4bc188: incl   0x108(%rdi)        ;*ifne
                                                ; - java.lang.Character::toUpperCaseEx@3 (line 7137)

  0x000000010c4bc18e: movabs $0x124f13fe0,%rdi  ;   {metadata(method data for {method} {0x0000000124d5a250} 'toUpperCaseEx' '(I)I' in 'java/lang/Character')}
  0x000000010c4bc198: addq   $0x1,0x168(%rdi)
  0x000000010c4bc1a0: mov    %rsi,%rdi
  0x000000010c4bc1a3: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)

  0x000000010c4bc1a6: mov    %edi,0x20(%rsp)
  0x000000010c4bc1aa: nop
  0x000000010c4bc1ab: nop
  0x000000010c4bc1ac: nop
  0x000000010c4bc1ad: nop
  0x000000010c4bc1ae: nop
  0x000000010c4bc1af: callq  0x000000010c3ed420  ; OopMap{off=116}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCaseEx@22 (line 7138)
                                                ;   {static_call}
  0x000000010c4bc1b4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010c4bc287
  0x000000010c4bc1b7: mov    %rax,%rdx
  0x000000010c4bc1ba: movabs $0x124f13fe0,%rsi  ;   {metadata(method data for {method} {0x0000000124d5a250} 'toUpperCaseEx' '(I)I' in 'java/lang/Character')}
  0x000000010c4bc1c4: mov    0x8(%rdx),%edx
  0x000000010c4bc1c7: shl    $0x3,%rdx
  0x000000010c4bc1cb: cmp    0x180(%rsi),%rdx
  0x000000010c4bc1d2: jne    0x000000010c4bc1e1
  0x000000010c4bc1d4: addq   $0x1,0x188(%rsi)
  0x000000010c4bc1dc: jmpq   0x000000010c4bc247
  0x000000010c4bc1e1: cmp    0x190(%rsi),%rdx
  0x000000010c4bc1e8: jne    0x000000010c4bc1f7
  0x000000010c4bc1ea: addq   $0x1,0x198(%rsi)
  0x000000010c4bc1f2: jmpq   0x000000010c4bc247
  0x000000010c4bc1f7: cmpq   $0x0,0x180(%rsi)
  0x000000010c4bc202: jne    0x000000010c4bc21b
  0x000000010c4bc204: mov    %rdx,0x180(%rsi)
  0x000000010c4bc20b: movq   $0x1,0x188(%rsi)
  0x000000010c4bc216: jmpq   0x000000010c4bc247
  0x000000010c4bc21b: cmpq   $0x0,0x190(%rsi)
  0x000000010c4bc226: jne    0x000000010c4bc23f
  0x000000010c4bc228: mov    %rdx,0x190(%rsi)
  0x000000010c4bc22f: movq   $0x1,0x198(%rsi)
  0x000000010c4bc23a: jmpq   0x000000010c4bc247
  0x000000010c4bc23f: addq   $0x1,0x178(%rsi)
  0x000000010c4bc247: mov    0x20(%rsp),%edx
  0x000000010c4bc24b: mov    %rax,%rsi          ;*invokevirtual toUpperCaseEx
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)

  0x000000010c4bc24e: nop
  0x000000010c4bc24f: nop
  0x000000010c4bc250: nop
  0x000000010c4bc251: nop
  0x000000010c4bc252: nop
  0x000000010c4bc253: nop
  0x000000010c4bc254: nop
  0x000000010c4bc255: movabs $0xffffffffffffffff,%rax
  0x000000010c4bc25f: callq  0x000000010c3ed220  ; OopMap{off=292}
                                                ;*invokevirtual toUpperCaseEx
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ;   {virtual_call}
  0x000000010c4bc264: add    $0x30,%rsp
  0x000000010c4bc268: pop    %rbp
  0x000000010c4bc269: test   %eax,-0x219016f(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bc26f: retq   
  0x000000010c4bc270: mov    %rdi,0x8(%rsp)
  0x000000010c4bc275: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bc27d: callq  0x000000010c4a4f60  ; OopMap{off=322}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCaseEx@-1 (line 7137)
                                                ;   {runtime_call}
  0x000000010c4bc282: jmpq   0x000000010c4bc17e
  0x000000010c4bc287: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=332}
                                                ;*invokevirtual toUpperCaseEx
                                                ; - java.lang.Character::toUpperCaseEx@26 (line 7138)
                                                ;   {runtime_call}
  0x000000010c4bc28c: nop
  0x000000010c4bc28d: nop
  0x000000010c4bc28e: mov    0x2a8(%r15),%rax
  0x000000010c4bc295: movabs $0x0,%r10
  0x000000010c4bc29f: mov    %r10,0x2a8(%r15)
  0x000000010c4bc2a6: movabs $0x0,%r10
  0x000000010c4bc2b0: mov    %r10,0x2b0(%r15)
  0x000000010c4bc2b7: add    $0x30,%rsp
  0x000000010c4bc2bb: pop    %rbp
  0x000000010c4bc2bc: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bc2c1: hlt    
  0x000000010c4bc2c2: hlt    
  0x000000010c4bc2c3: hlt    
  0x000000010c4bc2c4: hlt    
  0x000000010c4bc2c5: hlt    
  0x000000010c4bc2c6: hlt    
  0x000000010c4bc2c7: hlt    
  0x000000010c4bc2c8: hlt    
  0x000000010c4bc2c9: hlt    
  0x000000010c4bc2ca: hlt    
  0x000000010c4bc2cb: hlt    
  0x000000010c4bc2cc: hlt    
  0x000000010c4bc2cd: hlt    
  0x000000010c4bc2ce: hlt    
  0x000000010c4bc2cf: hlt    
  0x000000010c4bc2d0: hlt    
  0x000000010c4bc2d1: hlt    
  0x000000010c4bc2d2: hlt    
  0x000000010c4bc2d3: hlt    
  0x000000010c4bc2d4: hlt    
  0x000000010c4bc2d5: hlt    
  0x000000010c4bc2d6: hlt    
  0x000000010c4bc2d7: hlt    
  0x000000010c4bc2d8: hlt    
  0x000000010c4bc2d9: hlt    
  0x000000010c4bc2da: hlt    
  0x000000010c4bc2db: hlt    
  0x000000010c4bc2dc: hlt    
  0x000000010c4bc2dd: hlt    
  0x000000010c4bc2de: hlt    
  0x000000010c4bc2df: hlt    
[Stub Code]
  0x000000010c4bc2e0: nop                       ;   {no_reloc}
  0x000000010c4bc2e1: nop
  0x000000010c4bc2e2: nop
  0x000000010c4bc2e3: nop
  0x000000010c4bc2e4: nop
  0x000000010c4bc2e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4bc2ef: jmpq   0x000000010c4bc2ef  ;   {runtime_call}
  0x000000010c4bc2f4: nop
  0x000000010c4bc2f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4bc2ff: jmpq   0x000000010c4bc2ff  ;   {runtime_call}
[Exception Handler]
  0x000000010c4bc304: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4bc309: mov    %rsp,-0x28(%rsp)
  0x000000010c4bc30e: sub    $0x80,%rsp
  0x000000010c4bc315: mov    %rax,0x78(%rsp)
  0x000000010c4bc31a: mov    %rcx,0x70(%rsp)
  0x000000010c4bc31f: mov    %rdx,0x68(%rsp)
  0x000000010c4bc324: mov    %rbx,0x60(%rsp)
  0x000000010c4bc329: mov    %rbp,0x50(%rsp)
  0x000000010c4bc32e: mov    %rsi,0x48(%rsp)
  0x000000010c4bc333: mov    %rdi,0x40(%rsp)
  0x000000010c4bc338: mov    %r8,0x38(%rsp)
  0x000000010c4bc33d: mov    %r9,0x30(%rsp)
  0x000000010c4bc342: mov    %r10,0x28(%rsp)
  0x000000010c4bc347: mov    %r11,0x20(%rsp)
  0x000000010c4bc34c: mov    %r12,0x18(%rsp)
  0x000000010c4bc351: mov    %r13,0x10(%rsp)
  0x000000010c4bc356: mov    %r14,0x8(%rsp)
  0x000000010c4bc35b: mov    %r15,(%rsp)
  0x000000010c4bc35f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bc369: movabs $0x10c4bc309,%rsi  ;   {internal_word}
  0x000000010c4bc373: mov    %rsp,%rdx
  0x000000010c4bc376: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bc37a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bc37f: hlt    
[Deopt Handler Code]
  0x000000010c4bc380: movabs $0x10c4bc380,%r10  ;   {section_word}
  0x000000010c4bc38a: push   %r10
  0x000000010c4bc38c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bc391: hlt    
  0x000000010c4bc392: hlt    
  0x000000010c4bc393: hlt    
  0x000000010c4bc394: hlt    
  0x000000010c4bc395: hlt    
  0x000000010c4bc396: hlt    
  0x000000010c4bc397: hlt    
Decoding compiled method 0x000000010c4bc4d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124e83098} 'toUpperCaseEx' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010c4bc640: mov    0x8(%rsi),%r10d
  0x000000010c4bc644: shl    $0x3,%r10
  0x000000010c4bc648: cmp    %rax,%r10
  0x000000010c4bc64b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4bc651: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4bc65c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4bc660: mov    %eax,-0x14000(%rsp)
  0x000000010c4bc667: push   %rbp
  0x000000010c4bc668: sub    $0x40,%rsp
  0x000000010c4bc66c: movabs $0x124f141c8,%rax  ;   {metadata(method data for {method} {0x0000000124e83098} 'toUpperCaseEx' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc676: mov    0xdc(%rax),%edi
  0x000000010c4bc67c: add    $0x8,%edi
  0x000000010c4bc67f: mov    %edi,0xdc(%rax)
  0x000000010c4bc685: movabs $0x124e83098,%rax  ;   {metadata({method} {0x0000000124e83098} 'toUpperCaseEx' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc68f: and    $0x1ff8,%edi
  0x000000010c4bc695: cmp    $0x0,%edi
  0x000000010c4bc698: je     0x000000010c4bc7e3  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@0 (line 222)

  0x000000010c4bc69e: movabs $0x124f141c8,%rax  ;   {metadata(method data for {method} {0x0000000124e83098} 'toUpperCaseEx' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc6a8: addq   $0x1,0x118(%rax)
  0x000000010c4bc6b0: movabs $0x124f13eb8,%rax  ;   {metadata(method data for {method} {0x0000000124e82290} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc6ba: mov    0xdc(%rax),%esi
  0x000000010c4bc6c0: add    $0x8,%esi
  0x000000010c4bc6c3: mov    %esi,0xdc(%rax)
  0x000000010c4bc6c9: movabs $0x124e82290,%rax  ;   {metadata({method} {0x0000000124e82290} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc6d3: and    $0x7ffff8,%esi
  0x000000010c4bc6d9: cmp    $0x0,%esi
  0x000000010c4bc6dc: je     0x000000010c4bc7fa
  0x000000010c4bc6e2: mov    %rdx,%rax
  0x000000010c4bc6e5: and    $0xffff,%eax
  0x000000010c4bc6eb: movabs $0x76ab47200,%rsi  ;   {oop([I)}
  0x000000010c4bc6f5: movslq %eax,%rdi
  0x000000010c4bc6f8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000010c4bc811
  0x000000010c4bc6fb: jae    0x000000010c4bc81b
  0x000000010c4bc701: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)

  0x000000010c4bc705: mov    %rax,%rsi
  0x000000010c4bc708: and    $0x10000,%esi
  0x000000010c4bc70e: cmp    $0x0,%esi
  0x000000010c4bc711: movabs $0x124f141c8,%rsi  ;   {metadata(method data for {method} {0x0000000124e83098} 'toUpperCaseEx' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc71b: movabs $0x138,%rdi
  0x000000010c4bc725: je     0x000000010c4bc735
  0x000000010c4bc72b: movabs $0x148,%rdi
  0x000000010c4bc735: mov    (%rsi,%rdi,1),%rbx
  0x000000010c4bc739: lea    0x1(%rbx),%rbx
  0x000000010c4bc73d: mov    %rbx,(%rsi,%rdi,1)
  0x000000010c4bc741: je     0x000000010c4bc7d4  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@12 (line 225)

  0x000000010c4bc747: mov    %rax,%rsi
  0x000000010c4bc74a: and    $0x7fc0000,%esi
  0x000000010c4bc750: cmp    $0x7fc0000,%esi
  0x000000010c4bc756: movabs $0x124f141c8,%rsi  ;   {metadata(method data for {method} {0x0000000124e83098} 'toUpperCaseEx' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc760: movabs $0x158,%rdi
  0x000000010c4bc76a: je     0x000000010c4bc77a
  0x000000010c4bc770: movabs $0x168,%rdi
  0x000000010c4bc77a: mov    (%rsi,%rdi,1),%rbx
  0x000000010c4bc77e: lea    0x1(%rbx),%rbx
  0x000000010c4bc782: mov    %rbx,(%rsi,%rdi,1)
  0x000000010c4bc786: jne    0x000000010c4bc7bc  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@21 (line 226)

  0x000000010c4bc78c: cmp    $0xb5,%edx
  0x000000010c4bc792: je     0x000000010c4bc7a2  ;*lookupswitch
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@41 (line 231)

  0x000000010c4bc798: mov    $0xffffffff,%edx
  0x000000010c4bc79d: jmpq   0x000000010c4bc7d4  ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@69 (line 238)

  0x000000010c4bc7a2: movabs $0x124f141c8,%rax  ;   {metadata(method data for {method} {0x0000000124e83098} 'toUpperCaseEx' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc7ac: incl   0x1c0(%rax)
  0x000000010c4bc7b2: mov    $0x39c,%edx
  0x000000010c4bc7b7: jmpq   0x000000010c4bc7d4  ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@64 (line 233)

  0x000000010c4bc7bc: shl    $0x5,%eax
  0x000000010c4bc7bf: sar    $0x17,%eax
  0x000000010c4bc7c2: sub    %eax,%edx
  0x000000010c4bc7c4: movabs $0x124f141c8,%rax  ;   {metadata(method data for {method} {0x0000000124e83098} 'toUpperCaseEx' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010c4bc7ce: incl   0x178(%rax)        ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@37 (line 229)

  0x000000010c4bc7d4: mov    %rdx,%rax
  0x000000010c4bc7d7: add    $0x40,%rsp
  0x000000010c4bc7db: pop    %rbp
  0x000000010c4bc7dc: test   %eax,-0x21906e2(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bc7e2: retq   
  0x000000010c4bc7e3: mov    %rax,0x8(%rsp)
  0x000000010c4bc7e8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bc7f0: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=437}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@-1 (line 222)
                                                ;   {runtime_call}
  0x000000010c4bc7f5: jmpq   0x000000010c4bc69e
  0x000000010c4bc7fa: mov    %rax,0x8(%rsp)
  0x000000010c4bc7ff: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bc807: callq  0x000000010c4a4f60  ; OopMap{off=460}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x000000010c4bc80c: jmpq   0x000000010c4bc6e2
  0x000000010c4bc811: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop off=470}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x000000010c4bc816: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop off=475}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x000000010c4bc81b: mov    %rax,(%rsp)
  0x000000010c4bc81f: callq  0x000000010c413000  ; OopMap{rsi=Oop off=484}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCaseEx@4 (line 223)
                                                ;   {runtime_call}
  0x000000010c4bc824: nop
  0x000000010c4bc825: nop
  0x000000010c4bc826: mov    0x2a8(%r15),%rax
  0x000000010c4bc82d: movabs $0x0,%r10
  0x000000010c4bc837: mov    %r10,0x2a8(%r15)
  0x000000010c4bc83e: movabs $0x0,%r10
  0x000000010c4bc848: mov    %r10,0x2b0(%r15)
  0x000000010c4bc84f: add    $0x40,%rsp
  0x000000010c4bc853: pop    %rbp
  0x000000010c4bc854: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bc859: hlt    
  0x000000010c4bc85a: hlt    
  0x000000010c4bc85b: hlt    
  0x000000010c4bc85c: hlt    
  0x000000010c4bc85d: hlt    
  0x000000010c4bc85e: hlt    
  0x000000010c4bc85f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4bc860: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4bc865: mov    %rsp,-0x28(%rsp)
  0x000000010c4bc86a: sub    $0x80,%rsp
  0x000000010c4bc871: mov    %rax,0x78(%rsp)
  0x000000010c4bc876: mov    %rcx,0x70(%rsp)
  0x000000010c4bc87b: mov    %rdx,0x68(%rsp)
  0x000000010c4bc880: mov    %rbx,0x60(%rsp)
  0x000000010c4bc885: mov    %rbp,0x50(%rsp)
  0x000000010c4bc88a: mov    %rsi,0x48(%rsp)
  0x000000010c4bc88f: mov    %rdi,0x40(%rsp)
  0x000000010c4bc894: mov    %r8,0x38(%rsp)
  0x000000010c4bc899: mov    %r9,0x30(%rsp)
  0x000000010c4bc89e: mov    %r10,0x28(%rsp)
  0x000000010c4bc8a3: mov    %r11,0x20(%rsp)
  0x000000010c4bc8a8: mov    %r12,0x18(%rsp)
  0x000000010c4bc8ad: mov    %r13,0x10(%rsp)
  0x000000010c4bc8b2: mov    %r14,0x8(%rsp)
  0x000000010c4bc8b7: mov    %r15,(%rsp)
  0x000000010c4bc8bb: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bc8c5: movabs $0x10c4bc865,%rsi  ;   {internal_word}
  0x000000010c4bc8cf: mov    %rsp,%rdx
  0x000000010c4bc8d2: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bc8d6: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bc8db: hlt    
[Deopt Handler Code]
  0x000000010c4bc8dc: movabs $0x10c4bc8dc,%r10  ;   {section_word}
  0x000000010c4bc8e6: push   %r10
  0x000000010c4bc8e8: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bc8ed: hlt    
  0x000000010c4bc8ee: hlt    
  0x000000010c4bc8ef: hlt    
Decoding compiled method 0x000000010c4bcad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124dfb768} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4bcc40: mov    0x8(%rsi),%r10d
  0x000000010c4bcc44: shl    $0x3,%r10
  0x000000010c4bcc48: cmp    %rax,%r10
  0x000000010c4bcc4b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4bcc51: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4bcc5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4bcc60: mov    %eax,-0x14000(%rsp)
  0x000000010c4bcc67: push   %rbp
  0x000000010c4bcc68: sub    $0x30,%rsp
  0x000000010c4bcc6c: movabs $0x124f18e58,%rax  ;   {metadata(method data for {method} {0x0000000124dfb768} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010c4bcc76: mov    0xdc(%rax),%edx
  0x000000010c4bcc7c: add    $0x8,%edx
  0x000000010c4bcc7f: mov    %edx,0xdc(%rax)
  0x000000010c4bcc85: movabs $0x124dfb768,%rax  ;   {metadata({method} {0x0000000124dfb768} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010c4bcc8f: and    $0x1ff8,%edx
  0x000000010c4bcc95: cmp    $0x0,%edx
  0x000000010c4bcc98: je     0x000000010c4bcd36  ;*aload_0
                                                ; - java.io.BufferedInputStream::getBufIfOpen@0 (line 168)

  0x000000010c4bcc9e: mov    0x20(%rsi),%eax
  0x000000010c4bcca1: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000010c4bcca5: cmp    $0x0,%rax
  0x000000010c4bcca9: movabs $0x124f18e58,%rdx  ;   {metadata(method data for {method} {0x0000000124dfb768} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010c4bccb3: movabs $0x108,%rsi
  0x000000010c4bccbd: jne    0x000000010c4bcccd
  0x000000010c4bccc3: movabs $0x118,%rsi
  0x000000010c4bcccd: mov    (%rdx,%rsi,1),%rdi
  0x000000010c4bccd1: lea    0x1(%rdi),%rdi
  0x000000010c4bccd5: mov    %rdi,(%rdx,%rsi,1)
  0x000000010c4bccd9: je     0x000000010c4bcceb  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000000010c4bccdf: add    $0x30,%rsp
  0x000000010c4bcce3: pop    %rbp
  0x000000010c4bcce4: test   %eax,-0x2190bea(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bccea: retq                      ;*areturn
                                                ; - java.io.BufferedInputStream::getBufIfOpen@20 (line 171)

  0x000000010c4bcceb: nopl   0x0(%rax,%rax,1)
  0x000000010c4bccf0: jmpq   0x000000010c4bcd5c  ;   {no_reloc}
  0x000000010c4bccf5: add    %al,(%rax)
  0x000000010c4bccf7: add    %al,(%rax)
  0x000000010c4bccf9: add    %ch,%cl
  0x000000010c4bccfb: add    %al,(%eax)
  0x000000010c4bccfe: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)

  0x000000010c4bcd01: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000124dfb768} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream')}
  0x000000010c4bcd04: pop    %rax
  0x000000010c4bcd05: mov    %ecx,%?
  0x000000010c4bcd07: and    $0x1,%al
  0x000000010c4bcd09: add    %al,(%rax)
  0x000000010c4bcd0b: add    %cl,-0x7d(%rax)
  0x000000010c4bcd0e: xchg   %ch,(%rax)
  0x000000010c4bcd10: add    %eax,(%rax)
  0x000000010c4bcd12: add    %al,(%rcx)
  0x000000010c4bcd14: movabs $0x76ac47b20,%rdx  ;   {oop("Stream closed")}
  0x000000010c4bcd1e: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)

  0x000000010c4bcd21: mov    %rax,0x20(%rsp)
  0x000000010c4bcd26: nop
  0x000000010c4bcd27: callq  0x000000010c3ed020  ; OopMap{[32]=Oop off=236}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ;   {optimized virtual_call}
  0x000000010c4bcd2c: mov    0x20(%rsp),%rax
  0x000000010c4bcd31: jmpq   0x000000010c4bcd9b
  0x000000010c4bcd36: mov    %rax,0x8(%rsp)
  0x000000010c4bcd3b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bcd43: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=264}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ;   {runtime_call}
  0x000000010c4bcd48: jmpq   0x000000010c4bcc9e
  0x000000010c4bcd4d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4bcd57: mov    $0xa050f00,%eax
  0x000000010c4bcd5c: callq  0x000000010c4a3f60  ; OopMap{off=289}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000000010c4bcd61: jmp    0x000000010c4bccf0
  0x000000010c4bcd63: nop
  0x000000010c4bcd64: nop
  0x000000010c4bcd65: nop
  0x000000010c4bcd66: mov    %rdx,%rdx
  0x000000010c4bcd69: callq  0x000000010c4a0ee0  ; OopMap{off=302}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000000010c4bcd6e: jmp    0x000000010c4bccff
  0x000000010c4bcd70: nop
  0x000000010c4bcd71: nop
  0x000000010c4bcd72: mov    0x2a8(%r15),%rax
  0x000000010c4bcd79: movabs $0x0,%r10
  0x000000010c4bcd83: mov    %r10,0x2a8(%r15)
  0x000000010c4bcd8a: movabs $0x0,%r10
  0x000000010c4bcd94: mov    %r10,0x2b0(%r15)
  0x000000010c4bcd9b: add    $0x30,%rsp
  0x000000010c4bcd9f: pop    %rbp
  0x000000010c4bcda0: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bcda5: hlt    
  0x000000010c4bcda6: hlt    
  0x000000010c4bcda7: hlt    
  0x000000010c4bcda8: hlt    
  0x000000010c4bcda9: hlt    
  0x000000010c4bcdaa: hlt    
  0x000000010c4bcdab: hlt    
  0x000000010c4bcdac: hlt    
  0x000000010c4bcdad: hlt    
  0x000000010c4bcdae: hlt    
  0x000000010c4bcdaf: hlt    
  0x000000010c4bcdb0: hlt    
  0x000000010c4bcdb1: hlt    
  0x000000010c4bcdb2: hlt    
  0x000000010c4bcdb3: hlt    
  0x000000010c4bcdb4: hlt    
  0x000000010c4bcdb5: hlt    
  0x000000010c4bcdb6: hlt    
  0x000000010c4bcdb7: hlt    
  0x000000010c4bcdb8: hlt    
  0x000000010c4bcdb9: hlt    
  0x000000010c4bcdba: hlt    
  0x000000010c4bcdbb: hlt    
  0x000000010c4bcdbc: hlt    
  0x000000010c4bcdbd: hlt    
  0x000000010c4bcdbe: hlt    
  0x000000010c4bcdbf: hlt    
[Stub Code]
  0x000000010c4bcdc0: nop                       ;   {no_reloc}
  0x000000010c4bcdc1: nop
  0x000000010c4bcdc2: nop
  0x000000010c4bcdc3: nop
  0x000000010c4bcdc4: nop
  0x000000010c4bcdc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4bcdcf: jmpq   0x000000010c4bcdcf  ;   {runtime_call}
[Exception Handler]
  0x000000010c4bcdd4: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4bcdd9: mov    %rsp,-0x28(%rsp)
  0x000000010c4bcdde: sub    $0x80,%rsp
  0x000000010c4bcde5: mov    %rax,0x78(%rsp)
  0x000000010c4bcdea: mov    %rcx,0x70(%rsp)
  0x000000010c4bcdef: mov    %rdx,0x68(%rsp)
  0x000000010c4bcdf4: mov    %rbx,0x60(%rsp)
  0x000000010c4bcdf9: mov    %rbp,0x50(%rsp)
  0x000000010c4bcdfe: mov    %rsi,0x48(%rsp)
  0x000000010c4bce03: mov    %rdi,0x40(%rsp)
  0x000000010c4bce08: mov    %r8,0x38(%rsp)
  0x000000010c4bce0d: mov    %r9,0x30(%rsp)
  0x000000010c4bce12: mov    %r10,0x28(%rsp)
  0x000000010c4bce17: mov    %r11,0x20(%rsp)
  0x000000010c4bce1c: mov    %r12,0x18(%rsp)
  0x000000010c4bce21: mov    %r13,0x10(%rsp)
  0x000000010c4bce26: mov    %r14,0x8(%rsp)
  0x000000010c4bce2b: mov    %r15,(%rsp)
  0x000000010c4bce2f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bce39: movabs $0x10c4bcdd9,%rsi  ;   {internal_word}
  0x000000010c4bce43: mov    %rsp,%rdx
  0x000000010c4bce46: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bce4a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bce4f: hlt    
[Deopt Handler Code]
  0x000000010c4bce50: movabs $0x10c4bce50,%r10  ;   {section_word}
  0x000000010c4bce5a: push   %r10
  0x000000010c4bce5c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bce61: hlt    
  0x000000010c4bce62: hlt    
  0x000000010c4bce63: hlt    
  0x000000010c4bce64: hlt    
  0x000000010c4bce65: hlt    
  0x000000010c4bce66: hlt    
  0x000000010c4bce67: hlt    
Decoding compiled method 0x000000010c4bcf90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124dfbb18} 'read' '()I' in 'java/io/BufferedInputStream'
  #           [sp+0x90]  (sp of caller)
  0x000000010c4bd120: mov    0x8(%rsi),%r10d
  0x000000010c4bd124: shl    $0x3,%r10
  0x000000010c4bd128: cmp    %rax,%r10
  0x000000010c4bd12b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4bd131: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4bd13c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4bd140: mov    %eax,-0x14000(%rsp)
  0x000000010c4bd147: push   %rbp
  0x000000010c4bd148: sub    $0x80,%rsp
  0x000000010c4bd14f: mov    %rsi,0x50(%rsp)
  0x000000010c4bd154: lea    0x60(%rsp),%rdi
  0x000000010c4bd159: mov    %rsi,0x8(%rdi)
  0x000000010c4bd15d: mov    (%rsi),%rax
  0x000000010c4bd160: mov    %rax,%rbx
  0x000000010c4bd163: and    $0x7,%rbx
  0x000000010c4bd167: cmp    $0x5,%rbx
  0x000000010c4bd16b: jne    0x000000010c4bd1f2
  0x000000010c4bd171: mov    0x8(%rsi),%ebx
  0x000000010c4bd174: shl    $0x3,%rbx
  0x000000010c4bd178: mov    0xa8(%rbx),%rbx
  0x000000010c4bd17f: or     %r15,%rbx
  0x000000010c4bd182: xor    %rax,%rbx
  0x000000010c4bd185: and    $0xffffffffffffff87,%rbx
  0x000000010c4bd189: je     0x000000010c4bd21a
  0x000000010c4bd18f: test   $0x7,%rbx
  0x000000010c4bd196: jne    0x000000010c4bd1df
  0x000000010c4bd198: test   $0x300,%rbx
  0x000000010c4bd19f: jne    0x000000010c4bd1be
  0x000000010c4bd1a1: and    $0x37f,%rax
  0x000000010c4bd1a8: mov    %rax,%rbx
  0x000000010c4bd1ab: or     %r15,%rbx
  0x000000010c4bd1ae: lock cmpxchg %rbx,(%rsi)
  0x000000010c4bd1b3: jne    0x000000010c4bd36e
  0x000000010c4bd1b9: jmpq   0x000000010c4bd21a
  0x000000010c4bd1be: mov    0x8(%rsi),%ebx
  0x000000010c4bd1c1: shl    $0x3,%rbx
  0x000000010c4bd1c5: mov    0xa8(%rbx),%rbx
  0x000000010c4bd1cc: or     %r15,%rbx
  0x000000010c4bd1cf: lock cmpxchg %rbx,(%rsi)
  0x000000010c4bd1d4: jne    0x000000010c4bd36e
  0x000000010c4bd1da: jmpq   0x000000010c4bd21a
  0x000000010c4bd1df: mov    0x8(%rsi),%ebx
  0x000000010c4bd1e2: shl    $0x3,%rbx
  0x000000010c4bd1e6: mov    0xa8(%rbx),%rbx
  0x000000010c4bd1ed: lock cmpxchg %rbx,(%rsi)
  0x000000010c4bd1f2: mov    (%rsi),%rax
  0x000000010c4bd1f5: or     $0x1,%rax
  0x000000010c4bd1f9: mov    %rax,(%rdi)
  0x000000010c4bd1fc: lock cmpxchg %rdi,(%rsi)
  0x000000010c4bd201: je     0x000000010c4bd21a
  0x000000010c4bd207: sub    %rsp,%rax
  0x000000010c4bd20a: and    $0xfffffffffffff007,%rax
  0x000000010c4bd211: mov    %rax,(%rdi)
  0x000000010c4bd214: jne    0x000000010c4bd36e
  0x000000010c4bd21a: movabs $0x124f17dc8,%rdi
  0x000000010c4bd224: mov    0x8(%rdi),%ebx
  0x000000010c4bd227: add    $0x8,%ebx
  0x000000010c4bd22a: mov    %ebx,0x8(%rdi)
  0x000000010c4bd22d: movabs $0x124dfbb18,%rdi  ;   {metadata({method} {0x0000000124dfbb18} 'read' '()I' in 'java/io/BufferedInputStream')}
  0x000000010c4bd237: and    $0x3ff8,%ebx
  0x000000010c4bd23d: cmp    $0x0,%ebx
  0x000000010c4bd240: je     0x000000010c4bd381  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 264)

  0x000000010c4bd246: mov    0x14(%rsi),%edi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@1 (line 264)

  0x000000010c4bd249: mov    0x10(%rsi),%ebx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@5 (line 264)

  0x000000010c4bd24c: cmp    %ebx,%edi
  0x000000010c4bd24e: jl     0x000000010c4bd277  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@8 (line 264)

  0x000000010c4bd254: mov    %rsi,%rdi
  0x000000010c4bd257: mov    %rdi,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)

  0x000000010c4bd25a: nop
  0x000000010c4bd25b: nop
  0x000000010c4bd25c: nop
  0x000000010c4bd25d: nop
  0x000000010c4bd25e: nop
  0x000000010c4bd25f: callq  0x000000010c3ed020  ; OopMap{[80]=Oop [104]=Oop off=324}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x000000010c4bd264: mov    0x50(%rsp),%rsi
  0x000000010c4bd269: mov    0x14(%rsi),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@16 (line 266)

  0x000000010c4bd26c: mov    0x10(%rsi),%edx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@20 (line 266)

  0x000000010c4bd26f: cmp    %edx,%eax
  0x000000010c4bd271: jge    0x000000010c4bd2ed  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x000000010c4bd277: mov    0x20(%rsi),%eax
  0x000000010c4bd27a: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010c4bd27e: cmp    $0x0,%rax
  0x000000010c4bd282: je     0x000000010c4bd332  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010c4bd288: mov    0x14(%rsi),%edx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x000000010c4bd28b: mov    %rdx,%rdi
  0x000000010c4bd28e: inc    %edi
  0x000000010c4bd290: mov    %edi,0x14(%rsi)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x000000010c4bd293: movslq %edx,%rsi
  0x000000010c4bd296: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010c4bd398
  0x000000010c4bd299: jae    0x000000010c4bd3a2
  0x000000010c4bd29f: movsbl 0x10(%rax,%rsi,1),%edx  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)

  0x000000010c4bd2a4: lea    0x60(%rsp),%rax
  0x000000010c4bd2a9: mov    0x8(%rax),%rdi
  0x000000010c4bd2ad: mov    (%rdi),%rsi
  0x000000010c4bd2b0: and    $0x7,%rsi
  0x000000010c4bd2b4: cmp    $0x5,%rsi
  0x000000010c4bd2b8: je     0x000000010c4bd2d5
  0x000000010c4bd2be: mov    (%rax),%rsi
  0x000000010c4bd2c1: test   %rsi,%rsi
  0x000000010c4bd2c4: je     0x000000010c4bd2d5
  0x000000010c4bd2ca: lock cmpxchg %rsi,(%rdi)
  0x000000010c4bd2cf: jne    0x000000010c4bd3ab
  0x000000010c4bd2d5: and    $0xff,%edx
  0x000000010c4bd2db: mov    %rdx,%rax
  0x000000010c4bd2de: add    $0x80,%rsp
  0x000000010c4bd2e5: pop    %rbp
  0x000000010c4bd2e6: test   %eax,-0x21911ec(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bd2ec: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x000000010c4bd2ed: lea    0x60(%rsp),%rax
  0x000000010c4bd2f2: mov    0x8(%rax),%rsi
  0x000000010c4bd2f6: mov    (%rsi),%rdx
  0x000000010c4bd2f9: and    $0x7,%rdx
  0x000000010c4bd2fd: cmp    $0x5,%rdx
  0x000000010c4bd301: je     0x000000010c4bd31e
  0x000000010c4bd307: mov    (%rax),%rdx
  0x000000010c4bd30a: test   %rdx,%rdx
  0x000000010c4bd30d: je     0x000000010c4bd31e
  0x000000010c4bd313: lock cmpxchg %rdx,(%rsi)
  0x000000010c4bd318: jne    0x000000010c4bd3be
  0x000000010c4bd31e: mov    $0xffffffff,%eax
  0x000000010c4bd323: add    $0x80,%rsp
  0x000000010c4bd32a: pop    %rbp
  0x000000010c4bd32b: test   %eax,-0x2191231(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bd331: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x000000010c4bd332: nopw   0x0(%rax,%rax,1)
  0x000000010c4bd338: jmpq   0x000000010c4bd3e0  ;   {no_reloc}
  0x000000010c4bd33d: add    %al,(%rax)
  0x000000010c4bd33f: add    %al,(%rax)
  0x000000010c4bd341: add    %ch,%cl
  0x000000010c4bd343: movabs %eax,0xc47b20ba48000000  ;*new
                                                ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {oop("Stream closed")}
  0x000000010c4bd34c: pushq  $0x7
  0x000000010c4bd34e: add    %al,(%rax)
  0x000000010c4bd350: add    %cl,-0x75(%rax)
  0x000000010c4bd353: lock mov %rax,0x58(%rsp)  ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010c4bd359: nop
  0x000000010c4bd35a: nop
  0x000000010c4bd35b: nop
  0x000000010c4bd35c: nop
  0x000000010c4bd35d: nop
  0x000000010c4bd35e: nop
  0x000000010c4bd35f: callq  0x000000010c3ed020  ; OopMap{[80]=Oop [88]=Oop [104]=Oop off=580}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {optimized virtual_call}
  0x000000010c4bd364: mov    0x58(%rsp),%rax
  0x000000010c4bd369: jmpq   0x000000010c4bd422
  0x000000010c4bd36e: mov    %rsi,0x8(%rsp)
  0x000000010c4bd373: mov    %rdi,(%rsp)
  0x000000010c4bd377: callq  0x000000010c4a33e0  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=604}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000010c4bd37c: jmpq   0x000000010c4bd21a
  0x000000010c4bd381: mov    %rdi,0x8(%rsp)
  0x000000010c4bd386: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bd38e: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000010c4bd393: jmpq   0x000000010c4bd246
  0x000000010c4bd398: callq  0x000000010c4a0a40  ; OopMap{rax=Oop [104]=Oop off=637}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000010c4bd39d: callq  0x000000010c4a0a40  ; OopMap{rax=Oop [104]=Oop off=642}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000010c4bd3a2: mov    %rdx,(%rsp)
  0x000000010c4bd3a6: callq  0x000000010c413000  ; OopMap{rax=Oop [104]=Oop off=651}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000010c4bd3ab: lea    0x60(%rsp),%rax
  0x000000010c4bd3b0: mov    %rax,(%rsp)
  0x000000010c4bd3b4: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4bd3b9: jmpq   0x000000010c4bd2d5
  0x000000010c4bd3be: lea    0x60(%rsp),%rax
  0x000000010c4bd3c3: mov    %rax,(%rsp)
  0x000000010c4bd3c7: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4bd3cc: jmpq   0x000000010c4bd31e
  0x000000010c4bd3d1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4bd3db: mov    $0xa050f00,%eax
  0x000000010c4bd3e0: callq  0x000000010c4a3f60  ; OopMap{[80]=Oop [104]=Oop off=709}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000010c4bd3e5: jmpq   0x000000010c4bd338
  0x000000010c4bd3ea: mov    %rdx,%rdx
  0x000000010c4bd3ed: callq  0x000000010c4a0ee0  ; OopMap{[80]=Oop [104]=Oop off=722}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000010c4bd3f2: jmpq   0x000000010c4bd347
  0x000000010c4bd3f7: nop
  0x000000010c4bd3f8: nop
  0x000000010c4bd3f9: mov    0x2a8(%r15),%rax
  0x000000010c4bd400: movabs $0x0,%r10
  0x000000010c4bd40a: mov    %r10,0x2a8(%r15)
  0x000000010c4bd411: movabs $0x0,%r10
  0x000000010c4bd41b: mov    %r10,0x2b0(%r15)
  0x000000010c4bd422: mov    %rax,%rbx
  0x000000010c4bd425: lea    0x60(%rsp),%rax
  0x000000010c4bd42a: mov    0x8(%rax),%rsi
  0x000000010c4bd42e: mov    (%rsi),%rdi
  0x000000010c4bd431: and    $0x7,%rdi
  0x000000010c4bd435: cmp    $0x5,%rdi
  0x000000010c4bd439: je     0x000000010c4bd456
  0x000000010c4bd43f: mov    (%rax),%rdi
  0x000000010c4bd442: test   %rdi,%rdi
  0x000000010c4bd445: je     0x000000010c4bd456
  0x000000010c4bd44b: lock cmpxchg %rdi,(%rsi)
  0x000000010c4bd450: jne    0x000000010c4bd466
  0x000000010c4bd456: mov    %rbx,%rax
  0x000000010c4bd459: add    $0x80,%rsp
  0x000000010c4bd460: pop    %rbp
  0x000000010c4bd461: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bd466: lea    0x60(%rsp),%rax
  0x000000010c4bd46b: mov    %rax,(%rsp)
  0x000000010c4bd46f: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4bd474: jmp    0x000000010c4bd456
  0x000000010c4bd476: hlt    
  0x000000010c4bd477: hlt    
  0x000000010c4bd478: hlt    
  0x000000010c4bd479: hlt    
  0x000000010c4bd47a: hlt    
  0x000000010c4bd47b: hlt    
  0x000000010c4bd47c: hlt    
  0x000000010c4bd47d: hlt    
  0x000000010c4bd47e: hlt    
  0x000000010c4bd47f: hlt    
[Stub Code]
  0x000000010c4bd480: nop                       ;   {no_reloc}
  0x000000010c4bd481: nop
  0x000000010c4bd482: nop
  0x000000010c4bd483: nop
  0x000000010c4bd484: nop
  0x000000010c4bd485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4bd48f: jmpq   0x000000010c4bd48f  ;   {runtime_call}
  0x000000010c4bd494: nop
  0x000000010c4bd495: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4bd49f: jmpq   0x000000010c4bd49f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4bd4a4: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4bd4a9: mov    %rsp,-0x28(%rsp)
  0x000000010c4bd4ae: sub    $0x80,%rsp
  0x000000010c4bd4b5: mov    %rax,0x78(%rsp)
  0x000000010c4bd4ba: mov    %rcx,0x70(%rsp)
  0x000000010c4bd4bf: mov    %rdx,0x68(%rsp)
  0x000000010c4bd4c4: mov    %rbx,0x60(%rsp)
  0x000000010c4bd4c9: mov    %rbp,0x50(%rsp)
  0x000000010c4bd4ce: mov    %rsi,0x48(%rsp)
  0x000000010c4bd4d3: mov    %rdi,0x40(%rsp)
  0x000000010c4bd4d8: mov    %r8,0x38(%rsp)
  0x000000010c4bd4dd: mov    %r9,0x30(%rsp)
  0x000000010c4bd4e2: mov    %r10,0x28(%rsp)
  0x000000010c4bd4e7: mov    %r11,0x20(%rsp)
  0x000000010c4bd4ec: mov    %r12,0x18(%rsp)
  0x000000010c4bd4f1: mov    %r13,0x10(%rsp)
  0x000000010c4bd4f6: mov    %r14,0x8(%rsp)
  0x000000010c4bd4fb: mov    %r15,(%rsp)
  0x000000010c4bd4ff: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bd509: movabs $0x10c4bd4a9,%rsi  ;   {internal_word}
  0x000000010c4bd513: mov    %rsp,%rdx
  0x000000010c4bd516: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bd51a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bd51f: hlt    
[Deopt Handler Code]
  0x000000010c4bd520: movabs $0x10c4bd520,%r10  ;   {section_word}
  0x000000010c4bd52a: push   %r10
  0x000000010c4bd52c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bd531: hlt    
  0x000000010c4bd532: hlt    
  0x000000010c4bd533: hlt    
  0x000000010c4bd534: hlt    
  0x000000010c4bd535: hlt    
  0x000000010c4bd536: hlt    
  0x000000010c4bd537: hlt    
Decoding compiled method 0x000000010c4c0490:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124dfb768} 'getBufIfOpen' '()[B' in 'java/io/BufferedInputStream'
  #           [sp+0x30]  (sp of caller)
  0x000000010c4c05e0: mov    0x8(%rsi),%r10d
  0x000000010c4c05e4: shl    $0x3,%r10
  0x000000010c4c05e8: cmp    %r10,%rax
  0x000000010c4c05eb: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c05f1: data32 xchg %ax,%ax
  0x000000010c4c05f4: nopl   0x0(%rax,%rax,1)
  0x000000010c4c05fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c0600: mov    %eax,-0x14000(%rsp)
  0x000000010c4c0607: push   %rbp
  0x000000010c4c0608: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)

  0x000000010c4c060c: mov    0x20(%rsi),%r10d   ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000010c4c0610: test   %r10d,%r10d
  0x000000010c4c0613: je     0x000000010c4c0625  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000000010c4c0615: lea    (%r12,%r10,8),%rax  ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000010c4c0619: add    $0x20,%rsp
  0x000000010c4c061d: pop    %rbp
  0x000000010c4c061e: test   %eax,-0x2194624(%rip)        # 0x000000010a32c000
                                                ;   {poll_return}
  0x000000010c4c0624: retq   
  0x000000010c4c0625: mov    $0xffffff65,%esi
  0x000000010c4c062a: mov    %r10d,(%rsp)
  0x000000010c4c062e: nop
  0x000000010c4c062f: callq  0x000000010c3ac1a0  ; OopMap{[0]=NarrowOop off=84}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x000000010c4c0634: callq  0x000000010b887154  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x000000010c4c0639: hlt    
  0x000000010c4c063a: hlt    
  0x000000010c4c063b: hlt    
  0x000000010c4c063c: hlt    
  0x000000010c4c063d: hlt    
  0x000000010c4c063e: hlt    
  0x000000010c4c063f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4c0640: jmpq   0x000000010c413760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010c4c0645: callq  0x000000010c4c064a
  0x000000010c4c064a: subq   $0x5,(%rsp)
  0x000000010c4c064f: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c0654: hlt    
  0x000000010c4c0655: hlt    
  0x000000010c4c0656: hlt    
  0x000000010c4c0657: hlt    
Decoding compiled method 0x000000010c4bff10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124f17110} 'readChar' '()C' in 'java/io/DataInputStream'
  #           [sp+0x50]  (sp of caller)
  0x000000010c4c00a0: mov    0x8(%rsi),%r10d
  0x000000010c4c00a4: shl    $0x3,%r10
  0x000000010c4c00a8: cmp    %rax,%r10
  0x000000010c4c00ab: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c00b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c00bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c00c0: mov    %eax,-0x14000(%rsp)
  0x000000010c4c00c7: push   %rbp
  0x000000010c4c00c8: sub    $0x40,%rsp
  0x000000010c4c00cc: movabs $0x124f17da8,%rdi
  0x000000010c4c00d6: mov    0x8(%rdi),%ebx
  0x000000010c4c00d9: add    $0x8,%ebx
  0x000000010c4c00dc: mov    %ebx,0x8(%rdi)
  0x000000010c4c00df: movabs $0x124f17110,%rdi  ;   {metadata({method} {0x0000000124f17110} 'readChar' '()C' in 'java/io/DataInputStream')}
  0x000000010c4c00e9: and    $0x3ff8,%ebx
  0x000000010c4c00ef: cmp    $0x0,%ebx
  0x000000010c4c00f2: je     0x000000010c4c0196  ;*aload_0
                                                ; - java.io.DataInputStream::readChar@0 (line 362)

  0x000000010c4c00f8: mov    0xc(%rsi),%edi
  0x000000010c4c00fb: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readChar@1 (line 362)

  0x000000010c4c00ff: mov    %rsi,0x20(%rsp)
  0x000000010c4c0104: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4c0107: nop
  0x000000010c4c0108: nop
  0x000000010c4c0109: nop
  0x000000010c4c010a: nop
  0x000000010c4c010b: nop
  0x000000010c4c010c: nop
  0x000000010c4c010d: movabs $0xffffffffffffffff,%rax
  0x000000010c4c0117: callq  0x000000010c3ed220  ; OopMap{[32]=Oop off=124}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {virtual_call}
  0x000000010c4c011c: mov    0x20(%rsp),%rsi
  0x000000010c4c0121: mov    0xc(%rsi),%esi
  0x000000010c4c0124: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readChar@9 (line 363)

  0x000000010c4c0128: mov    %eax,0x28(%rsp)
  0x000000010c4c012c: nop
  0x000000010c4c012d: movabs $0xffffffffffffffff,%rax
  0x000000010c4c0137: callq  0x000000010c3ed220  ; OopMap{off=156}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {virtual_call}
  0x000000010c4c013c: mov    0x28(%rsp),%edx
  0x000000010c4c0140: or     %rax,%rdx
  0x000000010c4c0143: cmp    $0x0,%edx
  0x000000010c4c0146: jl     0x000000010c4c0170  ;*ifge
                                                ; - java.io.DataInputStream::readChar@19 (line 364)

  0x000000010c4c014c: mov    0x28(%rsp),%edx
  0x000000010c4c0150: shl    $0x8,%edx
  0x000000010c4c0153: add    %eax,%edx
  0x000000010c4c0155: and    $0xffff,%edx
  0x000000010c4c015b: and    $0xffff,%edx
  0x000000010c4c0161: mov    %rdx,%rax
  0x000000010c4c0164: add    $0x40,%rsp
  0x000000010c4c0168: pop    %rbp
  0x000000010c4c0169: test   %eax,-0x219406f(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c016f: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readChar@39 (line 366)

  0x000000010c4c0170: jmpq   0x000000010c4c01bc  ;   {no_reloc}
  0x000000010c4c0175: add    %al,(%rax)
  0x000000010c4c0177: add    %al,(%rax)
  0x000000010c4c0179: add    %ch,%cl
  0x000000010c4c017b: rex.RXB add %r8b,(%r8)
  0x000000010c4c017e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.DataInputStream::readChar@22 (line 365)

  0x000000010c4c0181: lock mov %rax,0x30(%rsp)  ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readChar@26 (line 365)

  0x000000010c4c0187: callq  0x000000010c3ed020  ; OopMap{[48]=Oop off=236}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readChar@26 (line 365)
                                                ;   {optimized virtual_call}
  0x000000010c4c018c: mov    0x30(%rsp),%rax
  0x000000010c4c0191: jmpq   0x000000010c4c01fb
  0x000000010c4c0196: mov    %rdi,0x8(%rsp)
  0x000000010c4c019b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c01a3: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=264}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readChar@-1 (line 362)
                                                ;   {runtime_call}
  0x000000010c4c01a8: jmpq   0x000000010c4c00f8
  0x000000010c4c01ad: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4c01b7: mov    $0xa050f00,%eax
  0x000000010c4c01bc: callq  0x000000010c4a3f60  ; OopMap{off=289}
                                                ;*new  ; - java.io.DataInputStream::readChar@22 (line 365)
                                                ;   {runtime_call}
  0x000000010c4c01c1: jmp    0x000000010c4c0170
  0x000000010c4c01c3: nop
  0x000000010c4c01c4: nop
  0x000000010c4c01c5: nop
  0x000000010c4c01c6: mov    %rdx,%rdx
  0x000000010c4c01c9: callq  0x000000010c4a0ee0  ; OopMap{off=302}
                                                ;*new  ; - java.io.DataInputStream::readChar@22 (line 365)
                                                ;   {runtime_call}
  0x000000010c4c01ce: jmp    0x000000010c4c017f
  0x000000010c4c01d0: nop
  0x000000010c4c01d1: nop
  0x000000010c4c01d2: mov    0x2a8(%r15),%rax
  0x000000010c4c01d9: movabs $0x0,%r10
  0x000000010c4c01e3: mov    %r10,0x2a8(%r15)
  0x000000010c4c01ea: movabs $0x0,%r10
  0x000000010c4c01f4: mov    %r10,0x2b0(%r15)
  0x000000010c4c01fb: add    $0x40,%rsp
  0x000000010c4c01ff: pop    %rbp
  0x000000010c4c0200: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c0205: hlt    
  0x000000010c4c0206: hlt    
  0x000000010c4c0207: hlt    
  0x000000010c4c0208: hlt    
  0x000000010c4c0209: hlt    
  0x000000010c4c020a: hlt    
  0x000000010c4c020b: hlt    
  0x000000010c4c020c: hlt    
  0x000000010c4c020d: hlt    
  0x000000010c4c020e: hlt    
  0x000000010c4c020f: hlt    
  0x000000010c4c0210: hlt    
  0x000000010c4c0211: hlt    
  0x000000010c4c0212: hlt    
  0x000000010c4c0213: hlt    
  0x000000010c4c0214: hlt    
  0x000000010c4c0215: hlt    
  0x000000010c4c0216: hlt    
  0x000000010c4c0217: hlt    
  0x000000010c4c0218: hlt    
  0x000000010c4c0219: hlt    
  0x000000010c4c021a: hlt    
  0x000000010c4c021b: hlt    
  0x000000010c4c021c: hlt    
  0x000000010c4c021d: hlt    
  0x000000010c4c021e: hlt    
  0x000000010c4c021f: hlt    
[Stub Code]
  0x000000010c4c0220: nop                       ;   {no_reloc}
  0x000000010c4c0221: nop
  0x000000010c4c0222: nop
  0x000000010c4c0223: nop
  0x000000010c4c0224: nop
  0x000000010c4c0225: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c022f: jmpq   0x000000010c4c022f  ;   {runtime_call}
  0x000000010c4c0234: nop
  0x000000010c4c0235: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c023f: jmpq   0x000000010c4c023f  ;   {runtime_call}
  0x000000010c4c0244: nop
  0x000000010c4c0245: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c024f: jmpq   0x000000010c4c024f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c0254: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c0259: mov    %rsp,-0x28(%rsp)
  0x000000010c4c025e: sub    $0x80,%rsp
  0x000000010c4c0265: mov    %rax,0x78(%rsp)
  0x000000010c4c026a: mov    %rcx,0x70(%rsp)
  0x000000010c4c026f: mov    %rdx,0x68(%rsp)
  0x000000010c4c0274: mov    %rbx,0x60(%rsp)
  0x000000010c4c0279: mov    %rbp,0x50(%rsp)
  0x000000010c4c027e: mov    %rsi,0x48(%rsp)
  0x000000010c4c0283: mov    %rdi,0x40(%rsp)
  0x000000010c4c0288: mov    %r8,0x38(%rsp)
  0x000000010c4c028d: mov    %r9,0x30(%rsp)
  0x000000010c4c0292: mov    %r10,0x28(%rsp)
  0x000000010c4c0297: mov    %r11,0x20(%rsp)
  0x000000010c4c029c: mov    %r12,0x18(%rsp)
  0x000000010c4c02a1: mov    %r13,0x10(%rsp)
  0x000000010c4c02a6: mov    %r14,0x8(%rsp)
  0x000000010c4c02ab: mov    %r15,(%rsp)
  0x000000010c4c02af: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c02b9: movabs $0x10c4c0259,%rsi  ;   {internal_word}
  0x000000010c4c02c3: mov    %rsp,%rdx
  0x000000010c4c02c6: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c02ca: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c02cf: hlt    
[Deopt Handler Code]
  0x000000010c4c02d0: movabs $0x10c4c02d0,%r10  ;   {section_word}
  0x000000010c4c02da: push   %r10
  0x000000010c4c02dc: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c02e1: hlt    
  0x000000010c4c02e2: hlt    
  0x000000010c4c02e3: hlt    
  0x000000010c4c02e4: hlt    
  0x000000010c4c02e5: hlt    
  0x000000010c4c02e6: hlt    
  0x000000010c4c02e7: hlt    
Decoding compiled method 0x000000010c4bf110:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124d3f858} 'read' '()I' in 'java/io/ByteArrayInputStream'
  #           [sp+0x60]  (sp of caller)
  0x000000010c4bf280: mov    0x8(%rsi),%r10d
  0x000000010c4bf284: shl    $0x3,%r10
  0x000000010c4bf288: cmp    %rax,%r10
  0x000000010c4bf28b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4bf291: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4bf29c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4bf2a0: mov    %eax,-0x14000(%rsp)
  0x000000010c4bf2a7: push   %rbp
  0x000000010c4bf2a8: sub    $0x50,%rsp
  0x000000010c4bf2ac: lea    0x30(%rsp),%rdi
  0x000000010c4bf2b1: mov    %rsi,0x8(%rdi)
  0x000000010c4bf2b5: mov    (%rsi),%rax
  0x000000010c4bf2b8: mov    %rax,%rbx
  0x000000010c4bf2bb: and    $0x7,%rbx
  0x000000010c4bf2bf: cmp    $0x5,%rbx
  0x000000010c4bf2c3: jne    0x000000010c4bf34a
  0x000000010c4bf2c9: mov    0x8(%rsi),%ebx
  0x000000010c4bf2cc: shl    $0x3,%rbx
  0x000000010c4bf2d0: mov    0xa8(%rbx),%rbx
  0x000000010c4bf2d7: or     %r15,%rbx
  0x000000010c4bf2da: xor    %rax,%rbx
  0x000000010c4bf2dd: and    $0xffffffffffffff87,%rbx
  0x000000010c4bf2e1: je     0x000000010c4bf372
  0x000000010c4bf2e7: test   $0x7,%rbx
  0x000000010c4bf2ee: jne    0x000000010c4bf337
  0x000000010c4bf2f0: test   $0x300,%rbx
  0x000000010c4bf2f7: jne    0x000000010c4bf316
  0x000000010c4bf2f9: and    $0x37f,%rax
  0x000000010c4bf300: mov    %rax,%rbx
  0x000000010c4bf303: or     %r15,%rbx
  0x000000010c4bf306: lock cmpxchg %rbx,(%rsi)
  0x000000010c4bf30b: jne    0x000000010c4bf465
  0x000000010c4bf311: jmpq   0x000000010c4bf372
  0x000000010c4bf316: mov    0x8(%rsi),%ebx
  0x000000010c4bf319: shl    $0x3,%rbx
  0x000000010c4bf31d: mov    0xa8(%rbx),%rbx
  0x000000010c4bf324: or     %r15,%rbx
  0x000000010c4bf327: lock cmpxchg %rbx,(%rsi)
  0x000000010c4bf32c: jne    0x000000010c4bf465
  0x000000010c4bf332: jmpq   0x000000010c4bf372
  0x000000010c4bf337: mov    0x8(%rsi),%ebx
  0x000000010c4bf33a: shl    $0x3,%rbx
  0x000000010c4bf33e: mov    0xa8(%rbx),%rbx
  0x000000010c4bf345: lock cmpxchg %rbx,(%rsi)
  0x000000010c4bf34a: mov    (%rsi),%rax
  0x000000010c4bf34d: or     $0x1,%rax
  0x000000010c4bf351: mov    %rax,(%rdi)
  0x000000010c4bf354: lock cmpxchg %rdi,(%rsi)
  0x000000010c4bf359: je     0x000000010c4bf372
  0x000000010c4bf35f: sub    %rsp,%rax
  0x000000010c4bf362: and    $0xfffffffffffff007,%rax
  0x000000010c4bf369: mov    %rax,(%rdi)
  0x000000010c4bf36c: jne    0x000000010c4bf465
  0x000000010c4bf372: movabs $0x124f1b698,%rax  ;   {metadata(method data for {method} {0x0000000124d3f858} 'read' '()I' in 'java/io/ByteArrayInputStream')}
  0x000000010c4bf37c: mov    0xdc(%rax),%edi
  0x000000010c4bf382: add    $0x8,%edi
  0x000000010c4bf385: mov    %edi,0xdc(%rax)
  0x000000010c4bf38b: movabs $0x124d3f858,%rax  ;   {metadata({method} {0x0000000124d3f858} 'read' '()I' in 'java/io/ByteArrayInputStream')}
  0x000000010c4bf395: and    $0x1ff8,%edi
  0x000000010c4bf39b: cmp    $0x0,%edi
  0x000000010c4bf39e: je     0x000000010c4bf478  ;*aload_0
                                                ; - java.io.ByteArrayInputStream::read@0 (line 144)

  0x000000010c4bf3a4: mov    0xc(%rsi),%eax     ;*getfield pos
                                                ; - java.io.ByteArrayInputStream::read@1 (line 144)

  0x000000010c4bf3a7: mov    0x14(%rsi),%edi    ;*getfield count
                                                ; - java.io.ByteArrayInputStream::read@5 (line 144)

  0x000000010c4bf3aa: cmp    %edi,%eax
  0x000000010c4bf3ac: movabs $0x124f1b698,%rdi  ;   {metadata(method data for {method} {0x0000000124d3f858} 'read' '()I' in 'java/io/ByteArrayInputStream')}
  0x000000010c4bf3b6: movabs $0x108,%rbx
  0x000000010c4bf3c0: jge    0x000000010c4bf3d0
  0x000000010c4bf3c6: movabs $0x118,%rbx
  0x000000010c4bf3d0: mov    (%rdi,%rbx,1),%rdx
  0x000000010c4bf3d4: lea    0x1(%rdx),%rdx
  0x000000010c4bf3d8: mov    %rdx,(%rdi,%rbx,1)
  0x000000010c4bf3dc: jge    0x000000010c4bf420  ;*if_icmpge
                                                ; - java.io.ByteArrayInputStream::read@8 (line 144)

  0x000000010c4bf3e2: mov    0x18(%rsi),%edi
  0x000000010c4bf3e5: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.ByteArrayInputStream::read@12 (line 144)

  0x000000010c4bf3e9: mov    %rax,%rbx
  0x000000010c4bf3ec: inc    %ebx
  0x000000010c4bf3ee: mov    %ebx,0xc(%rsi)     ;*putfield pos
                                                ; - java.io.ByteArrayInputStream::read@23 (line 144)

  0x000000010c4bf3f1: movslq %eax,%rsi
  0x000000010c4bf3f4: cmp    0xc(%rdi),%eax     ; implicit exception: dispatches to 0x000000010c4bf48f
  0x000000010c4bf3f7: jae    0x000000010c4bf499
  0x000000010c4bf3fd: movsbl 0x10(%rdi,%rsi,1),%eax  ;*baload
                                                ; - java.io.ByteArrayInputStream::read@26 (line 144)

  0x000000010c4bf402: and    $0xff,%eax
  0x000000010c4bf408: movabs $0x124f1b698,%rsi  ;   {metadata(method data for {method} {0x0000000124d3f858} 'read' '()I' in 'java/io/ByteArrayInputStream')}
  0x000000010c4bf412: incl   0x128(%rsi)
  0x000000010c4bf418: mov    %rax,%rsi
  0x000000010c4bf41b: jmpq   0x000000010c4bf425  ;*goto
                                                ; - java.io.ByteArrayInputStream::read@31 (line 144)

  0x000000010c4bf420: mov    $0xffffffff,%esi
  0x000000010c4bf425: lea    0x30(%rsp),%rax
  0x000000010c4bf42a: mov    0x8(%rax),%rbx
  0x000000010c4bf42e: mov    (%rbx),%rdi
  0x000000010c4bf431: and    $0x7,%rdi
  0x000000010c4bf435: cmp    $0x5,%rdi
  0x000000010c4bf439: je     0x000000010c4bf456
  0x000000010c4bf43f: mov    (%rax),%rdi
  0x000000010c4bf442: test   %rdi,%rdi
  0x000000010c4bf445: je     0x000000010c4bf456
  0x000000010c4bf44b: lock cmpxchg %rdi,(%rbx)
  0x000000010c4bf450: jne    0x000000010c4bf4a2  ;*ireturn
                                                ; - java.io.ByteArrayInputStream::read@35 (line 144)

  0x000000010c4bf456: mov    %rsi,%rax
  0x000000010c4bf459: add    $0x50,%rsp
  0x000000010c4bf45d: pop    %rbp
  0x000000010c4bf45e: test   %eax,-0x2193364(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4bf464: retq   
  0x000000010c4bf465: mov    %rsi,0x8(%rsp)
  0x000000010c4bf46a: mov    %rdi,(%rsp)
  0x000000010c4bf46e: callq  0x000000010c4a33e0  ; OopMap{rsi=Oop [56]=Oop off=499}
                                                ;*synchronization entry
                                                ; - java.io.ByteArrayInputStream::read@-1 (line 144)
                                                ;   {runtime_call}
  0x000000010c4bf473: jmpq   0x000000010c4bf372
  0x000000010c4bf478: mov    %rax,0x8(%rsp)
  0x000000010c4bf47d: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4bf485: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [56]=Oop off=522}
                                                ;*synchronization entry
                                                ; - java.io.ByteArrayInputStream::read@-1 (line 144)
                                                ;   {runtime_call}
  0x000000010c4bf48a: jmpq   0x000000010c4bf3a4
  0x000000010c4bf48f: callq  0x000000010c4a0a40  ; OopMap{rdi=Oop [56]=Oop off=532}
                                                ;*baload
                                                ; - java.io.ByteArrayInputStream::read@26 (line 144)
                                                ;   {runtime_call}
  0x000000010c4bf494: callq  0x000000010c4a0a40  ; OopMap{rdi=Oop [56]=Oop off=537}
                                                ;*baload
                                                ; - java.io.ByteArrayInputStream::read@26 (line 144)
                                                ;   {runtime_call}
  0x000000010c4bf499: mov    %rax,(%rsp)
  0x000000010c4bf49d: callq  0x000000010c413000  ; OopMap{rdi=Oop [56]=Oop off=546}
                                                ;*baload
                                                ; - java.io.ByteArrayInputStream::read@26 (line 144)
                                                ;   {runtime_call}
  0x000000010c4bf4a2: lea    0x30(%rsp),%rax
  0x000000010c4bf4a7: mov    %rax,(%rsp)
  0x000000010c4bf4ab: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4bf4b0: jmp    0x000000010c4bf456
  0x000000010c4bf4b2: nop
  0x000000010c4bf4b3: nop
  0x000000010c4bf4b4: mov    0x2a8(%r15),%rax
  0x000000010c4bf4bb: movabs $0x0,%r10
  0x000000010c4bf4c5: mov    %r10,0x2a8(%r15)
  0x000000010c4bf4cc: movabs $0x0,%r10
  0x000000010c4bf4d6: mov    %r10,0x2b0(%r15)
  0x000000010c4bf4dd: mov    %rax,%rbx
  0x000000010c4bf4e0: lea    0x30(%rsp),%rax
  0x000000010c4bf4e5: mov    0x8(%rax),%rsi
  0x000000010c4bf4e9: mov    (%rsi),%rdi
  0x000000010c4bf4ec: and    $0x7,%rdi
  0x000000010c4bf4f0: cmp    $0x5,%rdi
  0x000000010c4bf4f4: je     0x000000010c4bf511
  0x000000010c4bf4fa: mov    (%rax),%rdi
  0x000000010c4bf4fd: test   %rdi,%rdi
  0x000000010c4bf500: je     0x000000010c4bf511
  0x000000010c4bf506: lock cmpxchg %rdi,(%rsi)
  0x000000010c4bf50b: jne    0x000000010c4bf51e
  0x000000010c4bf511: mov    %rbx,%rax
  0x000000010c4bf514: add    $0x50,%rsp
  0x000000010c4bf518: pop    %rbp
  0x000000010c4bf519: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4bf51e: lea    0x30(%rsp),%rax
  0x000000010c4bf523: mov    %rax,(%rsp)
  0x000000010c4bf527: callq  0x000000010c4a37a0  ;   {runtime_call}
  0x000000010c4bf52c: jmp    0x000000010c4bf511
  0x000000010c4bf52e: hlt    
  0x000000010c4bf52f: hlt    
  0x000000010c4bf530: hlt    
  0x000000010c4bf531: hlt    
  0x000000010c4bf532: hlt    
  0x000000010c4bf533: hlt    
  0x000000010c4bf534: hlt    
  0x000000010c4bf535: hlt    
  0x000000010c4bf536: hlt    
  0x000000010c4bf537: hlt    
  0x000000010c4bf538: hlt    
  0x000000010c4bf539: hlt    
  0x000000010c4bf53a: hlt    
  0x000000010c4bf53b: hlt    
  0x000000010c4bf53c: hlt    
  0x000000010c4bf53d: hlt    
  0x000000010c4bf53e: hlt    
  0x000000010c4bf53f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4bf540: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4bf545: mov    %rsp,-0x28(%rsp)
  0x000000010c4bf54a: sub    $0x80,%rsp
  0x000000010c4bf551: mov    %rax,0x78(%rsp)
  0x000000010c4bf556: mov    %rcx,0x70(%rsp)
  0x000000010c4bf55b: mov    %rdx,0x68(%rsp)
  0x000000010c4bf560: mov    %rbx,0x60(%rsp)
  0x000000010c4bf565: mov    %rbp,0x50(%rsp)
  0x000000010c4bf56a: mov    %rsi,0x48(%rsp)
  0x000000010c4bf56f: mov    %rdi,0x40(%rsp)
  0x000000010c4bf574: mov    %r8,0x38(%rsp)
  0x000000010c4bf579: mov    %r9,0x30(%rsp)
  0x000000010c4bf57e: mov    %r10,0x28(%rsp)
  0x000000010c4bf583: mov    %r11,0x20(%rsp)
  0x000000010c4bf588: mov    %r12,0x18(%rsp)
  0x000000010c4bf58d: mov    %r13,0x10(%rsp)
  0x000000010c4bf592: mov    %r14,0x8(%rsp)
  0x000000010c4bf597: mov    %r15,(%rsp)
  0x000000010c4bf59b: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4bf5a5: movabs $0x10c4bf545,%rsi  ;   {internal_word}
  0x000000010c4bf5af: mov    %rsp,%rdx
  0x000000010c4bf5b2: and    $0xfffffffffffffff0,%rsp
  0x000000010c4bf5b6: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4bf5bb: hlt    
[Deopt Handler Code]
  0x000000010c4bf5bc: movabs $0x10c4bf5bc,%r10  ;   {section_word}
  0x000000010c4bf5c6: push   %r10
  0x000000010c4bf5c8: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bf5cd: hlt    
  0x000000010c4bf5ce: hlt    
  0x000000010c4bf5cf: hlt    
Decoding compiled method 0x000000010c4c2250:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124dfbb18} 'read' '()I' in 'java/io/BufferedInputStream'
  #           [sp+0x30]  (sp of caller)
  0x000000010c4c23a0: mov    0x8(%rsi),%r10d
  0x000000010c4c23a4: shl    $0x3,%r10
  0x000000010c4c23a8: cmp    %r10,%rax
  0x000000010c4c23ab: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c23b1: data32 xchg %ax,%ax
  0x000000010c4c23b4: nopl   0x0(%rax,%rax,1)
  0x000000010c4c23bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c23c0: mov    %eax,-0x14000(%rsp)
  0x000000010c4c23c7: push   %rbp
  0x000000010c4c23c8: sub    $0x20,%rsp
  0x000000010c4c23cc: mov    %rsi,(%rsp)
  0x000000010c4c23d0: mov    (%rsi),%rax
  0x000000010c4c23d3: mov    %rax,%r10
  0x000000010c4c23d6: and    $0x7,%r10
  0x000000010c4c23da: cmp    $0x5,%r10
  0x000000010c4c23de: jne    0x000000010c4c24c2
  0x000000010c4c23e4: mov    $0xf8004d3a,%r10d  ;   {metadata('java/io/BufferedInputStream')}
  0x000000010c4c23ea: shl    $0x3,%r10
  0x000000010c4c23ee: mov    0xa8(%r10),%r10
  0x000000010c4c23f5: mov    %r10,%r11
  0x000000010c4c23f8: or     %r15,%r11
  0x000000010c4c23fb: mov    %r11,%r8
  0x000000010c4c23fe: xor    %rax,%r8
  0x000000010c4c2401: test   $0xffffffffffffff87,%r8
  0x000000010c4c2408: jne    0x000000010c4c2529  ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)

  0x000000010c4c240e: mov    (%rsp),%r10
  0x000000010c4c2412: mov    0x14(%r10),%r11d
  0x000000010c4c2416: mov    0x10(%r10),%r10d
  0x000000010c4c241a: cmp    %r10d,%r11d
  0x000000010c4c241d: jge    0x000000010c4c2471  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x000000010c4c241f: mov    (%rsp),%r10
  0x000000010c4c2423: mov    0x20(%r10),%r8d    ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010c4c2427: mov    0xc(%r12,%r8,8),%r11d  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ; implicit exception: dispatches to 0x000000010c4c26a2
  0x000000010c4c242c: mov    0x14(%r10),%ebp    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x000000010c4c2430: mov    %ebp,%r10d
  0x000000010c4c2433: inc    %r10d
  0x000000010c4c2436: mov    (%rsp),%r9
  0x000000010c4c243a: mov    %r10d,0x14(%r9)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x000000010c4c243e: cmp    %r11d,%ebp
  0x000000010c4c2441: jae    0x000000010c4c24a8  ;*invokespecial getBufIfOpen
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010c4c2443: lea    (%r12,%r8,8),%r10
  0x000000010c4c2447: movslq %ebp,%r11
  0x000000010c4c244a: movzbl 0x10(%r10,%r11,1),%ebp  ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x000000010c4c2450: mov    $0x7,%r10d
  0x000000010c4c2456: and    (%r9),%r10
  0x000000010c4c2459: cmp    $0x5,%r10
  0x000000010c4c245d: jne    0x000000010c4c2554
  0x000000010c4c2463: mov    %ebp,%eax
  0x000000010c4c2465: add    $0x20,%rsp
  0x000000010c4c2469: pop    %rbp
  0x000000010c4c246a: test   %eax,-0x2196470(%rip)        # 0x000000010a32c000
                                                ;   {poll_return}
  0x000000010c4c2470: retq   
  0x000000010c4c2471: mov    (%rsp),%rsi
  0x000000010c4c2475: mov    %rsi,%rbp
  0x000000010c4c2478: data32 xchg %ax,%ax
  0x000000010c4c247b: callq  0x000000010c3ed020  ; OopMap{rbp=Oop [0]=Oop off=224}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x000000010c4c2480: mov    0x10(%rbp),%r10d
  0x000000010c4c2484: mov    0x14(%rbp),%r8d
  0x000000010c4c2488: cmp    %r10d,%r8d
  0x000000010c4c248b: jl     0x000000010c4c241f
  0x000000010c4c248d: mov    $0x7,%r10d
  0x000000010c4c2493: and    0x0(%rbp),%r10
  0x000000010c4c2497: cmp    $0x5,%r10
  0x000000010c4c249b: jne    0x000000010c4c25fa  ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x000000010c4c24a1: mov    $0xffffffff,%ebp
  0x000000010c4c24a6: jmp    0x000000010c4c2463
  0x000000010c4c24a8: mov    $0xffffffe4,%esi
  0x000000010c4c24ad: mov    %r8d,0x8(%rsp)
  0x000000010c4c24b2: nop
  0x000000010c4c24b3: callq  0x000000010c3ac1a0  ; OopMap{[0]=Oop [8]=NarrowOop off=280}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000010c4c24b8: callq  0x000000010b887154  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000010c4c24bd: lock cmpxchg %r10,(%rsi)
  0x000000010c4c24c2: lea    0x10(%rsp),%rbx
  0x000000010c4c24c7: mov    (%rsi),%rax
  0x000000010c4c24ca: test   $0x2,%rax
  0x000000010c4c24d0: jne    0x000000010c4c24f6
  0x000000010c4c24d2: or     $0x1,%rax
  0x000000010c4c24d6: mov    %rax,(%rbx)
  0x000000010c4c24d9: lock cmpxchg %rbx,(%rsi)
  0x000000010c4c24de: je     0x000000010c4c250f
  0x000000010c4c24e4: sub    %rsp,%rax
  0x000000010c4c24e7: and    $0xfffffffffffff007,%rax
  0x000000010c4c24ee: mov    %rax,(%rbx)
  0x000000010c4c24f1: jmpq   0x000000010c4c250f
  0x000000010c4c24f6: movq   $0x3,(%rbx)
  0x000000010c4c24fd: mov    %rax,%rbx
  0x000000010c4c2500: mov    0x16(%rbx),%rax
  0x000000010c4c2504: test   %rax,%rax
  0x000000010c4c2507: jne    0x000000010c4c250f
  0x000000010c4c2509: lock cmpxchg %r15,0x16(%rbx)
  0x000000010c4c250f: je     0x000000010c4c240e
  0x000000010c4c2515: lea    0x10(%rsp),%rdx
  0x000000010c4c251a: mov    %rsi,%rbp
  0x000000010c4c251d: xchg   %ax,%ax
  0x000000010c4c251f: callq  0x000000010c4a5fe0  ; OopMap{rbp=Oop [0]=Oop off=388}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000010c4c2524: jmpq   0x000000010c4c240e
  0x000000010c4c2529: test   $0x7,%r8
  0x000000010c4c2530: jne    0x000000010c4c24bd
  0x000000010c4c2532: test   $0x300,%r8
  0x000000010c4c2539: jne    0x000000010c4c2548
  0x000000010c4c253b: and    $0x37f,%rax
  0x000000010c4c2542: mov    %rax,%r11
  0x000000010c4c2545: or     %r15,%r11
  0x000000010c4c2548: lock cmpxchg %r11,(%rsi)
  0x000000010c4c254d: jne    0x000000010c4c2515
  0x000000010c4c254f: jmpq   0x000000010c4c240e
  0x000000010c4c2554: lea    0x10(%rsp),%rax
  0x000000010c4c2559: cmpq   $0x0,(%rax)
  0x000000010c4c2560: je     0x000000010c4c25da
  0x000000010c4c2566: mov    (%r9),%r10
  0x000000010c4c2569: test   $0x2,%r10
  0x000000010c4c2570: je     0x000000010c4c25d2
  0x000000010c4c2572: mov    0x16(%r10),%rax
  0x000000010c4c2576: xor    %r15,%rax
  0x000000010c4c2579: or     0x26(%r10),%rax
  0x000000010c4c257d: jne    0x000000010c4c25da
  0x000000010c4c257f: mov    0x36(%r10),%rax
  0x000000010c4c2583: or     0x3e(%r10),%rax
  0x000000010c4c2587: jne    0x000000010c4c2593
  0x000000010c4c2589: movq   $0x0,0x16(%r10)
  0x000000010c4c2591: jmp    0x000000010c4c25da
  0x000000010c4c2593: cmpq   $0x0,0x46(%r10)
  0x000000010c4c259b: je     0x000000010c4c25c6
  0x000000010c4c259d: movq   $0x0,0x16(%r10)
  0x000000010c4c25a5: lock addl $0x0,(%rsp)
  0x000000010c4c25aa: cmpq   $0x0,0x46(%r10)
  0x000000010c4c25b2: jne    0x000000010c4c25cb
  0x000000010c4c25b4: movabs $0x0,%rax
  0x000000010c4c25be: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4c25c4: jne    0x000000010c4c25cb
  0x000000010c4c25c6: or     $0x1,%eax
  0x000000010c4c25c9: jmp    0x000000010c4c25da
  0x000000010c4c25cb: test   $0x0,%eax
  0x000000010c4c25d0: jmp    0x000000010c4c25da
  0x000000010c4c25d2: mov    (%rax),%r10
  0x000000010c4c25d5: lock cmpxchg %r10,(%r9)
  0x000000010c4c25da: je     0x000000010c4c2463
  0x000000010c4c25e0: mov    %r9,%rdi
  0x000000010c4c25e3: lea    0x10(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)

  0x000000010c4c25e8: movabs $0x10b8e68c6,%r10
  0x000000010c4c25f2: callq  *%r10              ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x000000010c4c25f5: jmpq   0x000000010c4c2463
  0x000000010c4c25fa: lea    0x10(%rsp),%rax
  0x000000010c4c25ff: cmpq   $0x0,(%rax)
  0x000000010c4c2606: je     0x000000010c4c2682
  0x000000010c4c260c: mov    0x0(%rbp),%r10
  0x000000010c4c2610: test   $0x2,%r10
  0x000000010c4c2617: je     0x000000010c4c2679
  0x000000010c4c2619: mov    0x16(%r10),%rax
  0x000000010c4c261d: xor    %r15,%rax
  0x000000010c4c2620: or     0x26(%r10),%rax
  0x000000010c4c2624: jne    0x000000010c4c2682
  0x000000010c4c2626: mov    0x36(%r10),%rax
  0x000000010c4c262a: or     0x3e(%r10),%rax
  0x000000010c4c262e: jne    0x000000010c4c263a
  0x000000010c4c2630: movq   $0x0,0x16(%r10)
  0x000000010c4c2638: jmp    0x000000010c4c2682
  0x000000010c4c263a: cmpq   $0x0,0x46(%r10)
  0x000000010c4c2642: je     0x000000010c4c266d
  0x000000010c4c2644: movq   $0x0,0x16(%r10)
  0x000000010c4c264c: lock addl $0x0,(%rsp)
  0x000000010c4c2651: cmpq   $0x0,0x46(%r10)
  0x000000010c4c2659: jne    0x000000010c4c2672
  0x000000010c4c265b: movabs $0x0,%rax
  0x000000010c4c2665: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4c266b: jne    0x000000010c4c2672
  0x000000010c4c266d: or     $0x1,%eax
  0x000000010c4c2670: jmp    0x000000010c4c2682
  0x000000010c4c2672: test   $0x0,%eax
  0x000000010c4c2677: jmp    0x000000010c4c2682
  0x000000010c4c2679: mov    (%rax),%r10
  0x000000010c4c267c: lock cmpxchg %r10,0x0(%rbp)
  0x000000010c4c2682: je     0x000000010c4c24a1
  0x000000010c4c2688: mov    %rbp,%rdi
  0x000000010c4c268b: lea    0x10(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)

  0x000000010c4c2690: movabs $0x10b8e68c6,%r10
  0x000000010c4c269a: callq  *%r10              ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x000000010c4c269d: jmpq   0x000000010c4c24a1
  0x000000010c4c26a2: mov    $0xffffff65,%esi
  0x000000010c4c26a7: mov    %r10,%rbp
  0x000000010c4c26aa: mov    %r8d,0xc(%rsp)
  0x000000010c4c26af: callq  0x000000010c3ac1a0  ; OopMap{rbp=Oop [12]=NarrowOop off=788}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000010c4c26b4: callq  0x000000010b887154  ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {runtime_call}
  0x000000010c4c26b9: mov    %rax,%rbx
  0x000000010c4c26bc: mov    $0x7,%r10d
  0x000000010c4c26c2: and    0x0(%rbp),%r10
  0x000000010c4c26c6: cmp    $0x5,%r10
  0x000000010c4c26ca: jne    0x000000010c4c26d9  ;*invokespecial getBufIfOpen
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000010c4c26cc: mov    %rbx,%rsi
  0x000000010c4c26cf: add    $0x20,%rsp
  0x000000010c4c26d3: pop    %rbp
  0x000000010c4c26d4: jmpq   0x000000010c4a5aa0  ;   {runtime_call}
  0x000000010c4c26d9: lea    0x10(%rsp),%rax
  0x000000010c4c26de: cmpq   $0x0,(%rax)
  0x000000010c4c26e5: je     0x000000010c4c2761
  0x000000010c4c26eb: mov    0x0(%rbp),%r10
  0x000000010c4c26ef: test   $0x2,%r10
  0x000000010c4c26f6: je     0x000000010c4c2758
  0x000000010c4c26f8: mov    0x16(%r10),%rax
  0x000000010c4c26fc: xor    %r15,%rax
  0x000000010c4c26ff: or     0x26(%r10),%rax
  0x000000010c4c2703: jne    0x000000010c4c2761
  0x000000010c4c2705: mov    0x36(%r10),%rax
  0x000000010c4c2709: or     0x3e(%r10),%rax
  0x000000010c4c270d: jne    0x000000010c4c2719
  0x000000010c4c270f: movq   $0x0,0x16(%r10)
  0x000000010c4c2717: jmp    0x000000010c4c2761
  0x000000010c4c2719: cmpq   $0x0,0x46(%r10)
  0x000000010c4c2721: je     0x000000010c4c274c
  0x000000010c4c2723: movq   $0x0,0x16(%r10)
  0x000000010c4c272b: lock addl $0x0,(%rsp)
  0x000000010c4c2730: cmpq   $0x0,0x46(%r10)
  0x000000010c4c2738: jne    0x000000010c4c2751
  0x000000010c4c273a: movabs $0x0,%rax
  0x000000010c4c2744: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4c274a: jne    0x000000010c4c2751
  0x000000010c4c274c: or     $0x1,%eax
  0x000000010c4c274f: jmp    0x000000010c4c2761
  0x000000010c4c2751: test   $0x0,%eax
  0x000000010c4c2756: jmp    0x000000010c4c2761
  0x000000010c4c2758: mov    (%rax),%r10
  0x000000010c4c275b: lock cmpxchg %r10,0x0(%rbp)
  0x000000010c4c2761: je     0x000000010c4c26cc
  0x000000010c4c2767: mov    %rbp,%rdi
  0x000000010c4c276a: lea    0x10(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)

  0x000000010c4c276f: movabs $0x10b8e68c6,%r10
  0x000000010c4c2779: callq  *%r10
  0x000000010c4c277c: jmpq   0x000000010c4c26cc  ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x000000010c4c2781: hlt    
  0x000000010c4c2782: hlt    
  0x000000010c4c2783: hlt    
  0x000000010c4c2784: hlt    
  0x000000010c4c2785: hlt    
  0x000000010c4c2786: hlt    
  0x000000010c4c2787: hlt    
  0x000000010c4c2788: hlt    
  0x000000010c4c2789: hlt    
  0x000000010c4c278a: hlt    
  0x000000010c4c278b: hlt    
  0x000000010c4c278c: hlt    
  0x000000010c4c278d: hlt    
  0x000000010c4c278e: hlt    
  0x000000010c4c278f: hlt    
  0x000000010c4c2790: hlt    
  0x000000010c4c2791: hlt    
  0x000000010c4c2792: hlt    
  0x000000010c4c2793: hlt    
  0x000000010c4c2794: hlt    
  0x000000010c4c2795: hlt    
  0x000000010c4c2796: hlt    
  0x000000010c4c2797: hlt    
  0x000000010c4c2798: hlt    
  0x000000010c4c2799: hlt    
  0x000000010c4c279a: hlt    
  0x000000010c4c279b: hlt    
  0x000000010c4c279c: hlt    
  0x000000010c4c279d: hlt    
  0x000000010c4c279e: hlt    
  0x000000010c4c279f: hlt    
[Stub Code]
  0x000000010c4c27a0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010c4c27aa: jmpq   0x000000010c4c27aa  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c27af: jmpq   0x000000010c413760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010c4c27b4: callq  0x000000010c4c27b9
  0x000000010c4c27b9: subq   $0x5,(%rsp)
  0x000000010c4c27be: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c27c3: hlt    
  0x000000010c4c27c4: hlt    
  0x000000010c4c27c5: hlt    
  0x000000010c4c27c6: hlt    
  0x000000010c4c27c7: hlt    
Decoding compiled method 0x000000010c4c2a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream'
  #           [sp+0x60]  (sp of caller)
  0x000000010c4c2c00: mov    0x8(%rsi),%r10d
  0x000000010c4c2c04: shl    $0x3,%r10
  0x000000010c4c2c08: cmp    %rax,%r10
  0x000000010c4c2c0b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c2c11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c2c1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c2c20: mov    %eax,-0x14000(%rsp)
  0x000000010c4c2c27: push   %rbp
  0x000000010c4c2c28: sub    $0x50,%rsp
  0x000000010c4c2c2c: mov    %rsi,0x20(%rsp)
  0x000000010c4c2c31: movabs $0x124f1b7f0,%rdi  ;   {metadata(method data for {method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream')}
  0x000000010c4c2c3b: mov    0xdc(%rdi),%ebx
  0x000000010c4c2c41: add    $0x8,%ebx
  0x000000010c4c2c44: mov    %ebx,0xdc(%rdi)
  0x000000010c4c2c4a: movabs $0x124f171f0,%rdi  ;   {metadata({method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream')}
  0x000000010c4c2c54: and    $0x1ff8,%ebx
  0x000000010c4c2c5a: cmp    $0x0,%ebx
  0x000000010c4c2c5d: je     0x000000010c4c2ff6  ;*aload_0
                                                ; - java.io.DataInputStream::readInt@0 (line 387)

  0x000000010c4c2c63: mov    0xc(%rsi),%edi
  0x000000010c4c2c66: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readInt@1 (line 387)

  0x000000010c4c2c6a: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010c4c300d
  0x000000010c4c2c6d: mov    %rdi,%rbx
  0x000000010c4c2c70: movabs $0x124f1b7f0,%rax  ;   {metadata(method data for {method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream')}
  0x000000010c4c2c7a: mov    0x8(%rbx),%ebx
  0x000000010c4c2c7d: shl    $0x3,%rbx
  0x000000010c4c2c81: cmp    0x110(%rax),%rbx
  0x000000010c4c2c88: jne    0x000000010c4c2c97
  0x000000010c4c2c8a: addq   $0x1,0x118(%rax)
  0x000000010c4c2c92: jmpq   0x000000010c4c2cfd
  0x000000010c4c2c97: cmp    0x120(%rax),%rbx
  0x000000010c4c2c9e: jne    0x000000010c4c2cad
  0x000000010c4c2ca0: addq   $0x1,0x128(%rax)
  0x000000010c4c2ca8: jmpq   0x000000010c4c2cfd
  0x000000010c4c2cad: cmpq   $0x0,0x110(%rax)
  0x000000010c4c2cb8: jne    0x000000010c4c2cd1
  0x000000010c4c2cba: mov    %rbx,0x110(%rax)
  0x000000010c4c2cc1: movq   $0x1,0x118(%rax)
  0x000000010c4c2ccc: jmpq   0x000000010c4c2cfd
  0x000000010c4c2cd1: cmpq   $0x0,0x120(%rax)
  0x000000010c4c2cdc: jne    0x000000010c4c2cf5
  0x000000010c4c2cde: mov    %rbx,0x120(%rax)
  0x000000010c4c2ce5: movq   $0x1,0x128(%rax)
  0x000000010c4c2cf0: jmpq   0x000000010c4c2cfd
  0x000000010c4c2cf5: addq   $0x1,0x108(%rax)
  0x000000010c4c2cfd: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@4 (line 387)

  0x000000010c4c2d00: nop
  0x000000010c4c2d01: nop
  0x000000010c4c2d02: nop
  0x000000010c4c2d03: nop
  0x000000010c4c2d04: nop
  0x000000010c4c2d05: movabs $0xffffffffffffffff,%rax
  0x000000010c4c2d0f: callq  0x000000010c3ed220  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@4 (line 387)
                                                ;   {virtual_call}
  0x000000010c4c2d14: mov    0x20(%rsp),%rsi
  0x000000010c4c2d19: mov    0xc(%rsi),%edi
  0x000000010c4c2d1c: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readInt@9 (line 388)

  0x000000010c4c2d20: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010c4c3012
  0x000000010c4c2d23: mov    %rdi,%rbx
  0x000000010c4c2d26: movabs $0x124f1b7f0,%rdx  ;   {metadata(method data for {method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream')}
  0x000000010c4c2d30: mov    0x8(%rbx),%ebx
  0x000000010c4c2d33: shl    $0x3,%rbx
  0x000000010c4c2d37: cmp    0x140(%rdx),%rbx
  0x000000010c4c2d3e: jne    0x000000010c4c2d4d
  0x000000010c4c2d40: addq   $0x1,0x148(%rdx)
  0x000000010c4c2d48: jmpq   0x000000010c4c2db3
  0x000000010c4c2d4d: cmp    0x150(%rdx),%rbx
  0x000000010c4c2d54: jne    0x000000010c4c2d63
  0x000000010c4c2d56: addq   $0x1,0x158(%rdx)
  0x000000010c4c2d5e: jmpq   0x000000010c4c2db3
  0x000000010c4c2d63: cmpq   $0x0,0x140(%rdx)
  0x000000010c4c2d6e: jne    0x000000010c4c2d87
  0x000000010c4c2d70: mov    %rbx,0x140(%rdx)
  0x000000010c4c2d77: movq   $0x1,0x148(%rdx)
  0x000000010c4c2d82: jmpq   0x000000010c4c2db3
  0x000000010c4c2d87: cmpq   $0x0,0x150(%rdx)
  0x000000010c4c2d92: jne    0x000000010c4c2dab
  0x000000010c4c2d94: mov    %rbx,0x150(%rdx)
  0x000000010c4c2d9b: movq   $0x1,0x158(%rdx)
  0x000000010c4c2da6: jmpq   0x000000010c4c2db3
  0x000000010c4c2dab: addq   $0x1,0x138(%rdx)
  0x000000010c4c2db3: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@12 (line 388)

  0x000000010c4c2db6: mov    %eax,0x28(%rsp)
  0x000000010c4c2dba: nop
  0x000000010c4c2dbb: nop
  0x000000010c4c2dbc: nop
  0x000000010c4c2dbd: movabs $0xffffffffffffffff,%rax
  0x000000010c4c2dc7: callq  0x000000010c3ed220  ; OopMap{[32]=Oop off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@12 (line 388)
                                                ;   {virtual_call}
  0x000000010c4c2dcc: mov    0x20(%rsp),%rsi
  0x000000010c4c2dd1: mov    0xc(%rsi),%edi
  0x000000010c4c2dd4: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readInt@17 (line 389)

  0x000000010c4c2dd8: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010c4c3017
  0x000000010c4c2ddb: mov    %rdi,%rbx
  0x000000010c4c2dde: movabs $0x124f1b7f0,%rdx  ;   {metadata(method data for {method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream')}
  0x000000010c4c2de8: mov    0x8(%rbx),%ebx
  0x000000010c4c2deb: shl    $0x3,%rbx
  0x000000010c4c2def: cmp    0x170(%rdx),%rbx
  0x000000010c4c2df6: jne    0x000000010c4c2e05
  0x000000010c4c2df8: addq   $0x1,0x178(%rdx)
  0x000000010c4c2e00: jmpq   0x000000010c4c2e6b
  0x000000010c4c2e05: cmp    0x180(%rdx),%rbx
  0x000000010c4c2e0c: jne    0x000000010c4c2e1b
  0x000000010c4c2e0e: addq   $0x1,0x188(%rdx)
  0x000000010c4c2e16: jmpq   0x000000010c4c2e6b
  0x000000010c4c2e1b: cmpq   $0x0,0x170(%rdx)
  0x000000010c4c2e26: jne    0x000000010c4c2e3f
  0x000000010c4c2e28: mov    %rbx,0x170(%rdx)
  0x000000010c4c2e2f: movq   $0x1,0x178(%rdx)
  0x000000010c4c2e3a: jmpq   0x000000010c4c2e6b
  0x000000010c4c2e3f: cmpq   $0x0,0x180(%rdx)
  0x000000010c4c2e4a: jne    0x000000010c4c2e63
  0x000000010c4c2e4c: mov    %rbx,0x180(%rdx)
  0x000000010c4c2e53: movq   $0x1,0x188(%rdx)
  0x000000010c4c2e5e: jmpq   0x000000010c4c2e6b
  0x000000010c4c2e63: addq   $0x1,0x168(%rdx)
  0x000000010c4c2e6b: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@20 (line 389)

  0x000000010c4c2e6e: mov    %eax,0x2c(%rsp)
  0x000000010c4c2e72: nop
  0x000000010c4c2e73: nop
  0x000000010c4c2e74: nop
  0x000000010c4c2e75: movabs $0xffffffffffffffff,%rax
  0x000000010c4c2e7f: callq  0x000000010c3ed220  ; OopMap{[32]=Oop off=644}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@20 (line 389)
                                                ;   {virtual_call}
  0x000000010c4c2e84: mov    0x20(%rsp),%rsi
  0x000000010c4c2e89: mov    0xc(%rsi),%esi
  0x000000010c4c2e8c: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readInt@25 (line 390)

  0x000000010c4c2e90: cmp    (%rsi),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@28 (line 390)
                                                ; implicit exception: dispatches to 0x000000010c4c301c
  0x000000010c4c2e93: mov    %rsi,%rdi
  0x000000010c4c2e96: movabs $0x124f1b7f0,%rbx  ;   {metadata(method data for {method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream')}
  0x000000010c4c2ea0: mov    0x8(%rdi),%edi
  0x000000010c4c2ea3: shl    $0x3,%rdi
  0x000000010c4c2ea7: cmp    0x1a0(%rbx),%rdi
  0x000000010c4c2eae: jne    0x000000010c4c2ebd
  0x000000010c4c2eb0: addq   $0x1,0x1a8(%rbx)
  0x000000010c4c2eb8: jmpq   0x000000010c4c2f23
  0x000000010c4c2ebd: cmp    0x1b0(%rbx),%rdi
  0x000000010c4c2ec4: jne    0x000000010c4c2ed3
  0x000000010c4c2ec6: addq   $0x1,0x1b8(%rbx)
  0x000000010c4c2ece: jmpq   0x000000010c4c2f23
  0x000000010c4c2ed3: cmpq   $0x0,0x1a0(%rbx)
  0x000000010c4c2ede: jne    0x000000010c4c2ef7
  0x000000010c4c2ee0: mov    %rdi,0x1a0(%rbx)
  0x000000010c4c2ee7: movq   $0x1,0x1a8(%rbx)
  0x000000010c4c2ef2: jmpq   0x000000010c4c2f23
  0x000000010c4c2ef7: cmpq   $0x0,0x1b0(%rbx)
  0x000000010c4c2f02: jne    0x000000010c4c2f1b
  0x000000010c4c2f04: mov    %rdi,0x1b0(%rbx)
  0x000000010c4c2f0b: movq   $0x1,0x1b8(%rbx)
  0x000000010c4c2f16: jmpq   0x000000010c4c2f23
  0x000000010c4c2f1b: addq   $0x1,0x198(%rbx)
  0x000000010c4c2f23: mov    %eax,0x30(%rsp)
  0x000000010c4c2f27: nop
  0x000000010c4c2f28: nop
  0x000000010c4c2f29: nop
  0x000000010c4c2f2a: nop
  0x000000010c4c2f2b: nop
  0x000000010c4c2f2c: nop
  0x000000010c4c2f2d: movabs $0xffffffffffffffff,%rax
  0x000000010c4c2f37: callq  0x000000010c3ed220  ; OopMap{off=828}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@28 (line 390)
                                                ;   {virtual_call}
  0x000000010c4c2f3c: mov    0x28(%rsp),%edx
  0x000000010c4c2f40: or     0x2c(%rsp),%edx
  0x000000010c4c2f44: or     0x30(%rsp),%edx
  0x000000010c4c2f48: or     %rax,%rdx
  0x000000010c4c2f4b: cmp    $0x0,%edx
  0x000000010c4c2f4e: movabs $0x124f1b7f0,%rdx  ;   {metadata(method data for {method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream')}
  0x000000010c4c2f58: movabs $0x1c8,%rsi
  0x000000010c4c2f62: jge    0x000000010c4c2f72
  0x000000010c4c2f68: movabs $0x1d8,%rsi
  0x000000010c4c2f72: mov    (%rdx,%rsi,1),%rdi
  0x000000010c4c2f76: lea    0x1(%rdi),%rdi
  0x000000010c4c2f7a: mov    %rdi,(%rdx,%rsi,1)
  0x000000010c4c2f7e: jl     0x000000010c4c2fb1  ;*ifge
                                                ; - java.io.DataInputStream::readInt@41 (line 391)

  0x000000010c4c2f84: mov    0x30(%rsp),%edi
  0x000000010c4c2f88: mov    0x2c(%rsp),%esi
  0x000000010c4c2f8c: mov    0x28(%rsp),%edx
  0x000000010c4c2f90: shl    $0x18,%edx
  0x000000010c4c2f93: shl    $0x10,%esi
  0x000000010c4c2f96: add    %esi,%edx
  0x000000010c4c2f98: mov    %rdi,%rsi
  0x000000010c4c2f9b: shl    $0x8,%esi
  0x000000010c4c2f9e: add    %esi,%edx
  0x000000010c4c2fa0: add    %eax,%edx
  0x000000010c4c2fa2: mov    %rdx,%rax
  0x000000010c4c2fa5: add    $0x50,%rsp
  0x000000010c4c2fa9: pop    %rbp
  0x000000010c4c2faa: test   %eax,-0x2196eb0(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c2fb0: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readInt@71 (line 393)

  0x000000010c4c2fb1: nopl   0x0(%rax)
  0x000000010c4c2fb8: jmpq   0x000000010c4c3030  ;   {no_reloc}
  0x000000010c4c2fbd: add    %al,(%rax)
  0x000000010c4c2fbf: add    %al,(%rax)
  0x000000010c4c2fc1: add    %ch,%cl
  0x000000010c4c2fc3: jae    0x000000010c4c2fc5
  0x000000010c4c2fc5: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readInt@44 (line 392)

  0x000000010c4c2fc7: mov    %rax,%rsi
  0x000000010c4c2fca: movabs $0x124f1b7f0,%rdi  ;   {metadata(method data for {method} {0x0000000124f171f0} 'readInt' '()I' in 'java/io/DataInputStream')}
  0x000000010c4c2fd4: addq   $0x1,0x1e8(%rdi)
  0x000000010c4c2fdc: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readInt@48 (line 392)

  0x000000010c4c2fdf: mov    %rax,0x38(%rsp)
  0x000000010c4c2fe4: nop
  0x000000010c4c2fe5: nop
  0x000000010c4c2fe6: nop
  0x000000010c4c2fe7: callq  0x000000010c3ed020  ; OopMap{[56]=Oop off=1004}
                                                ;*invokespecial <init>
                                                ; - java.io.DataInputStream::readInt@48 (line 392)
                                                ;   {optimized virtual_call}
  0x000000010c4c2fec: mov    0x38(%rsp),%rax
  0x000000010c4c2ff1: jmpq   0x000000010c4c306f
  0x000000010c4c2ff6: mov    %rdi,0x8(%rsp)
  0x000000010c4c2ffb: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c3003: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [32]=Oop off=1032}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readInt@-1 (line 387)
                                                ;   {runtime_call}
  0x000000010c4c3008: jmpq   0x000000010c4c2c63
  0x000000010c4c300d: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [32]=Oop rdi=Oop off=1042}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@4 (line 387)
                                                ;   {runtime_call}
  0x000000010c4c3012: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [32]=Oop rdi=Oop off=1047}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@12 (line 388)
                                                ;   {runtime_call}
  0x000000010c4c3017: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [32]=Oop rdi=Oop off=1052}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@20 (line 389)
                                                ;   {runtime_call}
  0x000000010c4c301c: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop off=1057}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readInt@28 (line 390)
                                                ;   {runtime_call}
  0x000000010c4c3021: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4c302b: mov    $0xa050f00,%eax
  0x000000010c4c3030: callq  0x000000010c4a3f60  ; OopMap{off=1077}
                                                ;*new  ; - java.io.DataInputStream::readInt@44 (line 392)
                                                ;   {runtime_call}
  0x000000010c4c3035: jmp    0x000000010c4c2fb8
  0x000000010c4c3037: nop
  0x000000010c4c3038: nop
  0x000000010c4c3039: nop
  0x000000010c4c303a: mov    %rdx,%rdx
  0x000000010c4c303d: callq  0x000000010c4a0ee0  ; OopMap{off=1090}
                                                ;*new  ; - java.io.DataInputStream::readInt@44 (line 392)
                                                ;   {runtime_call}
  0x000000010c4c3042: jmp    0x000000010c4c2fc7
  0x000000010c4c3044: nop
  0x000000010c4c3045: nop
  0x000000010c4c3046: mov    0x2a8(%r15),%rax
  0x000000010c4c304d: movabs $0x0,%r10
  0x000000010c4c3057: mov    %r10,0x2a8(%r15)
  0x000000010c4c305e: movabs $0x0,%r10
  0x000000010c4c3068: mov    %r10,0x2b0(%r15)
  0x000000010c4c306f: add    $0x50,%rsp
  0x000000010c4c3073: pop    %rbp
  0x000000010c4c3074: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c3079: hlt    
  0x000000010c4c307a: hlt    
  0x000000010c4c307b: hlt    
  0x000000010c4c307c: hlt    
  0x000000010c4c307d: hlt    
  0x000000010c4c307e: hlt    
  0x000000010c4c307f: hlt    
[Stub Code]
  0x000000010c4c3080: nop                       ;   {no_reloc}
  0x000000010c4c3081: nop
  0x000000010c4c3082: nop
  0x000000010c4c3083: nop
  0x000000010c4c3084: nop
  0x000000010c4c3085: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c308f: jmpq   0x000000010c4c308f  ;   {runtime_call}
  0x000000010c4c3094: nop
  0x000000010c4c3095: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c309f: jmpq   0x000000010c4c309f  ;   {runtime_call}
  0x000000010c4c30a4: nop
  0x000000010c4c30a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c30af: jmpq   0x000000010c4c30af  ;   {runtime_call}
  0x000000010c4c30b4: nop
  0x000000010c4c30b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c30bf: jmpq   0x000000010c4c30bf  ;   {runtime_call}
  0x000000010c4c30c4: nop
  0x000000010c4c30c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c30cf: jmpq   0x000000010c4c30cf  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c30d4: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c30d9: mov    %rsp,-0x28(%rsp)
  0x000000010c4c30de: sub    $0x80,%rsp
  0x000000010c4c30e5: mov    %rax,0x78(%rsp)
  0x000000010c4c30ea: mov    %rcx,0x70(%rsp)
  0x000000010c4c30ef: mov    %rdx,0x68(%rsp)
  0x000000010c4c30f4: mov    %rbx,0x60(%rsp)
  0x000000010c4c30f9: mov    %rbp,0x50(%rsp)
  0x000000010c4c30fe: mov    %rsi,0x48(%rsp)
  0x000000010c4c3103: mov    %rdi,0x40(%rsp)
  0x000000010c4c3108: mov    %r8,0x38(%rsp)
  0x000000010c4c310d: mov    %r9,0x30(%rsp)
  0x000000010c4c3112: mov    %r10,0x28(%rsp)
  0x000000010c4c3117: mov    %r11,0x20(%rsp)
  0x000000010c4c311c: mov    %r12,0x18(%rsp)
  0x000000010c4c3121: mov    %r13,0x10(%rsp)
  0x000000010c4c3126: mov    %r14,0x8(%rsp)
  0x000000010c4c312b: mov    %r15,(%rsp)
  0x000000010c4c312f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c3139: movabs $0x10c4c30d9,%rsi  ;   {internal_word}
  0x000000010c4c3143: mov    %rsp,%rdx
  0x000000010c4c3146: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c314a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c314f: hlt    
[Deopt Handler Code]
  0x000000010c4c3150: movabs $0x10c4c3150,%r10  ;   {section_word}
  0x000000010c4c315a: push   %r10
  0x000000010c4c315c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c3161: hlt    
  0x000000010c4c3162: hlt    
  0x000000010c4c3163: hlt    
  0x000000010c4c3164: hlt    
  0x000000010c4c3165: hlt    
  0x000000010c4c3166: hlt    
  0x000000010c4c3167: hlt    
Decoding compiled method 0x000000010c4c0750:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124d3f858} 'read' '()I' in 'java/io/ByteArrayInputStream'
  #           [sp+0x30]  (sp of caller)
  0x000000010c4c08a0: mov    0x8(%rsi),%r10d
  0x000000010c4c08a4: shl    $0x3,%r10
  0x000000010c4c08a8: cmp    %r10,%rax
  0x000000010c4c08ab: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c08b1: data32 xchg %ax,%ax
  0x000000010c4c08b4: nopl   0x0(%rax,%rax,1)
  0x000000010c4c08bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c08c0: mov    %eax,-0x14000(%rsp)
  0x000000010c4c08c7: push   %rbp
  0x000000010c4c08c8: sub    $0x20,%rsp
  0x000000010c4c08cc: mov    %rsi,0x8(%rsp)
  0x000000010c4c08d1: mov    (%rsi),%rax
  0x000000010c4c08d4: mov    %rax,%r10
  0x000000010c4c08d7: and    $0x7,%r10
  0x000000010c4c08db: cmp    $0x5,%r10
  0x000000010c4c08df: jne    0x000000010c4c099e
  0x000000010c4c08e5: mov    $0xf8001cda,%r11d  ;   {metadata('java/io/ByteArrayInputStream')}
  0x000000010c4c08eb: movabs $0x0,%r10
  0x000000010c4c08f5: lea    (%r10,%r11,8),%r10
  0x000000010c4c08f9: mov    0xa8(%r10),%r10
  0x000000010c4c0900: mov    %r10,%r11
  0x000000010c4c0903: or     %r15,%r11
  0x000000010c4c0906: mov    %r11,%r8
  0x000000010c4c0909: xor    %rax,%r8
  0x000000010c4c090c: test   $0xffffffffffffff87,%r8
  0x000000010c4c0913: jne    0x000000010c4c0a05  ;*synchronization entry
                                                ; - java.io.ByteArrayInputStream::read@-1 (line 144)

  0x000000010c4c0919: mov    0x8(%rsp),%r10
  0x000000010c4c091e: mov    0xc(%r10),%r10d    ;*getfield pos
                                                ; - java.io.ByteArrayInputStream::read@1 (line 144)

  0x000000010c4c0922: mov    0x8(%rsp),%r11
  0x000000010c4c0927: mov    0x14(%r11),%r11d   ;*getfield count
                                                ; - java.io.ByteArrayInputStream::read@5 (line 144)

  0x000000010c4c092b: cmp    %r11d,%r10d
  0x000000010c4c092e: jge    0x000000010c4c0ad6  ;*if_icmpge
                                                ; - java.io.ByteArrayInputStream::read@8 (line 144)

  0x000000010c4c0934: mov    0x8(%rsp),%r11
  0x000000010c4c0939: mov    0x18(%r11),%ebp    ;*getfield buf
                                                ; - java.io.ByteArrayInputStream::read@12 (line 144)

  0x000000010c4c093d: mov    %r10d,%r11d
  0x000000010c4c0940: inc    %r11d
  0x000000010c4c0943: mov    0x8(%rsp),%r8
  0x000000010c4c0948: mov    %r11d,0xc(%r8)     ;*putfield pos
                                                ; - java.io.ByteArrayInputStream::read@23 (line 144)

  0x000000010c4c094c: mov    0xc(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x000000010c4c0af5
  0x000000010c4c0951: cmp    %r11d,%r10d
  0x000000010c4c0954: jae    0x000000010c4c0984  ;*synchronization entry
                                                ; - java.io.ByteArrayInputStream::read@-1 (line 144)

  0x000000010c4c0956: lea    (%r12,%rbp,8),%r11
  0x000000010c4c095a: movslq %r10d,%r10
  0x000000010c4c095d: movzbl 0x10(%r11,%r10,1),%ebp
  0x000000010c4c0963: mov    $0x7,%r10d
  0x000000010c4c0969: and    (%r8),%r10
  0x000000010c4c096c: cmp    $0x5,%r10
  0x000000010c4c0970: jne    0x000000010c4c0a30  ;*ireturn
                                                ; - java.io.ByteArrayInputStream::read@35 (line 144)

  0x000000010c4c0976: mov    %ebp,%eax
  0x000000010c4c0978: add    $0x20,%rsp
  0x000000010c4c097c: pop    %rbp
  0x000000010c4c097d: test   %eax,-0x2194983(%rip)        # 0x000000010a32c000
                                                ;   {poll_return}
  0x000000010c4c0983: retq   
  0x000000010c4c0984: mov    $0xffffffe4,%esi
  0x000000010c4c0989: mov    %r10d,(%rsp)
  0x000000010c4c098d: xchg   %ax,%ax
  0x000000010c4c098f: callq  0x000000010c3ac1a0  ; OopMap{rbp=NarrowOop [8]=Oop off=244}
                                                ;*baload
                                                ; - java.io.ByteArrayInputStream::read@26 (line 144)
                                                ;   {runtime_call}
  0x000000010c4c0994: callq  0x000000010b887154  ;*baload
                                                ; - java.io.ByteArrayInputStream::read@26 (line 144)
                                                ;   {runtime_call}
  0x000000010c4c0999: lock cmpxchg %r10,(%rsi)
  0x000000010c4c099e: lea    0x10(%rsp),%rbx
  0x000000010c4c09a3: mov    (%rsi),%rax
  0x000000010c4c09a6: test   $0x2,%rax
  0x000000010c4c09ac: jne    0x000000010c4c09d2
  0x000000010c4c09ae: or     $0x1,%rax
  0x000000010c4c09b2: mov    %rax,(%rbx)
  0x000000010c4c09b5: lock cmpxchg %rbx,(%rsi)
  0x000000010c4c09ba: je     0x000000010c4c09eb
  0x000000010c4c09c0: sub    %rsp,%rax
  0x000000010c4c09c3: and    $0xfffffffffffff007,%rax
  0x000000010c4c09ca: mov    %rax,(%rbx)
  0x000000010c4c09cd: jmpq   0x000000010c4c09eb
  0x000000010c4c09d2: movq   $0x3,(%rbx)
  0x000000010c4c09d9: mov    %rax,%rbx
  0x000000010c4c09dc: mov    0x16(%rbx),%rax
  0x000000010c4c09e0: test   %rax,%rax
  0x000000010c4c09e3: jne    0x000000010c4c09eb
  0x000000010c4c09e5: lock cmpxchg %r15,0x16(%rbx)
  0x000000010c4c09eb: je     0x000000010c4c0919
  0x000000010c4c09f1: lea    0x10(%rsp),%rdx
  0x000000010c4c09f6: mov    %rsi,(%rsp)
  0x000000010c4c09fa: nop
  0x000000010c4c09fb: callq  0x000000010c4a5fe0  ; OopMap{[0]=Oop [8]=Oop off=352}
                                                ;*synchronization entry
                                                ; - java.io.ByteArrayInputStream::read@-1 (line 144)
                                                ;   {runtime_call}
  0x000000010c4c0a00: jmpq   0x000000010c4c0919
  0x000000010c4c0a05: test   $0x7,%r8
  0x000000010c4c0a0c: jne    0x000000010c4c0999
  0x000000010c4c0a0e: test   $0x300,%r8
  0x000000010c4c0a15: jne    0x000000010c4c0a24
  0x000000010c4c0a17: and    $0x37f,%rax
  0x000000010c4c0a1e: mov    %rax,%r11
  0x000000010c4c0a21: or     %r15,%r11
  0x000000010c4c0a24: lock cmpxchg %r11,(%rsi)
  0x000000010c4c0a29: jne    0x000000010c4c09f1
  0x000000010c4c0a2b: jmpq   0x000000010c4c0919
  0x000000010c4c0a30: lea    0x10(%rsp),%rax
  0x000000010c4c0a35: cmpq   $0x0,(%rax)
  0x000000010c4c0a3c: je     0x000000010c4c0ab6
  0x000000010c4c0a42: mov    (%r8),%r10
  0x000000010c4c0a45: test   $0x2,%r10
  0x000000010c4c0a4c: je     0x000000010c4c0aae
  0x000000010c4c0a4e: mov    0x16(%r10),%rax
  0x000000010c4c0a52: xor    %r15,%rax
  0x000000010c4c0a55: or     0x26(%r10),%rax
  0x000000010c4c0a59: jne    0x000000010c4c0ab6
  0x000000010c4c0a5b: mov    0x36(%r10),%rax
  0x000000010c4c0a5f: or     0x3e(%r10),%rax
  0x000000010c4c0a63: jne    0x000000010c4c0a6f
  0x000000010c4c0a65: movq   $0x0,0x16(%r10)
  0x000000010c4c0a6d: jmp    0x000000010c4c0ab6
  0x000000010c4c0a6f: cmpq   $0x0,0x46(%r10)
  0x000000010c4c0a77: je     0x000000010c4c0aa2
  0x000000010c4c0a79: movq   $0x0,0x16(%r10)
  0x000000010c4c0a81: lock addl $0x0,(%rsp)
  0x000000010c4c0a86: cmpq   $0x0,0x46(%r10)
  0x000000010c4c0a8e: jne    0x000000010c4c0aa7
  0x000000010c4c0a90: movabs $0x0,%rax
  0x000000010c4c0a9a: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4c0aa0: jne    0x000000010c4c0aa7
  0x000000010c4c0aa2: or     $0x1,%eax
  0x000000010c4c0aa5: jmp    0x000000010c4c0ab6
  0x000000010c4c0aa7: test   $0x0,%eax
  0x000000010c4c0aac: jmp    0x000000010c4c0ab6
  0x000000010c4c0aae: mov    (%rax),%r10
  0x000000010c4c0ab1: lock cmpxchg %r10,(%r8)
  0x000000010c4c0ab6: je     0x000000010c4c0976
  0x000000010c4c0abc: mov    %r8,%rdi
  0x000000010c4c0abf: lea    0x10(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.ByteArrayInputStream::read@-1 (line 144)

  0x000000010c4c0ac4: movabs $0x10b8e68c6,%r10
  0x000000010c4c0ace: callq  *%r10              ;*ireturn
                                                ; - java.io.ByteArrayInputStream::read@35 (line 144)

  0x000000010c4c0ad1: jmpq   0x000000010c4c0976
  0x000000010c4c0ad6: mov    $0xffffff65,%esi
  0x000000010c4c0adb: mov    0x8(%rsp),%rbp
  0x000000010c4c0ae0: mov    %r10d,(%rsp)
  0x000000010c4c0ae4: mov    %r11d,0x4(%rsp)
  0x000000010c4c0ae9: xchg   %ax,%ax
  0x000000010c4c0aeb: callq  0x000000010c3ac1a0  ; OopMap{rbp=Oop off=592}
                                                ;*if_icmpge
                                                ; - java.io.ByteArrayInputStream::read@8 (line 144)
                                                ;   {runtime_call}
  0x000000010c4c0af0: callq  0x000000010b887154  ;   {runtime_call}
  0x000000010c4c0af5: mov    $0xfffffff6,%esi
  0x000000010c4c0afa: mov    %r10d,%ebp
  0x000000010c4c0afd: xchg   %ax,%ax
  0x000000010c4c0aff: callq  0x000000010c3ac1a0  ; OopMap{[8]=Oop off=612}
                                                ;*baload
                                                ; - java.io.ByteArrayInputStream::read@26 (line 144)
                                                ;   {runtime_call}
  0x000000010c4c0b04: callq  0x000000010b887154  ;*baload
                                                ; - java.io.ByteArrayInputStream::read@26 (line 144)
                                                ;   {runtime_call}
  0x000000010c4c0b09: hlt    
  0x000000010c4c0b0a: hlt    
  0x000000010c4c0b0b: hlt    
  0x000000010c4c0b0c: hlt    
  0x000000010c4c0b0d: hlt    
  0x000000010c4c0b0e: hlt    
  0x000000010c4c0b0f: hlt    
  0x000000010c4c0b10: hlt    
  0x000000010c4c0b11: hlt    
  0x000000010c4c0b12: hlt    
  0x000000010c4c0b13: hlt    
  0x000000010c4c0b14: hlt    
  0x000000010c4c0b15: hlt    
  0x000000010c4c0b16: hlt    
  0x000000010c4c0b17: hlt    
  0x000000010c4c0b18: hlt    
  0x000000010c4c0b19: hlt    
  0x000000010c4c0b1a: hlt    
  0x000000010c4c0b1b: hlt    
  0x000000010c4c0b1c: hlt    
  0x000000010c4c0b1d: hlt    
  0x000000010c4c0b1e: hlt    
  0x000000010c4c0b1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4c0b20: jmpq   0x000000010c413760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010c4c0b25: callq  0x000000010c4c0b2a
  0x000000010c4c0b2a: subq   $0x5,(%rsp)
  0x000000010c4c0b2f: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c0b34: hlt    
  0x000000010c4c0b35: hlt    
  0x000000010c4c0b36: hlt    
  0x000000010c4c0b37: hlt    
Decoding compiled method 0x000000010c4bdfd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124f17110} 'readChar' '()C' in 'java/io/DataInputStream'
  #           [sp+0x50]  (sp of caller)
  0x000000010c4be160: mov    0x8(%rsi),%r10d
  0x000000010c4be164: shl    $0x3,%r10
  0x000000010c4be168: cmp    %r10,%rax
  0x000000010c4be16b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4be171: data32 xchg %ax,%ax
  0x000000010c4be174: nopl   0x0(%rax,%rax,1)
  0x000000010c4be17c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4be180: mov    %eax,-0x14000(%rsp)
  0x000000010c4be187: push   %rbp
  0x000000010c4be188: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.io.DataInputStream::readChar@-1 (line 362)

  0x000000010c4be18c: mov    %rsi,0x20(%rsp)
  0x000000010c4be191: mov    0xc(%rsi),%r11d    ;*getfield in
                                                ; - java.io.DataInputStream::readChar@1 (line 362)

  0x000000010c4be195: mov    0x8(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x000000010c4be831
  0x000000010c4be19a: cmp    $0xf8004d3a,%r10d  ;   {metadata('java/io/BufferedInputStream')}
  0x000000010c4be1a1: jne    0x000000010c4be3f5
  0x000000010c4be1a7: lea    (%r12,%r11,8),%r10  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be1ab: mov    %r10,0x10(%rsp)
  0x000000010c4be1b0: mov    (%r10),%rax
  0x000000010c4be1b3: mov    %rax,%r10
  0x000000010c4be1b6: and    $0x7,%r10
  0x000000010c4be1ba: mov    $0xf8004d3a,%r11d  ;   {metadata('java/io/BufferedInputStream')}
  0x000000010c4be1c0: shl    $0x3,%r11
  0x000000010c4be1c4: mov    %r11,0x18(%rsp)
  0x000000010c4be1c9: cmp    $0x5,%r10
  0x000000010c4be1cd: jne    0x000000010c4be417
  0x000000010c4be1d3: mov    0xa8(%r11),%r10
  0x000000010c4be1da: mov    %r10,%r11
  0x000000010c4be1dd: or     %r15,%r11
  0x000000010c4be1e0: mov    %r11,%r8
  0x000000010c4be1e3: xor    %rax,%r8
  0x000000010c4be1e6: test   $0xffffffffffffff87,%r8
  0x000000010c4be1ed: jne    0x000000010c4be48d  ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be1f3: mov    0x10(%rsp),%r10
  0x000000010c4be1f8: mov    0x14(%r10),%r10d
  0x000000010c4be1fc: mov    0x10(%rsp),%r11
  0x000000010c4be201: mov    0x10(%r11),%r8d
  0x000000010c4be205: cmp    %r8d,%r10d
  0x000000010c4be208: jge    0x000000010c4be32d  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be20e: mov    0x10(%rsp),%r10
  0x000000010c4be213: mov    0x20(%r10),%r11d   ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be217: mov    0xc(%r12,%r11,8),%r10d  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ; implicit exception: dispatches to 0x000000010c4be851
  0x000000010c4be21c: mov    0x10(%rsp),%r8
  0x000000010c4be221: mov    0x14(%r8),%ebp     ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be225: mov    %ebp,%r8d
  0x000000010c4be228: inc    %r8d
  0x000000010c4be22b: mov    0x10(%rsp),%r9
  0x000000010c4be230: mov    %r8d,0x14(%r9)     ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be234: cmp    %r10d,%ebp
  0x000000010c4be237: jae    0x000000010c4be3c1  ;*invokespecial getBufIfOpen
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be23d: lea    (%r12,%r11,8),%r10
  0x000000010c4be241: movslq %ebp,%r11
  0x000000010c4be244: movzbl 0x10(%r10,%r11,1),%r14d  ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be24a: mov    $0x7,%r10d
  0x000000010c4be250: and    (%r9),%r10
  0x000000010c4be253: cmp    $0x5,%r10
  0x000000010c4be257: jne    0x000000010c4be57f  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be25d: mov    0x20(%rsp),%r10
  0x000000010c4be262: mov    0xc(%r10),%ebp     ;*getfield in
                                                ; - java.io.DataInputStream::readChar@9 (line 363)

  0x000000010c4be266: mov    0x8(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x000000010c4be841
  0x000000010c4be26b: cmp    $0xf8004d3a,%r10d  ;   {metadata('java/io/BufferedInputStream')}
  0x000000010c4be272: jne    0x000000010c4be4c1
  0x000000010c4be278: lea    (%r12,%rbp,8),%r9  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be27c: mov    (%r9),%rax
  0x000000010c4be27f: mov    %rax,%r10
  0x000000010c4be282: and    $0x7,%r10
  0x000000010c4be286: cmp    $0x5,%r10
  0x000000010c4be28a: jne    0x000000010c4be4da
  0x000000010c4be290: mov    0x18(%rsp),%r10
  0x000000010c4be295: mov    0xa8(%r10),%r10
  0x000000010c4be29c: mov    %r10,%r11
  0x000000010c4be29f: or     %r15,%r11
  0x000000010c4be2a2: mov    %r11,%r8
  0x000000010c4be2a5: xor    %rax,%r8
  0x000000010c4be2a8: test   $0xffffffffffffff87,%r8
  0x000000010c4be2af: jne    0x000000010c4be550  ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be2b5: mov    0x14(%r9),%r10d
  0x000000010c4be2b9: mov    0x10(%r9),%r8d
  0x000000010c4be2bd: cmp    %r8d,%r10d
  0x000000010c4be2c0: jge    0x000000010c4be377  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be2c6: mov    0x20(%r9),%r11d    ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be2ca: mov    0xc(%r12,%r11,8),%r10d  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ; implicit exception: dispatches to 0x000000010c4be875
  0x000000010c4be2cf: mov    0x14(%r9),%ebp     ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be2d3: mov    %ebp,%r8d
  0x000000010c4be2d6: inc    %r8d
  0x000000010c4be2d9: mov    %r8d,0x14(%r9)     ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be2dd: cmp    %r10d,%ebp
  0x000000010c4be2e0: jae    0x000000010c4be3d5  ;*invokespecial getBufIfOpen
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be2e6: lea    (%r12,%r11,8),%r10
  0x000000010c4be2ea: movslq %ebp,%r11
  0x000000010c4be2ed: movzbl 0x10(%r10,%r11,1),%ebx  ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be2f3: mov    $0x7,%r10d
  0x000000010c4be2f9: and    (%r9),%r10
  0x000000010c4be2fc: cmp    $0x5,%r10
  0x000000010c4be300: jne    0x000000010c4be625  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be306: mov    %r14d,%ebp
  0x000000010c4be309: or     %ebx,%ebp          ;*ior  ; - java.io.DataInputStream::readChar@18 (line 364)

  0x000000010c4be30b: test   %ebp,%ebp
  0x000000010c4be30d: jl     0x000000010c4be6cb  ;*ifge
                                                ; - java.io.DataInputStream::readChar@19 (line 364)

  0x000000010c4be313: shl    $0x8,%r14d
  0x000000010c4be317: add    %ebx,%r14d
  0x000000010c4be31a: movzwl %r14w,%r14d        ;*i2c  ; - java.io.DataInputStream::readChar@38 (line 366)

  0x000000010c4be31e: mov    %r14d,%eax
  0x000000010c4be321: add    $0x40,%rsp
  0x000000010c4be325: pop    %rbp
  0x000000010c4be326: test   %eax,-0x219232c(%rip)        # 0x000000010a32c000
                                                ;   {poll_return}
  0x000000010c4be32c: retq   
  0x000000010c4be32d: mov    %r11,(%rsp)
  0x000000010c4be331: mov    0x20(%rsp),%rbp
  0x000000010c4be336: mov    %r11,%rsi
  0x000000010c4be339: xchg   %ax,%ax
  0x000000010c4be33b: callq  0x000000010c3ed020  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [32]=Oop off=480}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {optimized virtual_call}
  0x000000010c4be340: mov    (%rsp),%r10
  0x000000010c4be344: mov    0x10(%r10),%r11d
  0x000000010c4be348: mov    0x14(%r10),%r10d
  0x000000010c4be34c: cmp    %r11d,%r10d
  0x000000010c4be34f: jl     0x000000010c4be20e
  0x000000010c4be355: mov    $0x7,%r10d
  0x000000010c4be35b: mov    (%rsp),%r11
  0x000000010c4be35f: and    (%r11),%r10
  0x000000010c4be362: cmp    $0x5,%r10
  0x000000010c4be366: jne    0x000000010c4be6e5  ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be36c: mov    $0xffffffff,%r14d
  0x000000010c4be372: jmpq   0x000000010c4be25d
  0x000000010c4be377: mov    %r9,(%rsp)
  0x000000010c4be37b: mov    %r14d,%ebp
  0x000000010c4be37e: mov    %r9,%rsi
  0x000000010c4be381: xchg   %ax,%ax
  0x000000010c4be383: callq  0x000000010c3ed020  ; OopMap{[0]=Oop off=552}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {optimized virtual_call}
  0x000000010c4be388: mov    (%rsp),%r9
  0x000000010c4be38c: mov    0x10(%r9),%r11d
  0x000000010c4be390: mov    0x14(%r9),%r10d
  0x000000010c4be394: cmp    %r11d,%r10d
  0x000000010c4be397: jge    0x000000010c4be3a1  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be399: mov    %ebp,%r14d
  0x000000010c4be39c: jmpq   0x000000010c4be2c6
  0x000000010c4be3a1: mov    $0x7,%r10d
  0x000000010c4be3a7: and    (%r9),%r10
  0x000000010c4be3aa: cmp    $0x5,%r10
  0x000000010c4be3ae: jne    0x000000010c4be78b  ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be3b4: mov    $0xffffffff,%ebx
  0x000000010c4be3b9: mov    %ebp,%r14d
  0x000000010c4be3bc: jmpq   0x000000010c4be306
  0x000000010c4be3c1: mov    $0xffffffe4,%esi
  0x000000010c4be3c6: mov    %r11d,0x8(%rsp)
  0x000000010c4be3cb: callq  0x000000010c3ac1a0  ; OopMap{[8]=NarrowOop [16]=Oop [32]=Oop off=624}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be3d0: callq  0x000000010b887154  ;   {runtime_call}
  0x000000010c4be3d5: mov    $0xffffffe4,%esi
  0x000000010c4be3da: mov    %r14d,(%rsp)
  0x000000010c4be3de: mov    %r11d,0x4(%rsp)
  0x000000010c4be3e3: mov    %r9,0x8(%rsp)
  0x000000010c4be3e8: data32 xchg %ax,%ax
  0x000000010c4be3eb: callq  0x000000010c3ac1a0  ; OopMap{[4]=NarrowOop [8]=Oop off=656}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {runtime_call}
  0x000000010c4be3f0: callq  0x000000010b887154  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {runtime_call}
  0x000000010c4be3f5: mov    $0xffffffde,%esi
  0x000000010c4be3fa: mov    0x20(%rsp),%rbp
  0x000000010c4be3ff: mov    %r11d,(%rsp)
  0x000000010c4be403: callq  0x000000010c3ac1a0  ; OopMap{rbp=Oop [0]=NarrowOop off=680}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be408: callq  0x000000010b887154  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be40d: mov    0x10(%rsp),%r11
  0x000000010c4be412: lock cmpxchg %r10,(%r11)
  0x000000010c4be417: lea    0x30(%rsp),%rbx
  0x000000010c4be41c: mov    0x10(%rsp),%r11
  0x000000010c4be421: mov    (%r11),%rax
  0x000000010c4be424: test   $0x2,%rax
  0x000000010c4be42a: jne    0x000000010c4be450
  0x000000010c4be42c: or     $0x1,%rax
  0x000000010c4be430: mov    %rax,(%rbx)
  0x000000010c4be433: lock cmpxchg %rbx,(%r11)
  0x000000010c4be438: je     0x000000010c4be469
  0x000000010c4be43e: sub    %rsp,%rax
  0x000000010c4be441: and    $0xfffffffffffff007,%rax
  0x000000010c4be448: mov    %rax,(%rbx)
  0x000000010c4be44b: jmpq   0x000000010c4be469
  0x000000010c4be450: movq   $0x3,(%rbx)
  0x000000010c4be457: mov    %rax,%rbx
  0x000000010c4be45a: mov    0x16(%rbx),%rax
  0x000000010c4be45e: test   %rax,%rax
  0x000000010c4be461: jne    0x000000010c4be469
  0x000000010c4be463: lock cmpxchg %r15,0x16(%rbx)
  0x000000010c4be469: je     0x000000010c4be1f3
  0x000000010c4be46f: mov    0x10(%rsp),%rsi
  0x000000010c4be474: lea    0x30(%rsp),%rdx
  0x000000010c4be479: mov    0x20(%rsp),%rbp
  0x000000010c4be47e: mov    %rsi,0x8(%rsp)
  0x000000010c4be483: callq  0x000000010c4a5fe0  ; OopMap{rbp=Oop [8]=Oop [16]=Oop [32]=Oop off=808}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be488: jmpq   0x000000010c4be1f3
  0x000000010c4be48d: test   $0x7,%r8
  0x000000010c4be494: jne    0x000000010c4be40d
  0x000000010c4be49a: test   $0x300,%r8
  0x000000010c4be4a1: jne    0x000000010c4be4b0
  0x000000010c4be4a3: and    $0x37f,%rax
  0x000000010c4be4aa: mov    %rax,%r11
  0x000000010c4be4ad: or     %r15,%r11
  0x000000010c4be4b0: mov    0x10(%rsp),%r10
  0x000000010c4be4b5: lock cmpxchg %r11,(%r10)
  0x000000010c4be4ba: jne    0x000000010c4be46f
  0x000000010c4be4bc: jmpq   0x000000010c4be1f3
  0x000000010c4be4c1: mov    $0xffffffde,%esi
  0x000000010c4be4c6: mov    %r14d,(%rsp)
  0x000000010c4be4ca: nop
  0x000000010c4be4cb: callq  0x000000010c3ac1a0  ; OopMap{rbp=NarrowOop off=880}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {runtime_call}
  0x000000010c4be4d0: callq  0x000000010b887154  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {runtime_call}
  0x000000010c4be4d5: lock cmpxchg %r10,(%r9)
  0x000000010c4be4da: lea    0x30(%rsp),%rbx
  0x000000010c4be4df: mov    (%r9),%rax
  0x000000010c4be4e2: test   $0x2,%rax
  0x000000010c4be4e8: jne    0x000000010c4be50e
  0x000000010c4be4ea: or     $0x1,%rax
  0x000000010c4be4ee: mov    %rax,(%rbx)
  0x000000010c4be4f1: lock cmpxchg %rbx,(%r9)
  0x000000010c4be4f6: je     0x000000010c4be527
  0x000000010c4be4fc: sub    %rsp,%rax
  0x000000010c4be4ff: and    $0xfffffffffffff007,%rax
  0x000000010c4be506: mov    %rax,(%rbx)
  0x000000010c4be509: jmpq   0x000000010c4be527
  0x000000010c4be50e: movq   $0x3,(%rbx)
  0x000000010c4be515: mov    %rax,%rbx
  0x000000010c4be518: mov    0x16(%rbx),%rax
  0x000000010c4be51c: test   %rax,%rax
  0x000000010c4be51f: jne    0x000000010c4be527
  0x000000010c4be521: lock cmpxchg %r15,0x16(%rbx)
  0x000000010c4be527: je     0x000000010c4be2b5
  0x000000010c4be52d: mov    %r9,(%rsp)
  0x000000010c4be531: mov    %r14d,%ebp
  0x000000010c4be534: mov    %r9,%rsi
  0x000000010c4be537: lea    0x30(%rsp),%rdx
  0x000000010c4be53c: data32 xchg %ax,%ax
  0x000000010c4be53f: callq  0x000000010c4a5fe0  ; OopMap{[0]=Oop off=996}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {runtime_call}
  0x000000010c4be544: mov    %ebp,%r14d
  0x000000010c4be547: mov    (%rsp),%r9
  0x000000010c4be54b: jmpq   0x000000010c4be2b5
  0x000000010c4be550: test   $0x7,%r8
  0x000000010c4be557: jne    0x000000010c4be4d5
  0x000000010c4be55d: test   $0x300,%r8
  0x000000010c4be564: jne    0x000000010c4be573
  0x000000010c4be566: and    $0x37f,%rax
  0x000000010c4be56d: mov    %rax,%r11
  0x000000010c4be570: or     %r15,%r11
  0x000000010c4be573: lock cmpxchg %r11,(%r9)
  0x000000010c4be578: jne    0x000000010c4be52d
  0x000000010c4be57a: jmpq   0x000000010c4be2b5
  0x000000010c4be57f: lea    0x30(%rsp),%rax
  0x000000010c4be584: cmpq   $0x0,(%rax)
  0x000000010c4be58b: je     0x000000010c4be605
  0x000000010c4be591: mov    (%r9),%r10
  0x000000010c4be594: test   $0x2,%r10
  0x000000010c4be59b: je     0x000000010c4be5fd
  0x000000010c4be59d: mov    0x16(%r10),%rax
  0x000000010c4be5a1: xor    %r15,%rax
  0x000000010c4be5a4: or     0x26(%r10),%rax
  0x000000010c4be5a8: jne    0x000000010c4be605
  0x000000010c4be5aa: mov    0x36(%r10),%rax
  0x000000010c4be5ae: or     0x3e(%r10),%rax
  0x000000010c4be5b2: jne    0x000000010c4be5be
  0x000000010c4be5b4: movq   $0x0,0x16(%r10)
  0x000000010c4be5bc: jmp    0x000000010c4be605
  0x000000010c4be5be: cmpq   $0x0,0x46(%r10)
  0x000000010c4be5c6: je     0x000000010c4be5f1
  0x000000010c4be5c8: movq   $0x0,0x16(%r10)
  0x000000010c4be5d0: lock addl $0x0,(%rsp)
  0x000000010c4be5d5: cmpq   $0x0,0x46(%r10)
  0x000000010c4be5dd: jne    0x000000010c4be5f6
  0x000000010c4be5df: movabs $0x0,%rax
  0x000000010c4be5e9: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4be5ef: jne    0x000000010c4be5f6
  0x000000010c4be5f1: or     $0x1,%eax
  0x000000010c4be5f4: jmp    0x000000010c4be605
  0x000000010c4be5f6: test   $0x0,%eax
  0x000000010c4be5fb: jmp    0x000000010c4be605
  0x000000010c4be5fd: mov    (%rax),%r10
  0x000000010c4be600: lock cmpxchg %r10,(%r9)
  0x000000010c4be605: je     0x000000010c4be25d
  0x000000010c4be60b: mov    %r9,%rdi
  0x000000010c4be60e: lea    0x30(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be613: movabs $0x10b8e68c6,%r10
  0x000000010c4be61d: callq  *%r10              ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be620: jmpq   0x000000010c4be25d
  0x000000010c4be625: lea    0x30(%rsp),%rax
  0x000000010c4be62a: cmpq   $0x0,(%rax)
  0x000000010c4be631: je     0x000000010c4be6ab
  0x000000010c4be637: mov    (%r9),%r10
  0x000000010c4be63a: test   $0x2,%r10
  0x000000010c4be641: je     0x000000010c4be6a3
  0x000000010c4be643: mov    0x16(%r10),%rax
  0x000000010c4be647: xor    %r15,%rax
  0x000000010c4be64a: or     0x26(%r10),%rax
  0x000000010c4be64e: jne    0x000000010c4be6ab
  0x000000010c4be650: mov    0x36(%r10),%rax
  0x000000010c4be654: or     0x3e(%r10),%rax
  0x000000010c4be658: jne    0x000000010c4be664
  0x000000010c4be65a: movq   $0x0,0x16(%r10)
  0x000000010c4be662: jmp    0x000000010c4be6ab
  0x000000010c4be664: cmpq   $0x0,0x46(%r10)
  0x000000010c4be66c: je     0x000000010c4be697
  0x000000010c4be66e: movq   $0x0,0x16(%r10)
  0x000000010c4be676: lock addl $0x0,(%rsp)
  0x000000010c4be67b: cmpq   $0x0,0x46(%r10)
  0x000000010c4be683: jne    0x000000010c4be69c
  0x000000010c4be685: movabs $0x0,%rax
  0x000000010c4be68f: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4be695: jne    0x000000010c4be69c
  0x000000010c4be697: or     $0x1,%eax
  0x000000010c4be69a: jmp    0x000000010c4be6ab
  0x000000010c4be69c: test   $0x0,%eax
  0x000000010c4be6a1: jmp    0x000000010c4be6ab
  0x000000010c4be6a3: mov    (%rax),%r10
  0x000000010c4be6a6: lock cmpxchg %r10,(%r9)
  0x000000010c4be6ab: je     0x000000010c4be306
  0x000000010c4be6b1: mov    %r9,%rdi
  0x000000010c4be6b4: lea    0x30(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be6b9: movabs $0x10b8e68c6,%r10
  0x000000010c4be6c3: callq  *%r10              ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be6c6: jmpq   0x000000010c4be306  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be6cb: mov    $0xffffff65,%esi
  0x000000010c4be6d0: mov    %r14d,(%rsp)
  0x000000010c4be6d4: mov    %ebx,0x4(%rsp)
  0x000000010c4be6d8: data32 xchg %ax,%ax
  0x000000010c4be6db: callq  0x000000010c3ac1a0  ; OopMap{off=1408}
                                                ;*ifge
                                                ; - java.io.DataInputStream::readChar@19 (line 364)
                                                ;   {runtime_call}
  0x000000010c4be6e0: callq  0x000000010b887154  ;*ifge
                                                ; - java.io.DataInputStream::readChar@19 (line 364)
                                                ;   {runtime_call}
  0x000000010c4be6e5: lea    0x30(%rsp),%rax
  0x000000010c4be6ea: cmpq   $0x0,(%rax)
  0x000000010c4be6f1: je     0x000000010c4be76b
  0x000000010c4be6f7: mov    (%r11),%r10
  0x000000010c4be6fa: test   $0x2,%r10
  0x000000010c4be701: je     0x000000010c4be763
  0x000000010c4be703: mov    0x16(%r10),%rax
  0x000000010c4be707: xor    %r15,%rax
  0x000000010c4be70a: or     0x26(%r10),%rax
  0x000000010c4be70e: jne    0x000000010c4be76b
  0x000000010c4be710: mov    0x36(%r10),%rax
  0x000000010c4be714: or     0x3e(%r10),%rax
  0x000000010c4be718: jne    0x000000010c4be724
  0x000000010c4be71a: movq   $0x0,0x16(%r10)
  0x000000010c4be722: jmp    0x000000010c4be76b
  0x000000010c4be724: cmpq   $0x0,0x46(%r10)
  0x000000010c4be72c: je     0x000000010c4be757
  0x000000010c4be72e: movq   $0x0,0x16(%r10)
  0x000000010c4be736: lock addl $0x0,(%rsp)
  0x000000010c4be73b: cmpq   $0x0,0x46(%r10)
  0x000000010c4be743: jne    0x000000010c4be75c
  0x000000010c4be745: movabs $0x0,%rax
  0x000000010c4be74f: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4be755: jne    0x000000010c4be75c
  0x000000010c4be757: or     $0x1,%eax
  0x000000010c4be75a: jmp    0x000000010c4be76b
  0x000000010c4be75c: test   $0x0,%eax
  0x000000010c4be761: jmp    0x000000010c4be76b
  0x000000010c4be763: mov    (%rax),%r10
  0x000000010c4be766: lock cmpxchg %r10,(%r11)
  0x000000010c4be76b: je     0x000000010c4be36c
  0x000000010c4be771: mov    %r11,%rdi
  0x000000010c4be774: lea    0x30(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be779: movabs $0x10b8e68c6,%r10
  0x000000010c4be783: callq  *%r10              ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be786: jmpq   0x000000010c4be36c
  0x000000010c4be78b: lea    0x30(%rsp),%rax
  0x000000010c4be790: cmpq   $0x0,(%rax)
  0x000000010c4be797: je     0x000000010c4be811
  0x000000010c4be79d: mov    (%r9),%r10
  0x000000010c4be7a0: test   $0x2,%r10
  0x000000010c4be7a7: je     0x000000010c4be809
  0x000000010c4be7a9: mov    0x16(%r10),%rax
  0x000000010c4be7ad: xor    %r15,%rax
  0x000000010c4be7b0: or     0x26(%r10),%rax
  0x000000010c4be7b4: jne    0x000000010c4be811
  0x000000010c4be7b6: mov    0x36(%r10),%rax
  0x000000010c4be7ba: or     0x3e(%r10),%rax
  0x000000010c4be7be: jne    0x000000010c4be7ca
  0x000000010c4be7c0: movq   $0x0,0x16(%r10)
  0x000000010c4be7c8: jmp    0x000000010c4be811
  0x000000010c4be7ca: cmpq   $0x0,0x46(%r10)
  0x000000010c4be7d2: je     0x000000010c4be7fd
  0x000000010c4be7d4: movq   $0x0,0x16(%r10)
  0x000000010c4be7dc: lock addl $0x0,(%rsp)
  0x000000010c4be7e1: cmpq   $0x0,0x46(%r10)
  0x000000010c4be7e9: jne    0x000000010c4be802
  0x000000010c4be7eb: movabs $0x0,%rax
  0x000000010c4be7f5: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4be7fb: jne    0x000000010c4be802
  0x000000010c4be7fd: or     $0x1,%eax
  0x000000010c4be800: jmp    0x000000010c4be811
  0x000000010c4be802: test   $0x0,%eax
  0x000000010c4be807: jmp    0x000000010c4be811
  0x000000010c4be809: mov    (%rax),%r10
  0x000000010c4be80c: lock cmpxchg %r10,(%r9)
  0x000000010c4be811: je     0x000000010c4be3b4
  0x000000010c4be817: mov    %r9,%rdi
  0x000000010c4be81a: lea    0x30(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be81f: movabs $0x10b8e68c6,%r10
  0x000000010c4be829: callq  *%r10              ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be82c: jmpq   0x000000010c4be3b4
  0x000000010c4be831: mov    $0xfffffff6,%esi
  0x000000010c4be836: nop
  0x000000010c4be837: callq  0x000000010c3ac1a0  ; OopMap{off=1756}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be83c: callq  0x000000010b887154  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be841: mov    $0xfffffff6,%esi
  0x000000010c4be846: nop
  0x000000010c4be847: callq  0x000000010c3ac1a0  ; OopMap{off=1772}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {runtime_call}
  0x000000010c4be84c: callq  0x000000010b887154  ;*invokevirtual read
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {runtime_call}
  0x000000010c4be851: mov    $0xffffff65,%esi
  0x000000010c4be856: mov    0x20(%rsp),%rbp
  0x000000010c4be85b: rex.W pushq 0x10(%rsp)
  0x000000010c4be860: rex.W popq (%rsp)
  0x000000010c4be864: mov    %r11d,0x14(%rsp)
  0x000000010c4be869: xchg   %ax,%ax
  0x000000010c4be86b: callq  0x000000010c3ac1a0  ; OopMap{rbp=Oop [0]=Oop [20]=NarrowOop off=1808}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be870: callq  0x000000010b887154  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be875: mov    $0xffffff65,%esi
  0x000000010c4be87a: mov    %r14d,%ebp
  0x000000010c4be87d: mov    %r9,0x8(%rsp)
  0x000000010c4be882: mov    %r11d,0x14(%rsp)
  0x000000010c4be887: callq  0x000000010c3ac1a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1836}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)
                                                ;   {runtime_call}
  0x000000010c4be88c: callq  0x000000010b887154  ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)
                                                ;   {runtime_call}
  0x000000010c4be891: mov    %rax,%rbx
  0x000000010c4be894: mov    (%rsp),%r11
  0x000000010c4be898: mov    $0x7,%r10d
  0x000000010c4be89e: and    (%r11),%r10
  0x000000010c4be8a1: cmp    $0x5,%r10
  0x000000010c4be8a5: jne    0x000000010c4be8d3  ;*synchronization entry
                                                ; - java.io.DataInputStream::readChar@-1 (line 362)

  0x000000010c4be8a7: mov    %rbx,%rsi
  0x000000010c4be8aa: jmp    0x000000010c4be8c9  ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4be8ac: mov    %rax,%rbx
  0x000000010c4be8af: mov    (%rsp),%r11
  0x000000010c4be8b3: mov    $0x7,%r10d
  0x000000010c4be8b9: and    (%r11),%r10
  0x000000010c4be8bc: cmp    $0x5,%r10
  0x000000010c4be8c0: jne    0x000000010c4be979
  0x000000010c4be8c6: mov    %rbx,%rsi          ;*synchronization entry
                                                ; - java.io.DataInputStream::readChar@-1 (line 362)

  0x000000010c4be8c9: add    $0x40,%rsp
  0x000000010c4be8cd: pop    %rbp
  0x000000010c4be8ce: jmpq   0x000000010c4a5aa0  ;   {runtime_call}
  0x000000010c4be8d3: lea    0x30(%rsp),%rax
  0x000000010c4be8d8: cmpq   $0x0,(%rax)
  0x000000010c4be8df: je     0x000000010c4be959
  0x000000010c4be8e5: mov    (%r11),%r10
  0x000000010c4be8e8: test   $0x2,%r10
  0x000000010c4be8ef: je     0x000000010c4be951
  0x000000010c4be8f1: mov    0x16(%r10),%rax
  0x000000010c4be8f5: xor    %r15,%rax
  0x000000010c4be8f8: or     0x26(%r10),%rax
  0x000000010c4be8fc: jne    0x000000010c4be959
  0x000000010c4be8fe: mov    0x36(%r10),%rax
  0x000000010c4be902: or     0x3e(%r10),%rax
  0x000000010c4be906: jne    0x000000010c4be912
  0x000000010c4be908: movq   $0x0,0x16(%r10)
  0x000000010c4be910: jmp    0x000000010c4be959
  0x000000010c4be912: cmpq   $0x0,0x46(%r10)
  0x000000010c4be91a: je     0x000000010c4be945
  0x000000010c4be91c: movq   $0x0,0x16(%r10)
  0x000000010c4be924: lock addl $0x0,(%rsp)
  0x000000010c4be929: cmpq   $0x0,0x46(%r10)
  0x000000010c4be931: jne    0x000000010c4be94a
  0x000000010c4be933: movabs $0x0,%rax
  0x000000010c4be93d: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4be943: jne    0x000000010c4be94a
  0x000000010c4be945: or     $0x1,%eax
  0x000000010c4be948: jmp    0x000000010c4be959
  0x000000010c4be94a: test   $0x0,%eax
  0x000000010c4be94f: jmp    0x000000010c4be959
  0x000000010c4be951: mov    (%rax),%r10
  0x000000010c4be954: lock cmpxchg %r10,(%r11)
  0x000000010c4be959: je     0x000000010c4be8a7
  0x000000010c4be95f: mov    %r11,%rdi
  0x000000010c4be962: lea    0x30(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@4 (line 362)

  0x000000010c4be967: movabs $0x10b8e68c6,%r10
  0x000000010c4be971: callq  *%r10              ;*synchronization entry
                                                ; - java.io.DataInputStream::readChar@-1 (line 362)

  0x000000010c4be974: jmpq   0x000000010c4be8a7
  0x000000010c4be979: lea    0x30(%rsp),%rax
  0x000000010c4be97e: cmpq   $0x0,(%rax)
  0x000000010c4be985: je     0x000000010c4be9ff
  0x000000010c4be98b: mov    (%r11),%r10
  0x000000010c4be98e: test   $0x2,%r10
  0x000000010c4be995: je     0x000000010c4be9f7
  0x000000010c4be997: mov    0x16(%r10),%rax
  0x000000010c4be99b: xor    %r15,%rax
  0x000000010c4be99e: or     0x26(%r10),%rax
  0x000000010c4be9a2: jne    0x000000010c4be9ff
  0x000000010c4be9a4: mov    0x36(%r10),%rax
  0x000000010c4be9a8: or     0x3e(%r10),%rax
  0x000000010c4be9ac: jne    0x000000010c4be9b8
  0x000000010c4be9ae: movq   $0x0,0x16(%r10)
  0x000000010c4be9b6: jmp    0x000000010c4be9ff
  0x000000010c4be9b8: cmpq   $0x0,0x46(%r10)
  0x000000010c4be9c0: je     0x000000010c4be9eb
  0x000000010c4be9c2: movq   $0x0,0x16(%r10)
  0x000000010c4be9ca: lock addl $0x0,(%rsp)
  0x000000010c4be9cf: cmpq   $0x0,0x46(%r10)
  0x000000010c4be9d7: jne    0x000000010c4be9f0
  0x000000010c4be9d9: movabs $0x0,%rax
  0x000000010c4be9e3: lock cmpxchg %r15,0x16(%r10)
  0x000000010c4be9e9: jne    0x000000010c4be9f0
  0x000000010c4be9eb: or     $0x1,%eax
  0x000000010c4be9ee: jmp    0x000000010c4be9ff
  0x000000010c4be9f0: test   $0x0,%eax
  0x000000010c4be9f5: jmp    0x000000010c4be9ff
  0x000000010c4be9f7: mov    (%rax),%r10
  0x000000010c4be9fa: lock cmpxchg %r10,(%r11)
  0x000000010c4be9ff: je     0x000000010c4be8c6
  0x000000010c4bea05: mov    %r11,%rdi
  0x000000010c4bea08: lea    0x30(%rsp),%rsi    ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4bea0d: movabs $0x10b8e68c6,%r10
  0x000000010c4bea17: callq  *%r10              ;*synchronization entry
                                                ; - java.io.DataInputStream::readChar@-1 (line 362)

  0x000000010c4bea1a: jmpq   0x000000010c4be8c6  ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)
                                                ; - java.io.DataInputStream::readChar@12 (line 363)

  0x000000010c4bea1f: hlt    
[Stub Code]
  0x000000010c4bea20: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010c4bea2a: jmpq   0x000000010c4bea2a  ;   {runtime_call}
  0x000000010c4bea2f: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4bea39: jmpq   0x000000010c4bea39  ;   {runtime_call}
[Exception Handler]
  0x000000010c4bea3e: jmpq   0x000000010c413760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010c4bea43: callq  0x000000010c4bea48
  0x000000010c4bea48: subq   $0x5,(%rsp)
  0x000000010c4bea4d: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bea52: hlt    
  0x000000010c4bea53: hlt    
  0x000000010c4bea54: hlt    
  0x000000010c4bea55: hlt    
  0x000000010c4bea56: hlt    
  0x000000010c4bea57: hlt    
Decoding compiled method 0x000000010c4bdc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc1db0} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010c4bdd60: mov    0x8(%rsi),%r10d
  0x000000010c4bdd64: shl    $0x3,%r10
  0x000000010c4bdd68: cmp    %r10,%rax
  0x000000010c4bdd6b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4bdd71: data32 xchg %ax,%ax
  0x000000010c4bdd74: nopl   0x0(%rax,%rax,1)
  0x000000010c4bdd7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4bdd80: mov    %eax,-0x14000(%rsp)
  0x000000010c4bdd87: push   %rbp
  0x000000010c4bdd88: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000010c4bdd8c: test   %edx,%edx
  0x000000010c4bdd8e: jl     0x000000010c4bddcd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000010c4bdd90: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010c4bdd94: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x000000010c4bddfd
  0x000000010c4bdd99: cmp    %ebp,%edx
  0x000000010c4bdd9b: jge    0x000000010c4bdde5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010c4bdd9d: cmp    %ebp,%edx
  0x000000010c4bdd9f: jae    0x000000010c4bddb7
  0x000000010c4bdda1: shl    $0x3,%r10
  0x000000010c4bdda5: movzwl 0x10(%r10,%rdx,2),%eax
  0x000000010c4bddab: add    $0x20,%rsp
  0x000000010c4bddaf: pop    %rbp
  0x000000010c4bddb0: test   %eax,-0x2191db6(%rip)        # 0x000000010a32c000
                                                ;   {poll_return}
  0x000000010c4bddb6: retq   
  0x000000010c4bddb7: mov    $0xffffffe4,%esi
  0x000000010c4bddbc: mov    %edx,%ebp
  0x000000010c4bddbe: mov    %r10d,(%rsp)
  0x000000010c4bddc2: nop
  0x000000010c4bddc3: callq  0x000000010c3ac1a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010c4bddc8: callq  0x000000010b887154  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010c4bddcd: mov    %rsi,%rbp
  0x000000010c4bddd0: mov    %edx,0x4(%rsp)
  0x000000010c4bddd4: mov    $0xffffff65,%esi
  0x000000010c4bddd9: xchg   %ax,%ax
  0x000000010c4bdddb: callq  0x000000010c3ac1a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010c4bdde0: callq  0x000000010b887154  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010c4bdde5: mov    %rsi,(%rsp)
  0x000000010c4bdde9: mov    %edx,0xc(%rsp)
  0x000000010c4bdded: mov    $0xffffff65,%esi
  0x000000010c4bddf2: nop
  0x000000010c4bddf3: callq  0x000000010c3ac1a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010c4bddf8: callq  0x000000010b887154  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010c4bddfd: mov    $0xfffffff6,%esi
  0x000000010c4bde02: nop
  0x000000010c4bde03: callq  0x000000010c3ac1a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010c4bde08: callq  0x000000010b887154  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010c4bde0d: hlt    
  0x000000010c4bde0e: hlt    
  0x000000010c4bde0f: hlt    
  0x000000010c4bde10: hlt    
  0x000000010c4bde11: hlt    
  0x000000010c4bde12: hlt    
  0x000000010c4bde13: hlt    
  0x000000010c4bde14: hlt    
  0x000000010c4bde15: hlt    
  0x000000010c4bde16: hlt    
  0x000000010c4bde17: hlt    
  0x000000010c4bde18: hlt    
  0x000000010c4bde19: hlt    
  0x000000010c4bde1a: hlt    
  0x000000010c4bde1b: hlt    
  0x000000010c4bde1c: hlt    
  0x000000010c4bde1d: hlt    
  0x000000010c4bde1e: hlt    
  0x000000010c4bde1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4bde20: jmpq   0x000000010c413760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010c4bde25: callq  0x000000010c4bde2a
  0x000000010c4bde2a: subq   $0x5,(%rsp)
  0x000000010c4bde2f: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4bde34: hlt    
  0x000000010c4bde35: hlt    
  0x000000010c4bde36: hlt    
  0x000000010c4bde37: hlt    
Decoding compiled method 0x000000010c4c1950:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = '[C'
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x000000010c4c1b00: mov    0x8(%rsi),%r10d
  0x000000010c4c1b04: shl    $0x3,%r10
  0x000000010c4c1b08: cmp    %rax,%r10
  0x000000010c4c1b0b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c1b11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c1b1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c1b20: mov    %eax,-0x14000(%rsp)
  0x000000010c4c1b27: push   %rbp
  0x000000010c4c1b28: sub    $0x60,%rsp
  0x000000010c4c1b2c: mov    %rdx,%rdi
  0x000000010c4c1b2f: movabs $0x124f2ec50,%rdx  ;   {metadata(method data for {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1b39: mov    0xdc(%rdx),%ebx
  0x000000010c4c1b3f: add    $0x8,%ebx
  0x000000010c4c1b42: mov    %ebx,0xdc(%rdx)
  0x000000010c4c1b48: movabs $0x124cc2208,%rdx  ;   {metadata({method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1b52: and    $0x1ff8,%ebx
  0x000000010c4c1b58: cmp    $0x0,%ebx
  0x000000010c4c1b5b: je     0x000000010c4c1d86  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x000000010c4c1b61: cmp    $0x0,%edi
  0x000000010c4c1b64: movabs $0x124f2ec50,%rdx  ;   {metadata(method data for {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1b6e: movabs $0x108,%rbx
  0x000000010c4c1b78: jge    0x000000010c4c1b88
  0x000000010c4c1b7e: movabs $0x118,%rbx
  0x000000010c4c1b88: mov    (%rdx,%rbx,1),%rax
  0x000000010c4c1b8c: lea    0x1(%rax),%rax
  0x000000010c4c1b90: mov    %rax,(%rdx,%rbx,1)
  0x000000010c4c1b94: jl     0x000000010c4c1d46  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x000000010c4c1b9a: mov    0xc(%rsi),%esi
  0x000000010c4c1b9d: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000010c4c1ba1: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x000000010c4c1d9d
  0x000000010c4c1ba4: cmp    %edx,%ecx
  0x000000010c4c1ba6: movabs $0x124f2ec50,%rdx  ;   {metadata(method data for {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1bb0: movabs $0x138,%rbx
  0x000000010c4c1bba: jle    0x000000010c4c1bca
  0x000000010c4c1bc0: movabs $0x148,%rbx
  0x000000010c4c1bca: mov    (%rdx,%rbx,1),%rax
  0x000000010c4c1bce: lea    0x1(%rax),%rax
  0x000000010c4c1bd2: mov    %rax,(%rdx,%rbx,1)
  0x000000010c4c1bd6: jg     0x000000010c4c1d06  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000010c4c1bdc: cmp    %ecx,%edi
  0x000000010c4c1bde: movabs $0x124f2ec50,%rdx  ;   {metadata(method data for {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1be8: movabs $0x168,%rbx
  0x000000010c4c1bf2: jle    0x000000010c4c1c02
  0x000000010c4c1bf8: movabs $0x178,%rbx
  0x000000010c4c1c02: mov    (%rdx,%rbx,1),%rax
  0x000000010c4c1c06: lea    0x1(%rax),%rax
  0x000000010c4c1c0a: mov    %rax,(%rdx,%rbx,1)
  0x000000010c4c1c0e: jg     0x000000010c4c1cbc  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x000000010c4c1c14: movabs $0x124f2ec50,%rdx  ;   {metadata(method data for {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1c1e: addq   $0x1,0x198(%rdx)
  0x000000010c4c1c26: mov    %rcx,%rbx
  0x000000010c4c1c29: sub    %edi,%ebx
  0x000000010c4c1c2b: mov    %rdi,%rdx
  0x000000010c4c1c2e: mov    %r8,%rcx
  0x000000010c4c1c31: mov    %r9,%r8
  0x000000010c4c1c34: mov    %rbx,%r9
  0x000000010c4c1c37: test   %rcx,%rcx
  0x000000010c4c1c3a: je     0x000000010c4c1da2
  0x000000010c4c1c40: test   %edx,%edx
  0x000000010c4c1c42: jl     0x000000010c4c1da2
  0x000000010c4c1c48: test   %r8d,%r8d
  0x000000010c4c1c4b: jl     0x000000010c4c1da2
  0x000000010c4c1c51: lea    (%rdx,%r9,1),%rdi
  0x000000010c4c1c55: cmp    0xc(%rsi),%edi
  0x000000010c4c1c58: ja     0x000000010c4c1da2
  0x000000010c4c1c5e: lea    (%r8,%r9,1),%rdi
  0x000000010c4c1c62: cmp    0xc(%rcx),%edi
  0x000000010c4c1c65: ja     0x000000010c4c1da2
  0x000000010c4c1c6b: test   %r9d,%r9d
  0x000000010c4c1c6e: jl     0x000000010c4c1da2
  0x000000010c4c1c74: je     0x000000010c4c1cb0
  0x000000010c4c1c7a: movslq %edx,%rdx
  0x000000010c4c1c7d: movslq %r8d,%r8
  0x000000010c4c1c80: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010c4c1c85: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010c4c1c8a: mov    %r9,%rdx
  0x000000010c4c1c8d: test   $0xf,%esp
  0x000000010c4c1c93: je     0x000000010c4c1cab
  0x000000010c4c1c99: sub    $0x8,%rsp
  0x000000010c4c1c9d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x000000010c4c1ca2: add    $0x8,%rsp
  0x000000010c4c1ca6: jmpq   0x000000010c4c1cb0
  0x000000010c4c1cab: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010c4c1cb0: add    $0x60,%rsp
  0x000000010c4c1cb4: pop    %rbp
  0x000000010c4c1cb5: test   %eax,-0x2195bbb(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c1cbb: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x000000010c4c1cbc: nopl   0x0(%rax)
  0x000000010c4c1cc0: jmpq   0x000000010c4c1dc0  ;   {no_reloc}
  0x000000010c4c1cc5: add    %al,(%rax)
  0x000000010c4c1cc7: add    %al,(%rax)
  0x000000010c4c1cc9: add    %ch,%cl
  0x000000010c4c1ccb: sti    
  0x000000010c4c1ccc: add    %al,(%rax)
  0x000000010c4c1cce: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x000000010c4c1cd1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1cd4: push   %rax
  0x000000010c4c1cd5: in     (%dx),%al
  0x000000010c4c1cd6: repnz and $0x1,%al
  0x000000010c4c1cd9: add    %al,(%rax)
  0x000000010c4c1cdb: add    %cl,-0x7d(%rax)
  0x000000010c4c1cde: xchg   %cl,0x1000001(%rax)
  0x000000010c4c1ce4: sub    %edi,%ecx
  0x000000010c4c1ce6: mov    %rcx,%rdx
  0x000000010c4c1ce9: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)

  0x000000010c4c1cec: mov    %rax,0x38(%rsp)
  0x000000010c4c1cf1: nop
  0x000000010c4c1cf2: nop
  0x000000010c4c1cf3: nop
  0x000000010c4c1cf4: nop
  0x000000010c4c1cf5: nop
  0x000000010c4c1cf6: nop
  0x000000010c4c1cf7: callq  0x000000010c3ed020  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x000000010c4c1cfc: mov    0x38(%rsp),%rax
  0x000000010c4c1d01: jmpq   0x000000010c4c1e4e  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000000010c4c1d06: xchg   %ax,%ax
  0x000000010c4c1d08: jmpq   0x000000010c4c1de6  ;   {no_reloc}
  0x000000010c4c1d0d: add    %al,(%rax)
  0x000000010c4c1d0f: add    %al,(%rax)
  0x000000010c4c1d11: add    %ch,%cl
  0x000000010c4c1d13: flds   (%rax)
  0x000000010c4c1d15: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x000000010c4c1d17: mov    %rax,%rdx
  0x000000010c4c1d1a: movabs $0x124f2ec50,%rsi  ;   {metadata(method data for {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1d24: addq   $0x1,0x158(%rsi)
  0x000000010c4c1d2c: mov    %rcx,%rdx
  0x000000010c4c1d2f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)

  0x000000010c4c1d32: mov    %rax,0x40(%rsp)
  0x000000010c4c1d37: callq  0x000000010c3ed020  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x000000010c4c1d3c: mov    0x40(%rsp),%rax
  0x000000010c4c1d41: jmpq   0x000000010c4c1e4e  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000000010c4c1d46: xchg   %ax,%ax
  0x000000010c4c1d48: jmpq   0x000000010c4c1e0c  ;   {no_reloc}
  0x000000010c4c1d4d: add    %al,(%rax)
  0x000000010c4c1d4f: add    %al,(%rax)
  0x000000010c4c1d51: add    %ch,%cl
  0x000000010c4c1d53: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x000000010c4c1d58: mov    %eax,%edx
  0x000000010c4c1d5a: movabs $0x124f2ec50,%rsi  ;   {metadata(method data for {method} {0x0000000124cc2208} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010c4c1d64: addq   $0x1,0x128(%rsi)
  0x000000010c4c1d6c: mov    %rdi,%rdx
  0x000000010c4c1d6f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)

  0x000000010c4c1d72: mov    %rax,0x48(%rsp)
  0x000000010c4c1d77: callq  0x000000010c3ed020  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x000000010c4c1d7c: mov    0x48(%rsp),%rax
  0x000000010c4c1d81: jmpq   0x000000010c4c1e4e
  0x000000010c4c1d86: mov    %rdx,0x8(%rsp)
  0x000000010c4c1d8b: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c1d93: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x000000010c4c1d98: jmpq   0x000000010c4c1b61
  0x000000010c4c1d9d: callq  0x000000010c4a0a40  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000010c4c1da2: nop
  0x000000010c4c1da3: nop
  0x000000010c4c1da4: nop
  0x000000010c4c1da5: nop
  0x000000010c4c1da6: nop
  0x000000010c4c1da7: callq  0x000000010c3ed420  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x000000010c4c1dac: jmpq   0x000000010c4c1cb0
  0x000000010c4c1db1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4c1dbb: mov    $0xa050f00,%eax
  0x000000010c4c1dc0: callq  0x000000010c4a3f60  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000010c4c1dc5: jmpq   0x000000010c4c1cc0
  0x000000010c4c1dca: mov    %rdx,%rdx
  0x000000010c4c1dcd: callq  0x000000010c4a0ee0  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000010c4c1dd2: jmpq   0x000000010c4c1ccf
  0x000000010c4c1dd7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4c1de1: mov    $0xa050f00,%eax
  0x000000010c4c1de6: callq  0x000000010c4a3f60  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000010c4c1deb: jmpq   0x000000010c4c1d08
  0x000000010c4c1df0: mov    %rdx,%rdx
  0x000000010c4c1df3: callq  0x000000010c4a0ee0  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000010c4c1df8: jmpq   0x000000010c4c1d17
  0x000000010c4c1dfd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4c1e07: mov    $0xa050f00,%eax
  0x000000010c4c1e0c: callq  0x000000010c4a3f60  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010c4c1e11: jmpq   0x000000010c4c1d48
  0x000000010c4c1e16: mov    %rdx,%rdx
  0x000000010c4c1e19: callq  0x000000010c4a0ee0  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010c4c1e1e: jmpq   0x000000010c4c1d57
  0x000000010c4c1e23: nop
  0x000000010c4c1e24: nop
  0x000000010c4c1e25: mov    0x2a8(%r15),%rax
  0x000000010c4c1e2c: movabs $0x0,%r10
  0x000000010c4c1e36: mov    %r10,0x2a8(%r15)
  0x000000010c4c1e3d: movabs $0x0,%r10
  0x000000010c4c1e47: mov    %r10,0x2b0(%r15)
  0x000000010c4c1e4e: add    $0x60,%rsp
  0x000000010c4c1e52: pop    %rbp
  0x000000010c4c1e53: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c1e58: hlt    
  0x000000010c4c1e59: hlt    
  0x000000010c4c1e5a: hlt    
  0x000000010c4c1e5b: hlt    
  0x000000010c4c1e5c: hlt    
  0x000000010c4c1e5d: hlt    
  0x000000010c4c1e5e: hlt    
  0x000000010c4c1e5f: hlt    
[Stub Code]
  0x000000010c4c1e60: nop                       ;   {no_reloc}
  0x000000010c4c1e61: nop
  0x000000010c4c1e62: nop
  0x000000010c4c1e63: nop
  0x000000010c4c1e64: nop
  0x000000010c4c1e65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c1e6f: jmpq   0x000000010c4c1e6f  ;   {runtime_call}
  0x000000010c4c1e74: nop
  0x000000010c4c1e75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c1e7f: jmpq   0x000000010c4c1e7f  ;   {runtime_call}
  0x000000010c4c1e84: nop
  0x000000010c4c1e85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c1e8f: jmpq   0x000000010c4c1e8f  ;   {runtime_call}
  0x000000010c4c1e94: nop
  0x000000010c4c1e95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c1e9f: jmpq   0x000000010c4c1e9f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c1ea4: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c1ea9: mov    %rsp,-0x28(%rsp)
  0x000000010c4c1eae: sub    $0x80,%rsp
  0x000000010c4c1eb5: mov    %rax,0x78(%rsp)
  0x000000010c4c1eba: mov    %rcx,0x70(%rsp)
  0x000000010c4c1ebf: mov    %rdx,0x68(%rsp)
  0x000000010c4c1ec4: mov    %rbx,0x60(%rsp)
  0x000000010c4c1ec9: mov    %rbp,0x50(%rsp)
  0x000000010c4c1ece: mov    %rsi,0x48(%rsp)
  0x000000010c4c1ed3: mov    %rdi,0x40(%rsp)
  0x000000010c4c1ed8: mov    %r8,0x38(%rsp)
  0x000000010c4c1edd: mov    %r9,0x30(%rsp)
  0x000000010c4c1ee2: mov    %r10,0x28(%rsp)
  0x000000010c4c1ee7: mov    %r11,0x20(%rsp)
  0x000000010c4c1eec: mov    %r12,0x18(%rsp)
  0x000000010c4c1ef1: mov    %r13,0x10(%rsp)
  0x000000010c4c1ef6: mov    %r14,0x8(%rsp)
  0x000000010c4c1efb: mov    %r15,(%rsp)
  0x000000010c4c1eff: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c1f09: movabs $0x10c4c1ea9,%rsi  ;   {internal_word}
  0x000000010c4c1f13: mov    %rsp,%rdx
  0x000000010c4c1f16: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c1f1a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c1f1f: hlt    
[Deopt Handler Code]
  0x000000010c4c1f20: movabs $0x10c4c1f20,%r10  ;   {section_word}
  0x000000010c4c1f2a: push   %r10
  0x000000010c4c1f2c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c1f31: hlt    
  0x000000010c4c1f32: hlt    
  0x000000010c4c1f33: hlt    
  0x000000010c4c1f34: hlt    
  0x000000010c4c1f35: hlt    
  0x000000010c4c1f36: hlt    
  0x000000010c4c1f37: hlt    
Decoding compiled method 0x000000010c4c11d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010c4c1360: mov    0x8(%rsi),%r10d
  0x000000010c4c1364: shl    $0x3,%r10
  0x000000010c4c1368: cmp    %rax,%r10
  0x000000010c4c136b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c1371: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c137c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c1380: mov    %eax,-0x14000(%rsp)
  0x000000010c4c1387: push   %rbp
  0x000000010c4c1388: sub    $0x40,%rsp
  0x000000010c4c138c: movabs $0x124f2fe80,%rax  ;   {metadata(method data for {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c1396: mov    0xdc(%rax),%edi
  0x000000010c4c139c: add    $0x8,%edi
  0x000000010c4c139f: mov    %edi,0xdc(%rax)
  0x000000010c4c13a5: movabs $0x124cc33d0,%rax  ;   {metadata({method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c13af: and    $0x1ff8,%edi
  0x000000010c4c13b5: cmp    $0x0,%edi
  0x000000010c4c13b8: je     0x000000010c4c15b8  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x000000010c4c13be: cmp    $0x10000,%edx
  0x000000010c4c13c4: movabs $0x124f2fe80,%rax  ;   {metadata(method data for {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c13ce: movabs $0x108,%rdi
  0x000000010c4c13d8: jge    0x000000010c4c13e8
  0x000000010c4c13de: movabs $0x118,%rdi
  0x000000010c4c13e8: mov    (%rax,%rdi,1),%rbx
  0x000000010c4c13ec: lea    0x1(%rbx),%rbx
  0x000000010c4c13f0: mov    %rbx,(%rax,%rdi,1)
  0x000000010c4c13f4: jge    0x000000010c4c1591  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x000000010c4c13fa: mov    0xc(%rsi),%eax
  0x000000010c4c13fd: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x000000010c4c1401: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x000000010c4c15cf
  0x000000010c4c1404: dec    %esi
  0x000000010c4c1406: movabs $0x124f2fe80,%rdi  ;   {metadata(method data for {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c1410: addq   $0x1,0x128(%rdi)
  0x000000010c4c1418: movabs $0x124e86ce8,%rdi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c1422: mov    0xdc(%rdi),%ebx
  0x000000010c4c1428: add    $0x8,%ebx
  0x000000010c4c142b: mov    %ebx,0xdc(%rdi)
  0x000000010c4c1431: movabs $0x124db37a8,%rdi  ;   {metadata({method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c143b: and    $0x7ffff8,%ebx
  0x000000010c4c1441: cmp    $0x0,%ebx
  0x000000010c4c1444: je     0x000000010c4c15d4
  0x000000010c4c144a: cmp    %esi,%ecx
  0x000000010c4c144c: movabs $0x124e86ce8,%rdi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c1456: movabs $0x108,%rbx
  0x000000010c4c1460: jg     0x000000010c4c1470
  0x000000010c4c1466: movabs $0x118,%rbx
  0x000000010c4c1470: mov    (%rdi,%rbx,1),%r8
  0x000000010c4c1474: lea    0x1(%r8),%r8
  0x000000010c4c1478: mov    %r8,(%rdi,%rbx,1)
  0x000000010c4c147c: jg     0x000000010c4c1497  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000010c4c1482: movabs $0x124e86ce8,%rsi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c148c: incl   0x128(%rsi)
  0x000000010c4c1492: jmpq   0x000000010c4c1533  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000010c4c1497: mov    %rsi,%rcx
  0x000000010c4c149a: jmpq   0x000000010c4c1533  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000010c4c149f: nop
  0x000000010c4c14a0: movslq %ecx,%rsi
  0x000000010c4c14a3: cmp    0xc(%rax),%ecx
  0x000000010c4c14a6: jae    0x000000010c4c15eb
  0x000000010c4c14ac: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010c4c14b1: cmp    %edx,%esi
  0x000000010c4c14b3: movabs $0x124f2fe80,%rsi  ;   {metadata(method data for {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c14bd: movabs $0x158,%rdi
  0x000000010c4c14c7: jne    0x000000010c4c14d7
  0x000000010c4c14cd: movabs $0x168,%rdi
  0x000000010c4c14d7: mov    (%rsi,%rdi,1),%rbx
  0x000000010c4c14db: lea    0x1(%rbx),%rbx
  0x000000010c4c14df: mov    %rbx,(%rsi,%rdi,1)
  0x000000010c4c14e3: je     0x000000010c4c1571  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010c4c14e9: dec    %ecx
  0x000000010c4c14eb: movabs $0x124f2fe80,%rsi  ;   {metadata(method data for {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c14f5: mov    0xe0(%rsi),%edi
  0x000000010c4c14fb: add    $0x8,%edi
  0x000000010c4c14fe: mov    %edi,0xe0(%rsi)
  0x000000010c4c1504: movabs $0x124cc33d0,%rsi  ;   {metadata({method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c150e: and    $0xfff8,%edi
  0x000000010c4c1514: cmp    $0x0,%edi
  0x000000010c4c1517: je     0x000000010c4c15f4  ; OopMap{rax=Oop off=445}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x000000010c4c151d: test   %eax,-0x2195423(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4c1523: movabs $0x124f2fe80,%rsi  ;   {metadata(method data for {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c152d: incl   0x178(%rsi)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x000000010c4c1533: cmp    $0x0,%ecx
  0x000000010c4c1536: movabs $0x124f2fe80,%rsi  ;   {metadata(method data for {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c1540: movabs $0x138,%rdi
  0x000000010c4c154a: jl     0x000000010c4c155a
  0x000000010c4c1550: movabs $0x148,%rdi
  0x000000010c4c155a: mov    (%rsi,%rdi,1),%rbx
  0x000000010c4c155e: lea    0x1(%rbx),%rbx
  0x000000010c4c1562: mov    %rbx,(%rsi,%rdi,1)
  0x000000010c4c1566: jl     0x000000010c4c1580
  0x000000010c4c156c: jmpq   0x000000010c4c14a0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010c4c1571: mov    %rcx,%rax
  0x000000010c4c1574: add    $0x40,%rsp
  0x000000010c4c1578: pop    %rbp
  0x000000010c4c1579: test   %eax,-0x219547f(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c157f: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x000000010c4c1580: mov    $0xffffffff,%eax
  0x000000010c4c1585: add    $0x40,%rsp
  0x000000010c4c1589: pop    %rbp
  0x000000010c4c158a: test   %eax,-0x2195490(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c1590: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x000000010c4c1591: mov    %rsi,%rdi
  0x000000010c4c1594: movabs $0x124f2fe80,%rbx  ;   {metadata(method data for {method} {0x0000000124cc33d0} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010c4c159e: addq   $0x1,0x190(%rbx)
  0x000000010c4c15a6: nop
  0x000000010c4c15a7: callq  0x000000010c3ed020  ; OopMap{off=588}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x000000010c4c15ac: add    $0x40,%rsp
  0x000000010c4c15b0: pop    %rbp
  0x000000010c4c15b1: test   %eax,-0x21954b7(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c15b7: retq   
  0x000000010c4c15b8: mov    %rax,0x8(%rsp)
  0x000000010c4c15bd: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c15c5: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop off=618}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x000000010c4c15ca: jmpq   0x000000010c4c13be
  0x000000010c4c15cf: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=628}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x000000010c4c15d4: mov    %rdi,0x8(%rsp)
  0x000000010c4c15d9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c15e1: callq  0x000000010c4a4f60  ; OopMap{rax=Oop off=646}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x000000010c4c15e6: jmpq   0x000000010c4c144a
  0x000000010c4c15eb: mov    %rcx,(%rsp)
  0x000000010c4c15ef: callq  0x000000010c413000  ; OopMap{rax=Oop off=660}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x000000010c4c15f4: mov    %rsi,0x8(%rsp)
  0x000000010c4c15f9: movq   $0x28,(%rsp)
  0x000000010c4c1601: callq  0x000000010c4a4f60  ; OopMap{rax=Oop off=678}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x000000010c4c1606: jmpq   0x000000010c4c151d
  0x000000010c4c160b: nop
  0x000000010c4c160c: nop
  0x000000010c4c160d: mov    0x2a8(%r15),%rax
  0x000000010c4c1614: movabs $0x0,%r10
  0x000000010c4c161e: mov    %r10,0x2a8(%r15)
  0x000000010c4c1625: movabs $0x0,%r10
  0x000000010c4c162f: mov    %r10,0x2b0(%r15)
  0x000000010c4c1636: add    $0x40,%rsp
  0x000000010c4c163a: pop    %rbp
  0x000000010c4c163b: jmpq   0x000000010c4134a0  ;   {runtime_call}
[Stub Code]
  0x000000010c4c1640: nop                       ;   {no_reloc}
  0x000000010c4c1641: nop
  0x000000010c4c1642: nop
  0x000000010c4c1643: nop
  0x000000010c4c1644: nop
  0x000000010c4c1645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c164f: jmpq   0x000000010c4c164f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c1654: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c1659: mov    %rsp,-0x28(%rsp)
  0x000000010c4c165e: sub    $0x80,%rsp
  0x000000010c4c1665: mov    %rax,0x78(%rsp)
  0x000000010c4c166a: mov    %rcx,0x70(%rsp)
  0x000000010c4c166f: mov    %rdx,0x68(%rsp)
  0x000000010c4c1674: mov    %rbx,0x60(%rsp)
  0x000000010c4c1679: mov    %rbp,0x50(%rsp)
  0x000000010c4c167e: mov    %rsi,0x48(%rsp)
  0x000000010c4c1683: mov    %rdi,0x40(%rsp)
  0x000000010c4c1688: mov    %r8,0x38(%rsp)
  0x000000010c4c168d: mov    %r9,0x30(%rsp)
  0x000000010c4c1692: mov    %r10,0x28(%rsp)
  0x000000010c4c1697: mov    %r11,0x20(%rsp)
  0x000000010c4c169c: mov    %r12,0x18(%rsp)
  0x000000010c4c16a1: mov    %r13,0x10(%rsp)
  0x000000010c4c16a6: mov    %r14,0x8(%rsp)
  0x000000010c4c16ab: mov    %r15,(%rsp)
  0x000000010c4c16af: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c16b9: movabs $0x10c4c1659,%rsi  ;   {internal_word}
  0x000000010c4c16c3: mov    %rsp,%rdx
  0x000000010c4c16c6: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c16ca: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c16cf: hlt    
[Deopt Handler Code]
  0x000000010c4c16d0: movabs $0x10c4c16d0,%r10  ;   {section_word}
  0x000000010c4c16da: push   %r10
  0x000000010c4c16dc: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c16e1: hlt    
  0x000000010c4c16e2: hlt    
  0x000000010c4c16e3: hlt    
  0x000000010c4c16e4: hlt    
  0x000000010c4c16e5: hlt    
  0x000000010c4c16e6: hlt    
  0x000000010c4c16e7: hlt    
Decoding compiled method 0x000000010c4c6690:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010c4c6800: mov    0x8(%rsi),%r10d
  0x000000010c4c6804: shl    $0x3,%r10
  0x000000010c4c6808: cmp    %rax,%r10
  0x000000010c4c680b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c6811: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c681c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c6820: mov    %eax,-0x14000(%rsp)
  0x000000010c4c6827: push   %rbp
  0x000000010c4c6828: sub    $0x30,%rsp
  0x000000010c4c682c: movabs $0x124f308b0,%rax  ;   {metadata(method data for {method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010c4c6836: mov    0xdc(%rax),%edi
  0x000000010c4c683c: add    $0x8,%edi
  0x000000010c4c683f: mov    %edi,0xdc(%rax)
  0x000000010c4c6845: movabs $0x124cc2df8,%rax  ;   {metadata({method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010c4c684f: and    $0x1ff8,%edi
  0x000000010c4c6855: cmp    $0x0,%edi
  0x000000010c4c6858: je     0x000000010c4c6a0d  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x000000010c4c685e: mov    0xc(%rsi),%eax
  0x000000010c4c6861: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x000000010c4c6865: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x000000010c4c6a24
  0x000000010c4c6868: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x000000010c4c686c: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x000000010c4c6a29
  0x000000010c4c686f: cmp    $0x0,%ecx
  0x000000010c4c6872: movabs $0x124f308b0,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010c4c687c: movabs $0x108,%rdx
  0x000000010c4c6886: jl     0x000000010c4c6896
  0x000000010c4c688c: movabs $0x118,%rdx
  0x000000010c4c6896: mov    (%rbx,%rdx,1),%r8
  0x000000010c4c689a: lea    0x1(%r8),%r8
  0x000000010c4c689e: mov    %r8,(%rbx,%rdx,1)
  0x000000010c4c68a2: jl     0x000000010c4c69da  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x000000010c4c68a8: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000010c4c6a2e
  0x000000010c4c68ab: sub    %edi,%ebx
  0x000000010c4c68ad: cmp    %ebx,%ecx
  0x000000010c4c68af: movabs $0x124f308b0,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010c4c68b9: movabs $0x128,%rdx
  0x000000010c4c68c3: jle    0x000000010c4c68d3
  0x000000010c4c68c9: movabs $0x138,%rdx
  0x000000010c4c68d3: mov    (%rbx,%rdx,1),%r8
  0x000000010c4c68d7: lea    0x1(%r8),%r8
  0x000000010c4c68db: mov    %r8,(%rbx,%rdx,1)
  0x000000010c4c68df: jg     0x000000010c4c69da  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x000000010c4c68e5: mov    $0x0,%ebx
  0x000000010c4c68ea: jmpq   0x000000010c4c699a  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010c4c68ef: nop
  0x000000010c4c68f0: mov    %rcx,%rdx
  0x000000010c4c68f3: inc    %edx
  0x000000010c4c68f5: movslq %ecx,%r8
  0x000000010c4c68f8: cmp    0xc(%rax),%ecx
  0x000000010c4c68fb: jae    0x000000010c4c6a33
  0x000000010c4c6901: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x000000010c4c6907: mov    %rbx,%r8
  0x000000010c4c690a: inc    %r8d
  0x000000010c4c690d: movslq %ebx,%r9
  0x000000010c4c6910: cmp    0xc(%rsi),%ebx
  0x000000010c4c6913: jae    0x000000010c4c6a3c
  0x000000010c4c6919: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x000000010c4c691f: movabs $0x124f308b0,%r9   ;   {metadata(method data for {method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010c4c6929: mov    0xe0(%r9),%r11d
  0x000000010c4c6930: add    $0x8,%r11d
  0x000000010c4c6934: mov    %r11d,0xe0(%r9)
  0x000000010c4c693b: movabs $0x124cc2df8,%r9   ;   {metadata({method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010c4c6945: and    $0xfff8,%r11d
  0x000000010c4c694c: cmp    $0x0,%r11d
  0x000000010c4c6950: je     0x000000010c4c6a45  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010c4c6956: test   %eax,-0x219a85c(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4c695c: cmp    %ebx,%ecx
  0x000000010c4c695e: movabs $0x124f308b0,%rbx  ;   {metadata(method data for {method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010c4c6968: movabs $0x168,%rcx
  0x000000010c4c6972: je     0x000000010c4c6982
  0x000000010c4c6978: movabs $0x178,%rcx
  0x000000010c4c6982: mov    (%rbx,%rcx,1),%r9
  0x000000010c4c6986: lea    0x1(%r9),%r9
  0x000000010c4c698a: mov    %r9,(%rbx,%rcx,1)
  0x000000010c4c698e: jne    0x000000010c4c69eb  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010c4c6994: mov    %r8,%rbx
  0x000000010c4c6997: mov    %rdx,%rcx          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010c4c699a: dec    %edi
  0x000000010c4c699c: cmp    $0x0,%edi
  0x000000010c4c699f: movabs $0x124f308b0,%rdx  ;   {metadata(method data for {method} {0x0000000124cc2df8} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010c4c69a9: movabs $0x148,%r8
  0x000000010c4c69b3: jl     0x000000010c4c69c3
  0x000000010c4c69b9: movabs $0x158,%r8
  0x000000010c4c69c3: mov    (%rdx,%r8,1),%r9
  0x000000010c4c69c7: lea    0x1(%r9),%r9
  0x000000010c4c69cb: mov    %r9,(%rdx,%r8,1)
  0x000000010c4c69cf: jl     0x000000010c4c69fc
  0x000000010c4c69d5: jmpq   0x000000010c4c68f0  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x000000010c4c69da: mov    $0x0,%eax
  0x000000010c4c69df: add    $0x30,%rsp
  0x000000010c4c69e3: pop    %rbp
  0x000000010c4c69e4: test   %eax,-0x219a8ea(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c69ea: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x000000010c4c69eb: mov    $0x0,%eax
  0x000000010c4c69f0: add    $0x30,%rsp
  0x000000010c4c69f4: pop    %rbp
  0x000000010c4c69f5: test   %eax,-0x219a8fb(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c69fb: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x000000010c4c69fc: mov    $0x1,%eax
  0x000000010c4c6a01: add    $0x30,%rsp
  0x000000010c4c6a05: pop    %rbp
  0x000000010c4c6a06: test   %eax,-0x219a90c(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c6a0c: retq   
  0x000000010c4c6a0d: mov    %rax,0x8(%rsp)
  0x000000010c4c6a12: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c6a1a: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x000000010c4c6a1f: jmpq   0x000000010c4c685e
  0x000000010c4c6a24: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010c4c6a29: callq  0x000000010c4a0a40  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010c4c6a2e: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000010c4c6a33: mov    %rcx,(%rsp)
  0x000000010c4c6a37: callq  0x000000010c413000  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x000000010c4c6a3c: mov    %rbx,(%rsp)
  0x000000010c4c6a40: callq  0x000000010c413000  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x000000010c4c6a45: mov    %r9,0x8(%rsp)
  0x000000010c4c6a4a: movq   $0x41,(%rsp)
  0x000000010c4c6a52: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x000000010c4c6a57: jmpq   0x000000010c4c6956
  0x000000010c4c6a5c: nop
  0x000000010c4c6a5d: nop
  0x000000010c4c6a5e: mov    0x2a8(%r15),%rax
  0x000000010c4c6a65: movabs $0x0,%r10
  0x000000010c4c6a6f: mov    %r10,0x2a8(%r15)
  0x000000010c4c6a76: movabs $0x0,%r10
  0x000000010c4c6a80: mov    %r10,0x2b0(%r15)
  0x000000010c4c6a87: add    $0x30,%rsp
  0x000000010c4c6a8b: pop    %rbp
  0x000000010c4c6a8c: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c6a91: hlt    
  0x000000010c4c6a92: hlt    
  0x000000010c4c6a93: hlt    
  0x000000010c4c6a94: hlt    
  0x000000010c4c6a95: hlt    
  0x000000010c4c6a96: hlt    
  0x000000010c4c6a97: hlt    
  0x000000010c4c6a98: hlt    
  0x000000010c4c6a99: hlt    
  0x000000010c4c6a9a: hlt    
  0x000000010c4c6a9b: hlt    
  0x000000010c4c6a9c: hlt    
  0x000000010c4c6a9d: hlt    
  0x000000010c4c6a9e: hlt    
  0x000000010c4c6a9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4c6aa0: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4c6aa5: mov    %rsp,-0x28(%rsp)
  0x000000010c4c6aaa: sub    $0x80,%rsp
  0x000000010c4c6ab1: mov    %rax,0x78(%rsp)
  0x000000010c4c6ab6: mov    %rcx,0x70(%rsp)
  0x000000010c4c6abb: mov    %rdx,0x68(%rsp)
  0x000000010c4c6ac0: mov    %rbx,0x60(%rsp)
  0x000000010c4c6ac5: mov    %rbp,0x50(%rsp)
  0x000000010c4c6aca: mov    %rsi,0x48(%rsp)
  0x000000010c4c6acf: mov    %rdi,0x40(%rsp)
  0x000000010c4c6ad4: mov    %r8,0x38(%rsp)
  0x000000010c4c6ad9: mov    %r9,0x30(%rsp)
  0x000000010c4c6ade: mov    %r10,0x28(%rsp)
  0x000000010c4c6ae3: mov    %r11,0x20(%rsp)
  0x000000010c4c6ae8: mov    %r12,0x18(%rsp)
  0x000000010c4c6aed: mov    %r13,0x10(%rsp)
  0x000000010c4c6af2: mov    %r14,0x8(%rsp)
  0x000000010c4c6af7: mov    %r15,(%rsp)
  0x000000010c4c6afb: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c6b05: movabs $0x10c4c6aa5,%rsi  ;   {internal_word}
  0x000000010c4c6b0f: mov    %rsp,%rdx
  0x000000010c4c6b12: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c6b16: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c6b1b: hlt    
[Deopt Handler Code]
  0x000000010c4c6b1c: movabs $0x10c4c6b1c,%r10  ;   {section_word}
  0x000000010c4c6b26: push   %r10
  0x000000010c4c6b28: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c6b2d: hlt    
  0x000000010c4c6b2e: hlt    
  0x000000010c4c6b2f: hlt    
Decoding compiled method 0x000000010c4c58d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124d32ff8} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0xf0]  (sp of caller)
  0x000000010c4c5aa0: mov    0x8(%rsi),%r10d
  0x000000010c4c5aa4: shl    $0x3,%r10
  0x000000010c4c5aa8: cmp    %rax,%r10
  0x000000010c4c5aab: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c5ab1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c5abc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c5ac0: mov    %eax,-0x14000(%rsp)
  0x000000010c4c5ac7: push   %rbp
  0x000000010c4c5ac8: sub    $0xe0,%rsp
  0x000000010c4c5acf: mov    %rsi,0xb8(%rsp)
  0x000000010c4c5ad7: movabs $0x124ec0790,%rdi  ;   {metadata(method data for {method} {0x0000000124d32ff8} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5ae1: mov    0xdc(%rdi),%ebx
  0x000000010c4c5ae7: add    $0x8,%ebx
  0x000000010c4c5aea: mov    %ebx,0xdc(%rdi)
  0x000000010c4c5af0: movabs $0x124d32ff8,%rdi  ;   {metadata({method} {0x0000000124d32ff8} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5afa: and    $0x1ff8,%ebx
  0x000000010c4c5b00: cmp    $0x0,%ebx
  0x000000010c4c5b03: je     0x000000010c4c6033  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x000000010c4c5b09: cmp    $0x0,%rdx
  0x000000010c4c5b0d: movabs $0x124ec0790,%rdi  ;   {metadata(method data for {method} {0x0000000124d32ff8} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5b17: movabs $0x108,%rbx
  0x000000010c4c5b21: jne    0x000000010c4c5b31
  0x000000010c4c5b27: movabs $0x118,%rbx
  0x000000010c4c5b31: mov    (%rdi,%rbx,1),%rax
  0x000000010c4c5b35: lea    0x1(%rax),%rax
  0x000000010c4c5b39: mov    %rax,(%rdi,%rbx,1)
  0x000000010c4c5b3d: je     0x000000010c4c6003  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x000000010c4c5b43: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010c4c604a
  0x000000010c4c5b46: mov    %rdx,%rdi
  0x000000010c4c5b49: movabs $0x124ec0790,%rbx  ;   {metadata(method data for {method} {0x0000000124d32ff8} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5b53: mov    0x8(%rdi),%edi
  0x000000010c4c5b56: shl    $0x3,%rdi
  0x000000010c4c5b5a: cmp    0x140(%rbx),%rdi
  0x000000010c4c5b61: jne    0x000000010c4c5b70
  0x000000010c4c5b63: addq   $0x1,0x148(%rbx)
  0x000000010c4c5b6b: jmpq   0x000000010c4c5bd6
  0x000000010c4c5b70: cmp    0x150(%rbx),%rdi
  0x000000010c4c5b77: jne    0x000000010c4c5b86
  0x000000010c4c5b79: addq   $0x1,0x158(%rbx)
  0x000000010c4c5b81: jmpq   0x000000010c4c5bd6
  0x000000010c4c5b86: cmpq   $0x0,0x140(%rbx)
  0x000000010c4c5b91: jne    0x000000010c4c5baa
  0x000000010c4c5b93: mov    %rdi,0x140(%rbx)
  0x000000010c4c5b9a: movq   $0x1,0x148(%rbx)
  0x000000010c4c5ba5: jmpq   0x000000010c4c5bd6
  0x000000010c4c5baa: cmpq   $0x0,0x150(%rbx)
  0x000000010c4c5bb5: jne    0x000000010c4c5bce
  0x000000010c4c5bb7: mov    %rdi,0x150(%rbx)
  0x000000010c4c5bbe: movq   $0x1,0x158(%rbx)
  0x000000010c4c5bc9: jmpq   0x000000010c4c5bd6
  0x000000010c4c5bce: addq   $0x1,0x138(%rbx)
  0x000000010c4c5bd6: movabs $0x124eab648,%rdi  ;   {metadata(method data for {method} {0x0000000124cc1c60} 'length' '()I' in 'java/lang/String')}
  0x000000010c4c5be0: mov    0xdc(%rdi),%ebx
  0x000000010c4c5be6: add    $0x8,%ebx
  0x000000010c4c5be9: mov    %ebx,0xdc(%rdi)
  0x000000010c4c5bef: movabs $0x124cc1c60,%rdi  ;   {metadata({method} {0x0000000124cc1c60} 'length' '()I' in 'java/lang/String')}
  0x000000010c4c5bf9: and    $0x7ffff8,%ebx
  0x000000010c4c5bff: cmp    $0x0,%ebx
  0x000000010c4c5c02: je     0x000000010c4c604f
  0x000000010c4c5c08: mov    0xc(%rdx),%edi
  0x000000010c4c5c0b: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x000000010c4c5c0f: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010c4c6066
  0x000000010c4c5c12: mov    %edi,0xac(%rsp)
  0x000000010c4c5c19: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x000000010c4c5c1c: add    %edi,%ebx
  0x000000010c4c5c1e: mov    %rsi,%rax
  0x000000010c4c5c21: movabs $0x124ec0790,%rcx  ;   {metadata(method data for {method} {0x0000000124d32ff8} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5c2b: addq   $0x1,0x168(%rcx)
  0x000000010c4c5c33: movabs $0x124ebd330,%rax  ;   {metadata(method data for {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5c3d: mov    0xdc(%rax),%ecx
  0x000000010c4c5c43: add    $0x8,%ecx
  0x000000010c4c5c46: mov    %ecx,0xdc(%rax)
  0x000000010c4c5c4c: movabs $0x124d326a0,%rax  ;   {metadata({method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5c56: and    $0x7ffff8,%ecx
  0x000000010c4c5c5c: cmp    $0x0,%ecx
  0x000000010c4c5c5f: je     0x000000010c4c606b
  0x000000010c4c5c65: mov    0x10(%rsi),%eax
  0x000000010c4c5c68: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5c6c: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x000000010c4c6082
  0x000000010c4c5c6f: mov    %rbx,%r8
  0x000000010c4c5c72: sub    %ecx,%r8d
  0x000000010c4c5c75: cmp    $0x0,%r8d
  0x000000010c4c5c79: movabs $0x124ebd330,%r8   ;   {metadata(method data for {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5c83: movabs $0x108,%r9
  0x000000010c4c5c8d: jle    0x000000010c4c5c9d
  0x000000010c4c5c93: movabs $0x118,%r9
  0x000000010c4c5c9d: mov    (%r8,%r9,1),%r11
  0x000000010c4c5ca1: lea    0x1(%r11),%r11
  0x000000010c4c5ca5: mov    %r11,(%r8,%r9,1)
  0x000000010c4c5ca9: jg     0x000000010c4c5cbc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5caf: mov    %rdx,0xc0(%rsp)
  0x000000010c4c5cb7: jmpq   0x000000010c4c5f1b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5cbc: mov    %ecx,0xa8(%rsp)
  0x000000010c4c5cc3: mov    %rax,0xb0(%rsp)
  0x000000010c4c5ccb: mov    %rdx,0xc0(%rsp)
  0x000000010c4c5cd3: mov    %rsi,%r8
  0x000000010c4c5cd6: movabs $0x124ebd330,%r9   ;   {metadata(method data for {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5ce0: addq   $0x1,0x128(%r9)
  0x000000010c4c5ce8: mov    %rbx,%rdx
  0x000000010c4c5ceb: mov    %rsi,%rbx
  0x000000010c4c5cee: mov    %rbx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5cf1: nop
  0x000000010c4c5cf2: nop
  0x000000010c4c5cf3: nop
  0x000000010c4c5cf4: nop
  0x000000010c4c5cf5: nop
  0x000000010c4c5cf6: nop
  0x000000010c4c5cf7: callq  0x000000010c3ed020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x000000010c4c5cfc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5cff: movabs $0x124ebd330,%rbx  ;   {metadata(method data for {method} {0x0000000124d326a0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5d09: addq   $0x1,0x138(%rbx)
  0x000000010c4c5d11: movabs $0x124ebd6d0,%rbx  ;   {metadata(method data for {method} {0x0000000124dd7ef0} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010c4c5d1b: mov    0xdc(%rbx),%edx
  0x000000010c4c5d21: add    $0x8,%edx
  0x000000010c4c5d24: mov    %edx,0xdc(%rbx)
  0x000000010c4c5d2a: movabs $0x124dd7ef0,%rbx  ;   {metadata({method} {0x0000000124dd7ef0} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010c4c5d34: and    $0x7ffff8,%edx
  0x000000010c4c5d3a: cmp    $0x0,%edx
  0x000000010c4c5d3d: je     0x000000010c4c6087
  0x000000010c4c5d43: mov    %r8,%rbx
  0x000000010c4c5d46: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010c4c5d50: movslq %ebx,%rbx
  0x000000010c4c5d53: mov    %rbx,%rdi
  0x000000010c4c5d56: cmp    $0xffffff,%rbx
  0x000000010c4c5d5d: ja     0x000000010c4c609e
  0x000000010c4c5d63: movabs $0x17,%rsi
  0x000000010c4c5d6d: lea    (%rsi,%rbx,2),%rsi
  0x000000010c4c5d71: and    $0xfffffffffffffff8,%rsi
  0x000000010c4c5d75: mov    0x60(%r15),%rax
  0x000000010c4c5d79: lea    (%rax,%rsi,1),%rsi
  0x000000010c4c5d7d: cmp    0x70(%r15),%rsi
  0x000000010c4c5d81: ja     0x000000010c4c609e
  0x000000010c4c5d87: mov    %rsi,0x60(%r15)
  0x000000010c4c5d8b: sub    %rax,%rsi
  0x000000010c4c5d8e: movq   $0x1,(%rax)
  0x000000010c4c5d95: mov    %rdx,%rcx
  0x000000010c4c5d98: shr    $0x3,%rcx
  0x000000010c4c5d9c: mov    %ecx,0x8(%rax)
  0x000000010c4c5d9f: mov    %ebx,0xc(%rax)
  0x000000010c4c5da2: sub    $0x10,%rsi
  0x000000010c4c5da6: je     0x000000010c4c5dbd
  0x000000010c4c5dac: xor    %rbx,%rbx
  0x000000010c4c5daf: shr    $0x3,%rsi
  0x000000010c4c5db3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010c4c5db8: dec    %rsi
  0x000000010c4c5dbb: jne    0x000000010c4c5db3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5dbd: movabs $0x124ebd6d0,%rsi  ;   {metadata(method data for {method} {0x0000000124dd7ef0} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010c4c5dc7: addq   $0x1,0x108(%rsi)
  0x000000010c4c5dcf: movabs $0x124e86ce8,%rsi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c5dd9: mov    0xdc(%rsi),%edx
  0x000000010c4c5ddf: add    $0x8,%edx
  0x000000010c4c5de2: mov    %edx,0xdc(%rsi)
  0x000000010c4c5de8: movabs $0x124db37a8,%rsi  ;   {metadata({method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c5df2: and    $0x7ffff8,%edx
  0x000000010c4c5df8: cmp    $0x0,%edx
  0x000000010c4c5dfb: je     0x000000010c4c60a8
  0x000000010c4c5e01: mov    0xa8(%rsp),%ecx
  0x000000010c4c5e08: cmp    %r8d,%ecx
  0x000000010c4c5e0b: movabs $0x124e86ce8,%rsi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c5e15: movabs $0x108,%rdx
  0x000000010c4c5e1f: jg     0x000000010c4c5e2f
  0x000000010c4c5e25: movabs $0x118,%rdx
  0x000000010c4c5e2f: mov    (%rsi,%rdx,1),%r9
  0x000000010c4c5e33: lea    0x1(%r9),%r9
  0x000000010c4c5e37: mov    %r9,(%rsi,%rdx,1)
  0x000000010c4c5e3b: jg     0x000000010c4c5e59  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5e41: movabs $0x124e86ce8,%rsi  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c5e4b: incl   0x128(%rsi)
  0x000000010c4c5e51: mov    %rcx,%r9
  0x000000010c4c5e54: jmpq   0x000000010c4c5e5c  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5e59: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5e5c: mov    0xb0(%rsp),%rsi
  0x000000010c4c5e64: movabs $0x124ebd6d0,%rdx  ;   {metadata(method data for {method} {0x0000000124dd7ef0} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010c4c5e6e: addq   $0x1,0x118(%rdx)
  0x000000010c4c5e76: mov    $0x0,%edx
  0x000000010c4c5e7b: mov    %rax,%rcx
  0x000000010c4c5e7e: mov    $0x0,%r8d
  0x000000010c4c5e84: mov    %rax,0xc8(%rsp)
  0x000000010c4c5e8c: lea    (%rdx,%r9,1),%rdi
  0x000000010c4c5e90: cmp    0xc(%rsi),%edi
  0x000000010c4c5e93: ja     0x000000010c4c60bf
  0x000000010c4c5e99: lea    (%r8,%r9,1),%rdi
  0x000000010c4c5e9d: cmp    0xc(%rcx),%edi
  0x000000010c4c5ea0: ja     0x000000010c4c60bf
  0x000000010c4c5ea6: test   %r9d,%r9d
  0x000000010c4c5ea9: jl     0x000000010c4c60bf
  0x000000010c4c5eaf: je     0x000000010c4c5eeb
  0x000000010c4c5eb5: movslq %edx,%rdx
  0x000000010c4c5eb8: movslq %r8d,%r8
  0x000000010c4c5ebb: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010c4c5ec0: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010c4c5ec5: mov    %r9,%rdx
  0x000000010c4c5ec8: test   $0xf,%esp
  0x000000010c4c5ece: je     0x000000010c4c5ee6
  0x000000010c4c5ed4: sub    $0x8,%rsp
  0x000000010c4c5ed8: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010c4c5edd: add    $0x8,%rsp
  0x000000010c4c5ee1: jmpq   0x000000010c4c5eeb
  0x000000010c4c5ee6: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010c4c5eeb: mov    0xc8(%rsp),%rax
  0x000000010c4c5ef3: mov    0xb8(%rsp),%rsi
  0x000000010c4c5efb: mov    %rax,%r10
  0x000000010c4c5efe: shr    $0x3,%r10
  0x000000010c4c5f02: mov    %r10d,0x10(%rsi)
  0x000000010c4c5f06: mov    %rsi,%rdx
  0x000000010c4c5f09: shr    $0x9,%rdx
  0x000000010c4c5f0d: movabs $0x118167000,%rcx
  0x000000010c4c5f17: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010c4c5f1b: mov    0xac(%rsp),%ebx
  0x000000010c4c5f22: mov    0xc0(%rsp),%rdi
  0x000000010c4c5f2a: mov    0x10(%rsi),%r8d
  0x000000010c4c5f2e: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x000000010c4c5f32: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x000000010c4c5f36: mov    %rdi,%rdx
  0x000000010c4c5f39: movabs $0x124ec0790,%rcx  ;   {metadata(method data for {method} {0x0000000124d32ff8} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c5f43: mov    0x8(%rdx),%edx
  0x000000010c4c5f46: shl    $0x3,%rdx
  0x000000010c4c5f4a: cmp    0x180(%rcx),%rdx
  0x000000010c4c5f51: jne    0x000000010c4c5f60
  0x000000010c4c5f53: addq   $0x1,0x188(%rcx)
  0x000000010c4c5f5b: jmpq   0x000000010c4c5fc6
  0x000000010c4c5f60: cmp    0x190(%rcx),%rdx
  0x000000010c4c5f67: jne    0x000000010c4c5f76
  0x000000010c4c5f69: addq   $0x1,0x198(%rcx)
  0x000000010c4c5f71: jmpq   0x000000010c4c5fc6
  0x000000010c4c5f76: cmpq   $0x0,0x180(%rcx)
  0x000000010c4c5f81: jne    0x000000010c4c5f9a
  0x000000010c4c5f83: mov    %rdx,0x180(%rcx)
  0x000000010c4c5f8a: movq   $0x1,0x188(%rcx)
  0x000000010c4c5f95: jmpq   0x000000010c4c5fc6
  0x000000010c4c5f9a: cmpq   $0x0,0x190(%rcx)
  0x000000010c4c5fa5: jne    0x000000010c4c5fbe
  0x000000010c4c5fa7: mov    %rdx,0x190(%rcx)
  0x000000010c4c5fae: movq   $0x1,0x198(%rcx)
  0x000000010c4c5fb9: jmpq   0x000000010c4c5fc6
  0x000000010c4c5fbe: addq   $0x1,0x178(%rcx)
  0x000000010c4c5fc6: mov    $0x0,%edx
  0x000000010c4c5fcb: mov    %rbx,%rcx
  0x000000010c4c5fce: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010c4c5fd1: nop
  0x000000010c4c5fd2: nop
  0x000000010c4c5fd3: nop
  0x000000010c4c5fd4: nop
  0x000000010c4c5fd5: nop
  0x000000010c4c5fd6: nop
  0x000000010c4c5fd7: callq  0x000000010c3ed020  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x000000010c4c5fdc: mov    0xb8(%rsp),%rsi
  0x000000010c4c5fe4: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x000000010c4c5fe7: add    0xac(%rsp),%eax
  0x000000010c4c5fee: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x000000010c4c5ff1: mov    %rsi,%rax
  0x000000010c4c5ff4: add    $0xe0,%rsp
  0x000000010c4c5ffb: pop    %rbp
  0x000000010c4c5ffc: test   %eax,-0x2199f02(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c6002: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x000000010c4c6003: mov    %rsi,%rdi
  0x000000010c4c6006: movabs $0x124ec0790,%rbx  ;   {metadata(method data for {method} {0x0000000124d32ff8} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010c4c6010: addq   $0x1,0x128(%rbx)
  0x000000010c4c6018: nop
  0x000000010c4c6019: nop
  0x000000010c4c601a: nop
  0x000000010c4c601b: nop
  0x000000010c4c601c: nop
  0x000000010c4c601d: nop
  0x000000010c4c601e: nop
  0x000000010c4c601f: callq  0x000000010c3ed020  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x000000010c4c6024: add    $0xe0,%rsp
  0x000000010c4c602b: pop    %rbp
  0x000000010c4c602c: test   %eax,-0x2199f32(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c6032: retq   
  0x000000010c4c6033: mov    %rdi,0x8(%rsp)
  0x000000010c4c6038: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c6040: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x000000010c4c6045: jmpq   0x000000010c4c5b09
  0x000000010c4c604a: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010c4c604f: mov    %rdi,0x8(%rsp)
  0x000000010c4c6054: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c605c: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010c4c6061: jmpq   0x000000010c4c5c08
  0x000000010c4c6066: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010c4c606b: mov    %rax,0x8(%rsp)
  0x000000010c4c6070: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c6078: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010c4c607d: jmpq   0x000000010c4c5c65
  0x000000010c4c6082: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010c4c6087: mov    %rbx,0x8(%rsp)
  0x000000010c4c608c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c6094: callq  0x000000010c4a4f60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010c4c6099: jmpq   0x000000010c4c5d43
  0x000000010c4c609e: callq  0x000000010c4a1aa0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010c4c60a3: jmpq   0x000000010c4c5dbd
  0x000000010c4c60a8: mov    %rsi,0x8(%rsp)
  0x000000010c4c60ad: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c60b5: callq  0x000000010c4a4f60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010c4c60ba: jmpq   0x000000010c4c5e01
  0x000000010c4c60bf: callq  0x000000010c3ed420  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x000000010c4c60c4: jmpq   0x000000010c4c5eeb
  0x000000010c4c60c9: nop
  0x000000010c4c60ca: nop
  0x000000010c4c60cb: mov    0x2a8(%r15),%rax
  0x000000010c4c60d2: movabs $0x0,%r10
  0x000000010c4c60dc: mov    %r10,0x2a8(%r15)
  0x000000010c4c60e3: movabs $0x0,%r10
  0x000000010c4c60ed: mov    %r10,0x2b0(%r15)
  0x000000010c4c60f4: add    $0xe0,%rsp
  0x000000010c4c60fb: pop    %rbp
  0x000000010c4c60fc: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c6101: hlt    
  0x000000010c4c6102: hlt    
  0x000000010c4c6103: hlt    
  0x000000010c4c6104: hlt    
  0x000000010c4c6105: hlt    
  0x000000010c4c6106: hlt    
  0x000000010c4c6107: hlt    
  0x000000010c4c6108: hlt    
  0x000000010c4c6109: hlt    
  0x000000010c4c610a: hlt    
  0x000000010c4c610b: hlt    
  0x000000010c4c610c: hlt    
  0x000000010c4c610d: hlt    
  0x000000010c4c610e: hlt    
  0x000000010c4c610f: hlt    
  0x000000010c4c6110: hlt    
  0x000000010c4c6111: hlt    
  0x000000010c4c6112: hlt    
  0x000000010c4c6113: hlt    
  0x000000010c4c6114: hlt    
  0x000000010c4c6115: hlt    
  0x000000010c4c6116: hlt    
  0x000000010c4c6117: hlt    
  0x000000010c4c6118: hlt    
  0x000000010c4c6119: hlt    
  0x000000010c4c611a: hlt    
  0x000000010c4c611b: hlt    
  0x000000010c4c611c: hlt    
  0x000000010c4c611d: hlt    
  0x000000010c4c611e: hlt    
  0x000000010c4c611f: hlt    
[Stub Code]
  0x000000010c4c6120: nop                       ;   {no_reloc}
  0x000000010c4c6121: nop
  0x000000010c4c6122: nop
  0x000000010c4c6123: nop
  0x000000010c4c6124: nop
  0x000000010c4c6125: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c612f: jmpq   0x000000010c4c612f  ;   {runtime_call}
  0x000000010c4c6134: nop
  0x000000010c4c6135: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c613f: jmpq   0x000000010c4c613f  ;   {runtime_call}
  0x000000010c4c6144: nop
  0x000000010c4c6145: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c614f: jmpq   0x000000010c4c614f  ;   {runtime_call}
  0x000000010c4c6154: nop
  0x000000010c4c6155: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c615f: jmpq   0x000000010c4c615f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c6164: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c6169: mov    %rsp,-0x28(%rsp)
  0x000000010c4c616e: sub    $0x80,%rsp
  0x000000010c4c6175: mov    %rax,0x78(%rsp)
  0x000000010c4c617a: mov    %rcx,0x70(%rsp)
  0x000000010c4c617f: mov    %rdx,0x68(%rsp)
  0x000000010c4c6184: mov    %rbx,0x60(%rsp)
  0x000000010c4c6189: mov    %rbp,0x50(%rsp)
  0x000000010c4c618e: mov    %rsi,0x48(%rsp)
  0x000000010c4c6193: mov    %rdi,0x40(%rsp)
  0x000000010c4c6198: mov    %r8,0x38(%rsp)
  0x000000010c4c619d: mov    %r9,0x30(%rsp)
  0x000000010c4c61a2: mov    %r10,0x28(%rsp)
  0x000000010c4c61a7: mov    %r11,0x20(%rsp)
  0x000000010c4c61ac: mov    %r12,0x18(%rsp)
  0x000000010c4c61b1: mov    %r13,0x10(%rsp)
  0x000000010c4c61b6: mov    %r14,0x8(%rsp)
  0x000000010c4c61bb: mov    %r15,(%rsp)
  0x000000010c4c61bf: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c61c9: movabs $0x10c4c6169,%rsi  ;   {internal_word}
  0x000000010c4c61d3: mov    %rsp,%rdx
  0x000000010c4c61d6: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c61da: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c61df: hlt    
[Deopt Handler Code]
  0x000000010c4c61e0: movabs $0x10c4c61e0,%r10  ;   {section_word}
  0x000000010c4c61ea: push   %r10
  0x000000010c4c61ec: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c61f1: hlt    
  0x000000010c4c61f2: hlt    
  0x000000010c4c61f3: hlt    
  0x000000010c4c61f4: hlt    
  0x000000010c4c61f5: hlt    
  0x000000010c4c61f6: hlt    
  0x000000010c4c61f7: hlt    
Decoding compiled method 0x000000010c4c0d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124d36408} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4c0ec0: mov    0x8(%rsi),%r10d
  0x000000010c4c0ec4: shl    $0x3,%r10
  0x000000010c4c0ec8: cmp    %rax,%r10
  0x000000010c4c0ecb: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c0ed1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c0edc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c0ee0: mov    %eax,-0x14000(%rsp)
  0x000000010c4c0ee7: push   %rbp
  0x000000010c4c0ee8: sub    $0x30,%rsp
  0x000000010c4c0eec: movabs $0x124ec0658,%rdi  ;   {metadata(method data for {method} {0x0000000124d36408} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4c0ef6: mov    0xdc(%rdi),%ebx
  0x000000010c4c0efc: add    $0x8,%ebx
  0x000000010c4c0eff: mov    %ebx,0xdc(%rdi)
  0x000000010c4c0f05: movabs $0x124d36408,%rdi  ;   {metadata({method} {0x0000000124d36408} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4c0f0f: and    $0x1ff8,%ebx
  0x000000010c4c0f15: cmp    $0x0,%ebx
  0x000000010c4c0f18: je     0x000000010c4c0f55  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x000000010c4c0f1e: mov    %rsi,%rdi
  0x000000010c4c0f21: movabs $0x124ec0658,%rbx  ;   {metadata(method data for {method} {0x0000000124d36408} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010c4c0f2b: addq   $0x1,0x108(%rbx)
  0x000000010c4c0f33: mov    %rsi,%rdi
  0x000000010c4c0f36: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010c4c0f39: mov    %rdi,0x20(%rsp)
  0x000000010c4c0f3e: nop
  0x000000010c4c0f3f: callq  0x000000010c3ed020  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x000000010c4c0f44: mov    0x20(%rsp),%rax
  0x000000010c4c0f49: add    $0x30,%rsp
  0x000000010c4c0f4d: pop    %rbp
  0x000000010c4c0f4e: test   %eax,-0x2194e54(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c0f54: retq   
  0x000000010c4c0f55: mov    %rdi,0x8(%rsp)
  0x000000010c4c0f5a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c0f62: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop rdx=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x000000010c4c0f67: jmp    0x000000010c4c0f1e
  0x000000010c4c0f69: nop
  0x000000010c4c0f6a: nop
  0x000000010c4c0f6b: mov    0x2a8(%r15),%rax
  0x000000010c4c0f72: movabs $0x0,%r10
  0x000000010c4c0f7c: mov    %r10,0x2a8(%r15)
  0x000000010c4c0f83: movabs $0x0,%r10
  0x000000010c4c0f8d: mov    %r10,0x2b0(%r15)
  0x000000010c4c0f94: add    $0x30,%rsp
  0x000000010c4c0f98: pop    %rbp
  0x000000010c4c0f99: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c0f9e: hlt    
  0x000000010c4c0f9f: hlt    
[Stub Code]
  0x000000010c4c0fa0: nop                       ;   {no_reloc}
  0x000000010c4c0fa1: nop
  0x000000010c4c0fa2: nop
  0x000000010c4c0fa3: nop
  0x000000010c4c0fa4: nop
  0x000000010c4c0fa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c0faf: jmpq   0x000000010c4c0faf  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c0fb4: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c0fb9: mov    %rsp,-0x28(%rsp)
  0x000000010c4c0fbe: sub    $0x80,%rsp
  0x000000010c4c0fc5: mov    %rax,0x78(%rsp)
  0x000000010c4c0fca: mov    %rcx,0x70(%rsp)
  0x000000010c4c0fcf: mov    %rdx,0x68(%rsp)
  0x000000010c4c0fd4: mov    %rbx,0x60(%rsp)
  0x000000010c4c0fd9: mov    %rbp,0x50(%rsp)
  0x000000010c4c0fde: mov    %rsi,0x48(%rsp)
  0x000000010c4c0fe3: mov    %rdi,0x40(%rsp)
  0x000000010c4c0fe8: mov    %r8,0x38(%rsp)
  0x000000010c4c0fed: mov    %r9,0x30(%rsp)
  0x000000010c4c0ff2: mov    %r10,0x28(%rsp)
  0x000000010c4c0ff7: mov    %r11,0x20(%rsp)
  0x000000010c4c0ffc: mov    %r12,0x18(%rsp)
  0x000000010c4c1001: mov    %r13,0x10(%rsp)
  0x000000010c4c1006: mov    %r14,0x8(%rsp)
  0x000000010c4c100b: mov    %r15,(%rsp)
  0x000000010c4c100f: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c1019: movabs $0x10c4c0fb9,%rsi  ;   {internal_word}
  0x000000010c4c1023: mov    %rsp,%rdx
  0x000000010c4c1026: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c102a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c102f: hlt    
[Deopt Handler Code]
  0x000000010c4c1030: movabs $0x10c4c1030,%r10  ;   {section_word}
  0x000000010c4c103a: push   %r10
  0x000000010c4c103c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c1041: hlt    
  0x000000010c4c1042: hlt    
  0x000000010c4c1043: hlt    
  0x000000010c4c1044: hlt    
  0x000000010c4c1045: hlt    
  0x000000010c4c1046: hlt    
  0x000000010c4c1047: hlt    
Decoding compiled method 0x000000010c4c55d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cbe480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4c5720: mov    0x8(%rsi),%r10d
  0x000000010c4c5724: shl    $0x3,%r10
  0x000000010c4c5728: cmp    %rax,%r10
  0x000000010c4c572b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c5731: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c573c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c5740: mov    %eax,-0x14000(%rsp)
  0x000000010c4c5747: push   %rbp
  0x000000010c4c5748: sub    $0x30,%rsp
  0x000000010c4c574c: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x000000010c4c574f: mov    %rsi,0x20(%rsp)
  0x000000010c4c5754: callq  0x000000010c4a0c60  ; OopMap{[32]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x000000010c4c5759: add    $0x30,%rsp
  0x000000010c4c575d: pop    %rbp
  0x000000010c4c575e: test   %eax,-0x2199664(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c5764: retq   
  0x000000010c4c5765: nop
  0x000000010c4c5766: nop
  0x000000010c4c5767: mov    0x2a8(%r15),%rax
  0x000000010c4c576e: movabs $0x0,%r10
  0x000000010c4c5778: mov    %r10,0x2a8(%r15)
  0x000000010c4c577f: movabs $0x0,%r10
  0x000000010c4c5789: mov    %r10,0x2b0(%r15)
  0x000000010c4c5790: add    $0x30,%rsp
  0x000000010c4c5794: pop    %rbp
  0x000000010c4c5795: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c579a: hlt    
  0x000000010c4c579b: hlt    
  0x000000010c4c579c: hlt    
  0x000000010c4c579d: hlt    
  0x000000010c4c579e: hlt    
  0x000000010c4c579f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4c57a0: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4c57a5: mov    %rsp,-0x28(%rsp)
  0x000000010c4c57aa: sub    $0x80,%rsp
  0x000000010c4c57b1: mov    %rax,0x78(%rsp)
  0x000000010c4c57b6: mov    %rcx,0x70(%rsp)
  0x000000010c4c57bb: mov    %rdx,0x68(%rsp)
  0x000000010c4c57c0: mov    %rbx,0x60(%rsp)
  0x000000010c4c57c5: mov    %rbp,0x50(%rsp)
  0x000000010c4c57ca: mov    %rsi,0x48(%rsp)
  0x000000010c4c57cf: mov    %rdi,0x40(%rsp)
  0x000000010c4c57d4: mov    %r8,0x38(%rsp)
  0x000000010c4c57d9: mov    %r9,0x30(%rsp)
  0x000000010c4c57de: mov    %r10,0x28(%rsp)
  0x000000010c4c57e3: mov    %r11,0x20(%rsp)
  0x000000010c4c57e8: mov    %r12,0x18(%rsp)
  0x000000010c4c57ed: mov    %r13,0x10(%rsp)
  0x000000010c4c57f2: mov    %r14,0x8(%rsp)
  0x000000010c4c57f7: mov    %r15,(%rsp)
  0x000000010c4c57fb: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c5805: movabs $0x10c4c57a5,%rsi  ;   {internal_word}
  0x000000010c4c580f: mov    %rsp,%rdx
  0x000000010c4c5812: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c5816: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c581b: hlt    
[Deopt Handler Code]
  0x000000010c4c581c: movabs $0x10c4c581c,%r10  ;   {section_word}
  0x000000010c4c5826: push   %r10
  0x000000010c4c5828: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c582d: hlt    
  0x000000010c4c582e: hlt    
  0x000000010c4c582f: hlt    
Decoding compiled method 0x000000010c4c52d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124d42c60} 'getPath' '()Ljava/lang/String;' in 'java/io/File'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4c5420: mov    0x8(%rsi),%r10d
  0x000000010c4c5424: shl    $0x3,%r10
  0x000000010c4c5428: cmp    %rax,%r10
  0x000000010c4c542b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c5431: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c543c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c5440: mov    %eax,-0x14000(%rsp)
  0x000000010c4c5447: push   %rbp
  0x000000010c4c5448: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 512)

  0x000000010c4c544c: mov    0x10(%rsi),%eax
  0x000000010c4c544f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 512)

  0x000000010c4c5453: add    $0x30,%rsp
  0x000000010c4c5457: pop    %rbp
  0x000000010c4c5458: test   %eax,-0x219935e(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c545e: retq   
  0x000000010c4c545f: nop
  0x000000010c4c5460: nop
  0x000000010c4c5461: mov    0x2a8(%r15),%rax
  0x000000010c4c5468: movabs $0x0,%r10
  0x000000010c4c5472: mov    %r10,0x2a8(%r15)
  0x000000010c4c5479: movabs $0x0,%r10
  0x000000010c4c5483: mov    %r10,0x2b0(%r15)
  0x000000010c4c548a: add    $0x30,%rsp
  0x000000010c4c548e: pop    %rbp
  0x000000010c4c548f: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c5494: hlt    
  0x000000010c4c5495: hlt    
  0x000000010c4c5496: hlt    
  0x000000010c4c5497: hlt    
  0x000000010c4c5498: hlt    
  0x000000010c4c5499: hlt    
  0x000000010c4c549a: hlt    
  0x000000010c4c549b: hlt    
  0x000000010c4c549c: hlt    
  0x000000010c4c549d: hlt    
  0x000000010c4c549e: hlt    
  0x000000010c4c549f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4c54a0: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4c54a5: mov    %rsp,-0x28(%rsp)
  0x000000010c4c54aa: sub    $0x80,%rsp
  0x000000010c4c54b1: mov    %rax,0x78(%rsp)
  0x000000010c4c54b6: mov    %rcx,0x70(%rsp)
  0x000000010c4c54bb: mov    %rdx,0x68(%rsp)
  0x000000010c4c54c0: mov    %rbx,0x60(%rsp)
  0x000000010c4c54c5: mov    %rbp,0x50(%rsp)
  0x000000010c4c54ca: mov    %rsi,0x48(%rsp)
  0x000000010c4c54cf: mov    %rdi,0x40(%rsp)
  0x000000010c4c54d4: mov    %r8,0x38(%rsp)
  0x000000010c4c54d9: mov    %r9,0x30(%rsp)
  0x000000010c4c54de: mov    %r10,0x28(%rsp)
  0x000000010c4c54e3: mov    %r11,0x20(%rsp)
  0x000000010c4c54e8: mov    %r12,0x18(%rsp)
  0x000000010c4c54ed: mov    %r13,0x10(%rsp)
  0x000000010c4c54f2: mov    %r14,0x8(%rsp)
  0x000000010c4c54f7: mov    %r15,(%rsp)
  0x000000010c4c54fb: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c5505: movabs $0x10c4c54a5,%rsi  ;   {internal_word}
  0x000000010c4c550f: mov    %rsp,%rdx
  0x000000010c4c5512: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c5516: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c551b: hlt    
[Deopt Handler Code]
  0x000000010c4c551c: movabs $0x10c4c551c,%r10  ;   {section_word}
  0x000000010c4c5526: push   %r10
  0x000000010c4c5528: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c552d: hlt    
  0x000000010c4c552e: hlt    
  0x000000010c4c552f: hlt    
Decoding compiled method 0x000000010c4c4e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124cc2e90} 'startsWith' '(Ljava/lang/String;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4c5000: mov    0x8(%rsi),%r10d
  0x000000010c4c5004: shl    $0x3,%r10
  0x000000010c4c5008: cmp    %rax,%r10
  0x000000010c4c500b: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c5011: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c501c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c5020: mov    %eax,-0x14000(%rsp)
  0x000000010c4c5027: push   %rbp
  0x000000010c4c5028: sub    $0x30,%rsp
  0x000000010c4c502c: movabs $0x124f3a6a8,%rcx  ;   {metadata(method data for {method} {0x0000000124cc2e90} 'startsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010c4c5036: mov    0xdc(%rcx),%edi
  0x000000010c4c503c: add    $0x8,%edi
  0x000000010c4c503f: mov    %edi,0xdc(%rcx)
  0x000000010c4c5045: movabs $0x124cc2e90,%rcx  ;   {metadata({method} {0x0000000124cc2e90} 'startsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010c4c504f: and    $0x1ff8,%edi
  0x000000010c4c5055: cmp    $0x0,%edi
  0x000000010c4c5058: je     0x000000010c4c510b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x000000010c4c505e: mov    %rsi,%rcx
  0x000000010c4c5061: movabs $0x124f3a6a8,%rdi  ;   {metadata(method data for {method} {0x0000000124cc2e90} 'startsWith' '(Ljava/lang/String;)Z' in 'java/lang/String')}
  0x000000010c4c506b: mov    0x8(%rcx),%ecx
  0x000000010c4c506e: shl    $0x3,%rcx
  0x000000010c4c5072: cmp    0x110(%rdi),%rcx
  0x000000010c4c5079: jne    0x000000010c4c5088
  0x000000010c4c507b: addq   $0x1,0x118(%rdi)
  0x000000010c4c5083: jmpq   0x000000010c4c50ee
  0x000000010c4c5088: cmp    0x120(%rdi),%rcx
  0x000000010c4c508f: jne    0x000000010c4c509e
  0x000000010c4c5091: addq   $0x1,0x128(%rdi)
  0x000000010c4c5099: jmpq   0x000000010c4c50ee
  0x000000010c4c509e: cmpq   $0x0,0x110(%rdi)
  0x000000010c4c50a9: jne    0x000000010c4c50c2
  0x000000010c4c50ab: mov    %rcx,0x110(%rdi)
  0x000000010c4c50b2: movq   $0x1,0x118(%rdi)
  0x000000010c4c50bd: jmpq   0x000000010c4c50ee
  0x000000010c4c50c2: cmpq   $0x0,0x120(%rdi)
  0x000000010c4c50cd: jne    0x000000010c4c50e6
  0x000000010c4c50cf: mov    %rcx,0x120(%rdi)
  0x000000010c4c50d6: movq   $0x1,0x128(%rdi)
  0x000000010c4c50e1: jmpq   0x000000010c4c50ee
  0x000000010c4c50e6: addq   $0x1,0x108(%rdi)
  0x000000010c4c50ee: mov    $0x0,%ecx          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x000000010c4c50f3: nop
  0x000000010c4c50f4: nop
  0x000000010c4c50f5: nop
  0x000000010c4c50f6: nop
  0x000000010c4c50f7: callq  0x000000010c3ed020  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x000000010c4c50fc: and    $0x1,%eax
  0x000000010c4c50ff: add    $0x30,%rsp
  0x000000010c4c5103: pop    %rbp
  0x000000010c4c5104: test   %eax,-0x219900a(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c510a: retq   
  0x000000010c4c510b: mov    %rcx,0x8(%rsp)
  0x000000010c4c5110: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c5118: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop rdx=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x000000010c4c511d: jmpq   0x000000010c4c505e
  0x000000010c4c5122: nop
  0x000000010c4c5123: nop
  0x000000010c4c5124: mov    0x2a8(%r15),%rax
  0x000000010c4c512b: movabs $0x0,%r10
  0x000000010c4c5135: mov    %r10,0x2a8(%r15)
  0x000000010c4c513c: movabs $0x0,%r10
  0x000000010c4c5146: mov    %r10,0x2b0(%r15)
  0x000000010c4c514d: add    $0x30,%rsp
  0x000000010c4c5151: pop    %rbp
  0x000000010c4c5152: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c5157: hlt    
  0x000000010c4c5158: hlt    
  0x000000010c4c5159: hlt    
  0x000000010c4c515a: hlt    
  0x000000010c4c515b: hlt    
  0x000000010c4c515c: hlt    
  0x000000010c4c515d: hlt    
  0x000000010c4c515e: hlt    
  0x000000010c4c515f: hlt    
[Stub Code]
  0x000000010c4c5160: nop                       ;   {no_reloc}
  0x000000010c4c5161: nop
  0x000000010c4c5162: nop
  0x000000010c4c5163: nop
  0x000000010c4c5164: nop
  0x000000010c4c5165: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c516f: jmpq   0x000000010c4c516f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c5174: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c5179: mov    %rsp,-0x28(%rsp)
  0x000000010c4c517e: sub    $0x80,%rsp
  0x000000010c4c5185: mov    %rax,0x78(%rsp)
  0x000000010c4c518a: mov    %rcx,0x70(%rsp)
  0x000000010c4c518f: mov    %rdx,0x68(%rsp)
  0x000000010c4c5194: mov    %rbx,0x60(%rsp)
  0x000000010c4c5199: mov    %rbp,0x50(%rsp)
  0x000000010c4c519e: mov    %rsi,0x48(%rsp)
  0x000000010c4c51a3: mov    %rdi,0x40(%rsp)
  0x000000010c4c51a8: mov    %r8,0x38(%rsp)
  0x000000010c4c51ad: mov    %r9,0x30(%rsp)
  0x000000010c4c51b2: mov    %r10,0x28(%rsp)
  0x000000010c4c51b7: mov    %r11,0x20(%rsp)
  0x000000010c4c51bc: mov    %r12,0x18(%rsp)
  0x000000010c4c51c1: mov    %r13,0x10(%rsp)
  0x000000010c4c51c6: mov    %r14,0x8(%rsp)
  0x000000010c4c51cb: mov    %r15,(%rsp)
  0x000000010c4c51cf: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c51d9: movabs $0x10c4c5179,%rsi  ;   {internal_word}
  0x000000010c4c51e3: mov    %rsp,%rdx
  0x000000010c4c51e6: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c51ea: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c51ef: hlt    
[Deopt Handler Code]
  0x000000010c4c51f0: movabs $0x10c4c51f0,%r10  ;   {section_word}
  0x000000010c4c51fa: push   %r10
  0x000000010c4c51fc: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c5201: hlt    
  0x000000010c4c5202: hlt    
  0x000000010c4c5203: hlt    
  0x000000010c4c5204: hlt    
  0x000000010c4c5205: hlt    
  0x000000010c4c5206: hlt    
  0x000000010c4c5207: hlt    
Decoding compiled method 0x000000010c4c4b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124d8dc60} 'size' '()I' in 'java/util/ArrayList'
  #           [sp+0x40]  (sp of caller)
  0x000000010c4c4ce0: mov    0x8(%rsi),%r10d
  0x000000010c4c4ce4: shl    $0x3,%r10
  0x000000010c4c4ce8: cmp    %rax,%r10
  0x000000010c4c4ceb: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c4cf1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c4cfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c4d00: mov    %eax,-0x14000(%rsp)
  0x000000010c4c4d07: push   %rbp
  0x000000010c4c4d08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x000000010c4c4d0c: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x000000010c4c4d0f: add    $0x30,%rsp
  0x000000010c4c4d13: pop    %rbp
  0x000000010c4c4d14: test   %eax,-0x2198c1a(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c4d1a: retq   
  0x000000010c4c4d1b: nop
  0x000000010c4c4d1c: nop
  0x000000010c4c4d1d: mov    0x2a8(%r15),%rax
  0x000000010c4c4d24: movabs $0x0,%r10
  0x000000010c4c4d2e: mov    %r10,0x2a8(%r15)
  0x000000010c4c4d35: movabs $0x0,%r10
  0x000000010c4c4d3f: mov    %r10,0x2b0(%r15)
  0x000000010c4c4d46: add    $0x30,%rsp
  0x000000010c4c4d4a: pop    %rbp
  0x000000010c4c4d4b: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c4d50: hlt    
  0x000000010c4c4d51: hlt    
  0x000000010c4c4d52: hlt    
  0x000000010c4c4d53: hlt    
  0x000000010c4c4d54: hlt    
  0x000000010c4c4d55: hlt    
  0x000000010c4c4d56: hlt    
  0x000000010c4c4d57: hlt    
  0x000000010c4c4d58: hlt    
  0x000000010c4c4d59: hlt    
  0x000000010c4c4d5a: hlt    
  0x000000010c4c4d5b: hlt    
  0x000000010c4c4d5c: hlt    
  0x000000010c4c4d5d: hlt    
  0x000000010c4c4d5e: hlt    
  0x000000010c4c4d5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010c4c4d60: callq  0x000000010c4a28e0  ;   {no_reloc}
  0x000000010c4c4d65: mov    %rsp,-0x28(%rsp)
  0x000000010c4c4d6a: sub    $0x80,%rsp
  0x000000010c4c4d71: mov    %rax,0x78(%rsp)
  0x000000010c4c4d76: mov    %rcx,0x70(%rsp)
  0x000000010c4c4d7b: mov    %rdx,0x68(%rsp)
  0x000000010c4c4d80: mov    %rbx,0x60(%rsp)
  0x000000010c4c4d85: mov    %rbp,0x50(%rsp)
  0x000000010c4c4d8a: mov    %rsi,0x48(%rsp)
  0x000000010c4c4d8f: mov    %rdi,0x40(%rsp)
  0x000000010c4c4d94: mov    %r8,0x38(%rsp)
  0x000000010c4c4d99: mov    %r9,0x30(%rsp)
  0x000000010c4c4d9e: mov    %r10,0x28(%rsp)
  0x000000010c4c4da3: mov    %r11,0x20(%rsp)
  0x000000010c4c4da8: mov    %r12,0x18(%rsp)
  0x000000010c4c4dad: mov    %r13,0x10(%rsp)
  0x000000010c4c4db2: mov    %r14,0x8(%rsp)
  0x000000010c4c4db7: mov    %r15,(%rsp)
  0x000000010c4c4dbb: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c4dc5: movabs $0x10c4c4d65,%rsi  ;   {internal_word}
  0x000000010c4c4dcf: mov    %rsp,%rdx
  0x000000010c4c4dd2: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c4dd6: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c4ddb: hlt    
[Deopt Handler Code]
  0x000000010c4c4ddc: movabs $0x10c4c4ddc,%r10  ;   {section_word}
  0x000000010c4c4de6: push   %r10
  0x000000010c4c4de8: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c4ded: hlt    
  0x000000010c4c4dee: hlt    
  0x000000010c4c4def: hlt    
Decoding compiled method 0x000000010c4c4610:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000124d59248} 'toLowerCase' '(C)C' in 'java/lang/Character'
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x000000010c4c47a0: mov    %eax,-0x14000(%rsp)
  0x000000010c4c47a7: push   %rbp
  0x000000010c4c47a8: sub    $0x40,%rsp
  0x000000010c4c47ac: movabs $0x124f3afe8,%rdi  ;   {metadata(method data for {method} {0x0000000124d59248} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010c4c47b6: mov    0xdc(%rdi),%ebx
  0x000000010c4c47bc: add    $0x8,%ebx
  0x000000010c4c47bf: mov    %ebx,0xdc(%rdi)
  0x000000010c4c47c5: movabs $0x124d59248,%rdi  ;   {metadata({method} {0x0000000124d59248} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010c4c47cf: and    $0x1ff8,%ebx
  0x000000010c4c47d5: cmp    $0x0,%ebx
  0x000000010c4c47d8: je     0x000000010c4c490c  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x000000010c4c47de: movabs $0x124f3afe8,%rdi  ;   {metadata(method data for {method} {0x0000000124d59248} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010c4c47e8: addq   $0x1,0x108(%rdi)
  0x000000010c4c47f0: movabs $0x124f3b140,%rdi  ;   {metadata(method data for {method} {0x0000000124d592e0} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010c4c47fa: mov    0xdc(%rdi),%ebx
  0x000000010c4c4800: add    $0x8,%ebx
  0x000000010c4c4803: mov    %ebx,0xdc(%rdi)
  0x000000010c4c4809: movabs $0x124d592e0,%rdi  ;   {metadata({method} {0x0000000124d592e0} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010c4c4813: and    $0x7ffff8,%ebx
  0x000000010c4c4819: cmp    $0x0,%ebx
  0x000000010c4c481c: je     0x000000010c4c4923
  0x000000010c4c4822: movabs $0x124f3b140,%rdi  ;   {metadata(method data for {method} {0x0000000124d592e0} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010c4c482c: addq   $0x1,0x108(%rdi)
  0x000000010c4c4834: mov    %rsi,%rdi
  0x000000010c4c4837: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x000000010c4c483a: mov    %edi,0x28(%rsp)
  0x000000010c4c483e: nop
  0x000000010c4c483f: callq  0x000000010c3ed420  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x000000010c4c4844: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010c4c493a
  0x000000010c4c4847: mov    %rax,%rdx
  0x000000010c4c484a: movabs $0x124f3b140,%rsi  ;   {metadata(method data for {method} {0x0000000124d592e0} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010c4c4854: mov    0x8(%rdx),%edx
  0x000000010c4c4857: shl    $0x3,%rdx
  0x000000010c4c485b: cmp    0x120(%rsi),%rdx
  0x000000010c4c4862: jne    0x000000010c4c4871
  0x000000010c4c4864: addq   $0x1,0x128(%rsi)
  0x000000010c4c486c: jmpq   0x000000010c4c48d7
  0x000000010c4c4871: cmp    0x130(%rsi),%rdx
  0x000000010c4c4878: jne    0x000000010c4c4887
  0x000000010c4c487a: addq   $0x1,0x138(%rsi)
  0x000000010c4c4882: jmpq   0x000000010c4c48d7
  0x000000010c4c4887: cmpq   $0x0,0x120(%rsi)
  0x000000010c4c4892: jne    0x000000010c4c48ab
  0x000000010c4c4894: mov    %rdx,0x120(%rsi)
  0x000000010c4c489b: movq   $0x1,0x128(%rsi)
  0x000000010c4c48a6: jmpq   0x000000010c4c48d7
  0x000000010c4c48ab: cmpq   $0x0,0x130(%rsi)
  0x000000010c4c48b6: jne    0x000000010c4c48cf
  0x000000010c4c48b8: mov    %rdx,0x130(%rsi)
  0x000000010c4c48bf: movq   $0x1,0x138(%rsi)
  0x000000010c4c48ca: jmpq   0x000000010c4c48d7
  0x000000010c4c48cf: addq   $0x1,0x118(%rsi)
  0x000000010c4c48d7: mov    0x28(%rsp),%edx
  0x000000010c4c48db: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x000000010c4c48de: nop
  0x000000010c4c48df: nop
  0x000000010c4c48e0: nop
  0x000000010c4c48e1: nop
  0x000000010c4c48e2: nop
  0x000000010c4c48e3: nop
  0x000000010c4c48e4: nop
  0x000000010c4c48e5: movabs $0xffffffffffffffff,%rax
  0x000000010c4c48ef: callq  0x000000010c3ed220  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x000000010c4c48f4: and    $0xffff,%eax
  0x000000010c4c48fa: and    $0xffff,%eax
  0x000000010c4c4900: add    $0x40,%rsp
  0x000000010c4c4904: pop    %rbp
  0x000000010c4c4905: test   %eax,-0x219880b(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c490b: retq   
  0x000000010c4c490c: mov    %rdi,0x8(%rsp)
  0x000000010c4c4911: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c4919: callq  0x000000010c4a4f60  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x000000010c4c491e: jmpq   0x000000010c4c47de
  0x000000010c4c4923: mov    %rdi,0x8(%rsp)
  0x000000010c4c4928: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c4930: callq  0x000000010c4a4f60  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x000000010c4c4935: jmpq   0x000000010c4c4822
  0x000000010c4c493a: callq  0x000000010c4a0a40  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x000000010c4c493f: nop
  0x000000010c4c4940: nop
  0x000000010c4c4941: mov    0x2a8(%r15),%rax
  0x000000010c4c4948: movabs $0x0,%r10
  0x000000010c4c4952: mov    %r10,0x2a8(%r15)
  0x000000010c4c4959: movabs $0x0,%r10
  0x000000010c4c4963: mov    %r10,0x2b0(%r15)
  0x000000010c4c496a: add    $0x40,%rsp
  0x000000010c4c496e: pop    %rbp
  0x000000010c4c496f: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c4974: hlt    
  0x000000010c4c4975: hlt    
  0x000000010c4c4976: hlt    
  0x000000010c4c4977: hlt    
  0x000000010c4c4978: hlt    
  0x000000010c4c4979: hlt    
  0x000000010c4c497a: hlt    
  0x000000010c4c497b: hlt    
  0x000000010c4c497c: hlt    
  0x000000010c4c497d: hlt    
  0x000000010c4c497e: hlt    
  0x000000010c4c497f: hlt    
[Stub Code]
  0x000000010c4c4980: nop                       ;   {no_reloc}
  0x000000010c4c4981: nop
  0x000000010c4c4982: nop
  0x000000010c4c4983: nop
  0x000000010c4c4984: nop
  0x000000010c4c4985: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c498f: jmpq   0x000000010c4c498f  ;   {runtime_call}
  0x000000010c4c4994: nop
  0x000000010c4c4995: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c499f: jmpq   0x000000010c4c499f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c49a4: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c49a9: mov    %rsp,-0x28(%rsp)
  0x000000010c4c49ae: sub    $0x80,%rsp
  0x000000010c4c49b5: mov    %rax,0x78(%rsp)
  0x000000010c4c49ba: mov    %rcx,0x70(%rsp)
  0x000000010c4c49bf: mov    %rdx,0x68(%rsp)
  0x000000010c4c49c4: mov    %rbx,0x60(%rsp)
  0x000000010c4c49c9: mov    %rbp,0x50(%rsp)
  0x000000010c4c49ce: mov    %rsi,0x48(%rsp)
  0x000000010c4c49d3: mov    %rdi,0x40(%rsp)
  0x000000010c4c49d8: mov    %r8,0x38(%rsp)
  0x000000010c4c49dd: mov    %r9,0x30(%rsp)
  0x000000010c4c49e2: mov    %r10,0x28(%rsp)
  0x000000010c4c49e7: mov    %r11,0x20(%rsp)
  0x000000010c4c49ec: mov    %r12,0x18(%rsp)
  0x000000010c4c49f1: mov    %r13,0x10(%rsp)
  0x000000010c4c49f6: mov    %r14,0x8(%rsp)
  0x000000010c4c49fb: mov    %r15,(%rsp)
  0x000000010c4c49ff: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c4a09: movabs $0x10c4c49a9,%rsi  ;   {internal_word}
  0x000000010c4c4a13: mov    %rsp,%rdx
  0x000000010c4c4a16: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c4a1a: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c4a1f: hlt    
[Deopt Handler Code]
  0x000000010c4c4a20: movabs $0x10c4c4a20,%r10  ;   {section_word}
  0x000000010c4c4a2a: push   %r10
  0x000000010c4c4a2c: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c4a31: hlt    
  0x000000010c4c4a32: hlt    
  0x000000010c4c4a33: hlt    
  0x000000010c4c4a34: hlt    
  0x000000010c4c4a35: hlt    
  0x000000010c4c4a36: hlt    
  0x000000010c4c4a37: hlt    
Decoding compiled method 0x000000010c4c6dd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder'
  # this:     rsi:rsi   = 'sun/nio/cs/UTF_8$Encoder'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = '[B'
  #           [sp+0x90]  (sp of caller)
  0x000000010c4c6fc0: mov    0x8(%rsi),%r10d
  0x000000010c4c6fc4: shl    $0x3,%r10
  0x000000010c4c6fc8: cmp    %rax,%r10
  0x000000010c4c6fcb: jne    0x000000010c3ece20  ;   {runtime_call}
  0x000000010c4c6fd1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010c4c6fdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010c4c6fe0: mov    %eax,-0x14000(%rsp)
  0x000000010c4c6fe7: push   %rbp
  0x000000010c4c6fe8: sub    $0x80,%rsp
  0x000000010c4c6fef: mov    %rsi,0x48(%rsp)
  0x000000010c4c6ff4: mov    %rdx,0x60(%rsp)
  0x000000010c4c6ff9: mov    %r9,0x70(%rsp)
  0x000000010c4c6ffe: movabs $0x124f3b370,%rax  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7008: mov    0xdc(%rax),%edi
  0x000000010c4c700e: add    $0x8,%edi
  0x000000010c4c7011: mov    %edi,0xdc(%rax)
  0x000000010c4c7017: movabs $0x124e0ca10,%rax  ;   {metadata({method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7021: and    $0x1ff8,%edi
  0x000000010c4c7027: cmp    $0x0,%edi
  0x000000010c4c702a: je     0x000000010c4c78bd  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x000000010c4c7030: mov    %rcx,%rdi
  0x000000010c4c7033: add    %r8d,%edi
  0x000000010c4c7036: mov    %edi,0x68(%rsp)
  0x000000010c4c703a: mov    0xc(%r9),%eax      ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x000000010c4c78d4
  0x000000010c4c703e: movabs $0x124f3b370,%rbx  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7048: addq   $0x1,0x108(%rbx)
  0x000000010c4c7050: movabs $0x124e86ce8,%rbx  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c705a: mov    0xdc(%rbx),%r11d
  0x000000010c4c7061: add    $0x8,%r11d
  0x000000010c4c7065: mov    %r11d,0xdc(%rbx)
  0x000000010c4c706c: movabs $0x124db37a8,%rbx  ;   {metadata({method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c7076: and    $0x7ffff8,%r11d
  0x000000010c4c707d: cmp    $0x0,%r11d
  0x000000010c4c7081: je     0x000000010c4c78d9
  0x000000010c4c7087: cmp    %eax,%r8d
  0x000000010c4c708a: movabs $0x124e86ce8,%rbx  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c7094: movabs $0x108,%r11
  0x000000010c4c709e: jg     0x000000010c4c70ae
  0x000000010c4c70a4: movabs $0x118,%r11
  0x000000010c4c70ae: mov    (%rbx,%r11,1),%r13
  0x000000010c4c70b2: lea    0x1(%r13),%r13
  0x000000010c4c70b6: mov    %r13,(%rbx,%r11,1)
  0x000000010c4c70ba: jg     0x000000010c4c70d5  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010c4c70c0: movabs $0x124e86ce8,%rax  ;   {metadata(method data for {method} {0x0000000124db37a8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010c4c70ca: incl   0x128(%rax)
  0x000000010c4c70d0: jmpq   0x000000010c4c70d8  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010c4c70d5: mov    %rax,%r8           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010c4c70d8: mov    $0x0,%eax
  0x000000010c4c70dd: jmpq   0x000000010c4c719a  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000010c4c70e2: nopw   0x0(%rax,%rax,1)
  0x000000010c4c70e8: movslq %ecx,%rbx
  0x000000010c4c70eb: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x000000010c4c78f0
  0x000000010c4c70ee: jae    0x000000010c4c78fa
  0x000000010c4c70f4: movzwl 0x10(%rdx,%rbx,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010c4c70f9: cmp    $0x80,%ebx
  0x000000010c4c70ff: movabs $0x124f3b370,%r11  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7109: movabs $0x138,%r13
  0x000000010c4c7113: jge    0x000000010c4c7123
  0x000000010c4c7119: movabs $0x148,%r13
  0x000000010c4c7123: mov    (%r11,%r13,1),%r14
  0x000000010c4c7127: lea    0x1(%r14),%r14
  0x000000010c4c712b: mov    %r14,(%r11,%r13,1)
  0x000000010c4c712f: jge    0x000000010c4c71d8  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010c4c7135: mov    %rax,%r11
  0x000000010c4c7138: inc    %r11d
  0x000000010c4c713b: inc    %ecx
  0x000000010c4c713d: movslq %eax,%r13
  0x000000010c4c7140: cmp    0xc(%r9),%eax
  0x000000010c4c7144: jae    0x000000010c4c7903
  0x000000010c4c714a: mov    %bl,0x10(%r9,%r13,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010c4c714f: movabs $0x124f3b370,%rax  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7159: mov    0xe0(%rax),%ebx
  0x000000010c4c715f: add    $0x8,%ebx
  0x000000010c4c7162: mov    %ebx,0xe0(%rax)
  0x000000010c4c7168: movabs $0x124e0ca10,%rax  ;   {metadata({method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7172: and    $0xfff8,%ebx
  0x000000010c4c7178: cmp    $0x0,%ebx
  0x000000010c4c717b: je     0x000000010c4c790c  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=449}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000010c4c7181: test   %eax,-0x219b087(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4c7187: movabs $0x124f3b370,%rax  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7191: incl   0x158(%rax)
  0x000000010c4c7197: mov    %r11,%rax          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000010c4c719a: cmp    %r8d,%eax
  0x000000010c4c719d: movabs $0x124f3b370,%rbx  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c71a7: movabs $0x118,%r11
  0x000000010c4c71b1: jge    0x000000010c4c71c1
  0x000000010c4c71b7: movabs $0x128,%r11
  0x000000010c4c71c1: mov    (%rbx,%r11,1),%r13
  0x000000010c4c71c5: lea    0x1(%r13),%r13
  0x000000010c4c71c9: mov    %r13,(%rbx,%r11,1)
  0x000000010c4c71cd: jl     0x000000010c4c70e8  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010c4c71d3: nopl   0x0(%rax,%rax,1)
  0x000000010c4c71d8: cmp    %edi,%ecx
  0x000000010c4c71da: movabs $0x124f3b370,%rbx  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c71e4: movabs $0x170,%r8
  0x000000010c4c71ee: jge    0x000000010c4c71fe
  0x000000010c4c71f4: movabs $0x180,%r8
  0x000000010c4c71fe: mov    (%rbx,%r8,1),%r11
  0x000000010c4c7202: lea    0x1(%r11),%r11
  0x000000010c4c7206: mov    %r11,(%rbx,%r8,1)
  0x000000010c4c720a: jge    0x000000010c4c78a8  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x000000010c4c7210: mov    %rcx,%rbx
  0x000000010c4c7213: inc    %ebx
  0x000000010c4c7215: movslq %ecx,%r8
  0x000000010c4c7218: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x000000010c4c7923
  0x000000010c4c721b: jae    0x000000010c4c792d
  0x000000010c4c7221: movzwl 0x10(%rdx,%r8,2),%ecx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x000000010c4c7227: cmp    $0x80,%ecx
  0x000000010c4c722d: movabs $0x124f3b370,%r8   ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7237: movabs $0x190,%r11
  0x000000010c4c7241: jge    0x000000010c4c7251
  0x000000010c4c7247: movabs $0x1a0,%r11
  0x000000010c4c7251: mov    (%r8,%r11,1),%r13
  0x000000010c4c7255: lea    0x1(%r13),%r13
  0x000000010c4c7259: mov    %r13,(%r8,%r11,1)
  0x000000010c4c725d: jge    0x000000010c4c7290  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x000000010c4c7263: mov    %rax,%r8
  0x000000010c4c7266: inc    %r8d
  0x000000010c4c7269: movslq %eax,%r11
  0x000000010c4c726c: cmp    0xc(%r9),%eax
  0x000000010c4c7270: jae    0x000000010c4c7936
  0x000000010c4c7276: mov    %cl,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x000000010c4c727b: movabs $0x124f3b370,%rax  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7285: incl   0x1b0(%rax)
  0x000000010c4c728b: jmpq   0x000000010c4c7835  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x000000010c4c7290: cmp    $0x800,%ecx
  0x000000010c4c7296: movabs $0x124f3b370,%r8   ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c72a0: movabs $0x1c8,%r11
  0x000000010c4c72aa: jge    0x000000010c4c72ba
  0x000000010c4c72b0: movabs $0x1d8,%r11
  0x000000010c4c72ba: mov    (%r8,%r11,1),%r13
  0x000000010c4c72be: lea    0x1(%r13),%r13
  0x000000010c4c72c2: mov    %r13,(%r8,%r11,1)
  0x000000010c4c72c6: jge    0x000000010c4c7324  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x000000010c4c72cc: mov    %rcx,%r8
  0x000000010c4c72cf: sar    $0x6,%r8d
  0x000000010c4c72d3: or     $0xc0,%r8d
  0x000000010c4c72da: movslq %eax,%r11
  0x000000010c4c72dd: cmp    0xc(%r9),%eax
  0x000000010c4c72e1: jae    0x000000010c4c793f
  0x000000010c4c72e7: mov    %r8b,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x000000010c4c72ec: inc    %eax
  0x000000010c4c72ee: mov    %rax,%r8
  0x000000010c4c72f1: inc    %r8d
  0x000000010c4c72f4: and    $0x3f,%ecx
  0x000000010c4c72f7: or     $0x80,%ecx
  0x000000010c4c72fd: movslq %eax,%r11
  0x000000010c4c7300: cmp    0xc(%r9),%eax
  0x000000010c4c7304: jae    0x000000010c4c7948
  0x000000010c4c730a: mov    %cl,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x000000010c4c730f: movabs $0x124f3b370,%rax  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7319: incl   0x1e8(%rax)
  0x000000010c4c731f: jmpq   0x000000010c4c7835  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x000000010c4c7324: movabs $0x124f3b370,%r8   ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c732e: addq   $0x1,0x200(%r8)
  0x000000010c4c7336: movabs $0x124f3b738,%r8   ;   {metadata(method data for {method} {0x0000000124d56fa8} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010c4c7340: mov    0xdc(%r8),%r11d
  0x000000010c4c7347: add    $0x8,%r11d
  0x000000010c4c734b: mov    %r11d,0xdc(%r8)
  0x000000010c4c7352: movabs $0x124d56fa8,%r8   ;   {metadata({method} {0x0000000124d56fa8} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010c4c735c: and    $0x7ffff8,%r11d
  0x000000010c4c7363: cmp    $0x0,%r11d
  0x000000010c4c7367: je     0x000000010c4c7951
  0x000000010c4c736d: cmp    $0xd800,%ecx
  0x000000010c4c7373: movabs $0x124f3b738,%r8   ;   {metadata(method data for {method} {0x0000000124d56fa8} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010c4c737d: movabs $0x108,%r11
  0x000000010c4c7387: jl     0x000000010c4c7397
  0x000000010c4c738d: movabs $0x118,%r11
  0x000000010c4c7397: mov    (%r8,%r11,1),%r13
  0x000000010c4c739b: lea    0x1(%r13),%r13
  0x000000010c4c739f: mov    %r13,(%r8,%r11,1)
  0x000000010c4c73a3: jl     0x000000010c4c73e5  ;*if_icmplt
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010c4c73a9: cmp    $0xe000,%ecx
  0x000000010c4c73af: movabs $0x124f3b738,%r8   ;   {metadata(method data for {method} {0x0000000124d56fa8} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010c4c73b9: movabs $0x128,%r11
  0x000000010c4c73c3: jge    0x000000010c4c73d3
  0x000000010c4c73c9: movabs $0x138,%r11
  0x000000010c4c73d3: mov    (%r8,%r11,1),%r13
  0x000000010c4c73d7: lea    0x1(%r13),%r13
  0x000000010c4c73db: mov    %r13,(%r8,%r11,1)
  0x000000010c4c73df: jl     0x000000010c4c73f0  ;*if_icmpge
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010c4c73e5: mov    $0x0,%r8d
  0x000000010c4c73eb: jmpq   0x000000010c4c7407  ;*ireturn
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010c4c73f0: movabs $0x124f3b738,%r8   ;   {metadata(method data for {method} {0x0000000124d56fa8} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010c4c73fa: incl   0x148(%r8)
  0x000000010c4c7401: mov    $0x1,%r8d          ;*goto
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010c4c7407: and    $0x1,%r8d
  0x000000010c4c740b: cmp    $0x0,%r8d
  0x000000010c4c740f: movabs $0x124f3b370,%r8   ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7419: movabs $0x210,%r11
  0x000000010c4c7423: je     0x000000010c4c7433
  0x000000010c4c7429: movabs $0x220,%r11
  0x000000010c4c7433: mov    (%r8,%r11,1),%r13
  0x000000010c4c7437: lea    0x1(%r13),%r13
  0x000000010c4c743b: mov    %r13,(%r8,%r11,1)
  0x000000010c4c743f: je     0x000000010c4c77c9  ;*ifeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x000000010c4c7445: mov    0x30(%rsi),%r8d
  0x000000010c4c7449: shl    $0x3,%r8           ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x000000010c4c744d: cmp    $0x0,%r8
  0x000000010c4c7451: movabs $0x124f3b370,%r8   ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c745b: movabs $0x230,%r11
  0x000000010c4c7465: jne    0x000000010c4c7475
  0x000000010c4c746b: movabs $0x240,%r11
  0x000000010c4c7475: mov    (%r8,%r11,1),%r13
  0x000000010c4c7479: lea    0x1(%r13),%r13
  0x000000010c4c747d: mov    %r13,(%r8,%r11,1)
  0x000000010c4c7481: mov    %ecx,0x5c(%rsp)
  0x000000010c4c7485: mov    %ebx,0x58(%rsp)
  0x000000010c4c7489: mov    %eax,0x6c(%rsp)
  0x000000010c4c748d: jne    0x000000010c4c74f6  ;*ifnonnull
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x000000010c4c7493: nopl   0x0(%rax,%rax,1)
  0x000000010c4c7498: jmpq   0x000000010c4c7977  ;   {no_reloc}
  0x000000010c4c749d: add    %al,(%rax)
  0x000000010c4c749f: add    %al,(%rax)
  0x000000010c4c74a1: add    %ch,%cl
  0x000000010c4c74a3: fiaddl (%rax,%rax,1)
  0x000000010c4c74a6: add    %cl,-0x75(%rax)    ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x000000010c4c74a9: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c74ac: jo     0x000000010c4c7461
  0x000000010c4c74ae: repz and $0x1,%al
  0x000000010c4c74b1: add    %al,(%rax)
  0x000000010c4c74b3: add    %cl,-0x7d(%rcx)
  0x000000010c4c74b6: test   %edx,0x2(%rax)
  0x000000010c4c74b9: add    %al,(%rax)
  0x000000010c4c74bb: add    %ecx,-0x75(%rax)
  0x000000010c4c74be: lock mov %rax,0x50(%rsp)  ;*invokespecial <init>
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x000000010c4c74c4: nop
  0x000000010c4c74c5: nop
  0x000000010c4c74c6: nop
  0x000000010c4c74c7: callq  0x000000010c3ed020  ; OopMap{[72]=Oop [80]=Oop [96]=Oop [112]=Oop off=1292}
                                                ;*invokespecial <init>
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x000000010c4c74cc: mov    0x48(%rsp),%rsi
  0x000000010c4c74d1: mov    0x50(%rsp),%rax
  0x000000010c4c74d6: mov    %rax,%r10
  0x000000010c4c74d9: shr    $0x3,%r10
  0x000000010c4c74dd: mov    %r10d,0x30(%rsi)
  0x000000010c4c74e1: mov    %rsi,%rdx
  0x000000010c4c74e4: shr    $0x9,%rdx
  0x000000010c4c74e8: movabs $0x118167000,%rcx
  0x000000010c4c74f2: movb   $0x0,(%rdx,%rcx,1)  ;*putfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x000000010c4c74f6: mov    0x30(%rsi),%edi
  0x000000010c4c74f9: shl    $0x3,%rdi          ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x000000010c4c74fd: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010c4c798e
  0x000000010c4c7500: mov    %rdi,%rdx
  0x000000010c4c7503: movabs $0x124f3b370,%rcx  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c750d: mov    0x8(%rdx),%edx
  0x000000010c4c7510: shl    $0x3,%rdx
  0x000000010c4c7514: cmp    0x268(%rcx),%rdx
  0x000000010c4c751b: jne    0x000000010c4c752a
  0x000000010c4c751d: addq   $0x1,0x270(%rcx)
  0x000000010c4c7525: jmpq   0x000000010c4c7590
  0x000000010c4c752a: cmp    0x278(%rcx),%rdx
  0x000000010c4c7531: jne    0x000000010c4c7540
  0x000000010c4c7533: addq   $0x1,0x280(%rcx)
  0x000000010c4c753b: jmpq   0x000000010c4c7590
  0x000000010c4c7540: cmpq   $0x0,0x268(%rcx)
  0x000000010c4c754b: jne    0x000000010c4c7564
  0x000000010c4c754d: mov    %rdx,0x268(%rcx)
  0x000000010c4c7554: movq   $0x1,0x270(%rcx)
  0x000000010c4c755f: jmpq   0x000000010c4c7590
  0x000000010c4c7564: cmpq   $0x0,0x278(%rcx)
  0x000000010c4c756f: jne    0x000000010c4c7588
  0x000000010c4c7571: mov    %rdx,0x278(%rcx)
  0x000000010c4c7578: movq   $0x1,0x280(%rcx)
  0x000000010c4c7583: jmpq   0x000000010c4c7590
  0x000000010c4c7588: addq   $0x1,0x260(%rcx)
  0x000000010c4c7590: mov    0x58(%rsp),%ebx
  0x000000010c4c7594: dec    %ebx
  0x000000010c4c7596: mov    0x5c(%rsp),%edx
  0x000000010c4c759a: mov    0x60(%rsp),%rcx
  0x000000010c4c759f: mov    %rbx,%r8
  0x000000010c4c75a2: mov    0x68(%rsp),%r9d
  0x000000010c4c75a7: mov    %rdi,%rsi          ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x000000010c4c75aa: nop
  0x000000010c4c75ab: nop
  0x000000010c4c75ac: nop
  0x000000010c4c75ad: movabs $0xffffffffffffffff,%rax
  0x000000010c4c75b7: callq  0x000000010c3ed220  ; OopMap{[96]=Oop [112]=Oop [72]=Oop off=1532}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x000000010c4c75bc: cmp    $0x0,%eax
  0x000000010c4c75bf: movabs $0x124f3b370,%rsi  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c75c9: movabs $0x290,%rdi
  0x000000010c4c75d3: jge    0x000000010c4c75e3
  0x000000010c4c75d9: movabs $0x2a0,%rdi
  0x000000010c4c75e3: mov    (%rsi,%rdi,1),%rbx
  0x000000010c4c75e7: lea    0x1(%rbx),%rbx
  0x000000010c4c75eb: mov    %rbx,(%rsi,%rdi,1)
  0x000000010c4c75ef: jge    0x000000010c4c7711  ;*ifge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x000000010c4c75f5: mov    0x48(%rsp),%rsi
  0x000000010c4c75fa: mov    %rsi,%rax
  0x000000010c4c75fd: movabs $0x124f3b370,%rdi  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7607: mov    0x8(%rax),%eax
  0x000000010c4c760a: shl    $0x3,%rax
  0x000000010c4c760e: cmp    0x2b8(%rdi),%rax
  0x000000010c4c7615: jne    0x000000010c4c7624
  0x000000010c4c7617: addq   $0x1,0x2c0(%rdi)
  0x000000010c4c761f: jmpq   0x000000010c4c768a
  0x000000010c4c7624: cmp    0x2c8(%rdi),%rax
  0x000000010c4c762b: jne    0x000000010c4c763a
  0x000000010c4c762d: addq   $0x1,0x2d0(%rdi)
  0x000000010c4c7635: jmpq   0x000000010c4c768a
  0x000000010c4c763a: cmpq   $0x0,0x2b8(%rdi)
  0x000000010c4c7645: jne    0x000000010c4c765e
  0x000000010c4c7647: mov    %rax,0x2b8(%rdi)
  0x000000010c4c764e: movq   $0x1,0x2c0(%rdi)
  0x000000010c4c7659: jmpq   0x000000010c4c768a
  0x000000010c4c765e: cmpq   $0x0,0x2c8(%rdi)
  0x000000010c4c7669: jne    0x000000010c4c7682
  0x000000010c4c766b: mov    %rax,0x2c8(%rdi)
  0x000000010c4c7672: movq   $0x1,0x2d0(%rdi)
  0x000000010c4c767d: jmpq   0x000000010c4c768a
  0x000000010c4c7682: addq   $0x1,0x2b0(%rdi)
  0x000000010c4c768a: mov    0x20(%rsi),%eax
  0x000000010c4c768d: shl    $0x3,%rax          ;*getfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x000000010c4c7691: movabs $0x76ab16980,%r10  ;   {oop(a 'java/nio/charset/CodingErrorAction')}
  0x000000010c4c769b: cmp    %r10,%rax
  0x000000010c4c769e: movabs $0x124f3b370,%rax  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c76a8: movabs $0x2e0,%rdi
  0x000000010c4c76b2: je     0x000000010c4c76c2
  0x000000010c4c76b8: movabs $0x2f0,%rdi
  0x000000010c4c76c2: mov    (%rax,%rdi,1),%rbx
  0x000000010c4c76c6: lea    0x1(%rbx),%rbx
  0x000000010c4c76ca: mov    %rbx,(%rax,%rdi,1)
  0x000000010c4c76ce: jne    0x000000010c4c7894  ;*if_acmpeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x000000010c4c76d4: mov    0x6c(%rsp),%edi
  0x000000010c4c76d8: mov    0x70(%rsp),%r9
  0x000000010c4c76dd: mov    %rdi,%rax
  0x000000010c4c76e0: inc    %eax
  0x000000010c4c76e2: movsbl 0x2c(%rsi),%ebx    ;*getfield repl
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x000000010c4c76e6: movslq %edi,%rdx
  0x000000010c4c76e9: cmp    0xc(%r9),%edi
  0x000000010c4c76ed: jae    0x000000010c4c7993
  0x000000010c4c76f3: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x000000010c4c76f8: movabs $0x124f3b370,%rdi  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7702: incl   0x300(%rdi)
  0x000000010c4c7708: mov    0x58(%rsp),%ebx
  0x000000010c4c770c: jmpq   0x000000010c4c77b1  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x000000010c4c7711: mov    0x6c(%rsp),%edi
  0x000000010c4c7715: mov    0x70(%rsp),%r9
  0x000000010c4c771a: mov    0x48(%rsp),%rsi
  0x000000010c4c771f: mov    %rax,%rbx
  0x000000010c4c7722: sar    $0x12,%ebx
  0x000000010c4c7725: or     $0xf0,%ebx
  0x000000010c4c772b: movslq %edi,%rdx
  0x000000010c4c772e: cmp    0xc(%r9),%edi
  0x000000010c4c7732: jae    0x000000010c4c799c
  0x000000010c4c7738: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x000000010c4c773d: inc    %edi
  0x000000010c4c773f: mov    %rax,%rbx
  0x000000010c4c7742: sar    $0xc,%ebx
  0x000000010c4c7745: and    $0x3f,%ebx
  0x000000010c4c7748: or     $0x80,%ebx
  0x000000010c4c774e: movslq %edi,%rdx
  0x000000010c4c7751: cmp    0xc(%r9),%edi
  0x000000010c4c7755: jae    0x000000010c4c79a5
  0x000000010c4c775b: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x000000010c4c7760: inc    %edi
  0x000000010c4c7762: mov    %rax,%rbx
  0x000000010c4c7765: sar    $0x6,%ebx
  0x000000010c4c7768: and    $0x3f,%ebx
  0x000000010c4c776b: or     $0x80,%ebx
  0x000000010c4c7771: movslq %edi,%rdx
  0x000000010c4c7774: cmp    0xc(%r9),%edi
  0x000000010c4c7778: jae    0x000000010c4c79ae
  0x000000010c4c777e: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x000000010c4c7783: inc    %edi
  0x000000010c4c7785: mov    %rdi,%rbx
  0x000000010c4c7788: inc    %ebx
  0x000000010c4c778a: and    $0x3f,%eax
  0x000000010c4c778d: or     $0x80,%eax
  0x000000010c4c7793: movslq %edi,%rdx
  0x000000010c4c7796: cmp    0xc(%r9),%edi
  0x000000010c4c779a: jae    0x000000010c4c79b7
  0x000000010c4c77a0: mov    %al,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x000000010c4c77a5: mov    0x58(%rsp),%edi
  0x000000010c4c77a9: inc    %edi
  0x000000010c4c77ab: mov    %rbx,%rax
  0x000000010c4c77ae: mov    %rdi,%rbx
  0x000000010c4c77b1: movabs $0x124f3b370,%rdi  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c77bb: incl   0x318(%rdi)
  0x000000010c4c77c1: mov    %rax,%r8
  0x000000010c4c77c4: jmpq   0x000000010c4c7835  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x000000010c4c77c9: mov    %rax,%rdi
  0x000000010c4c77cc: mov    %rcx,%rax
  0x000000010c4c77cf: sar    $0xc,%eax
  0x000000010c4c77d2: or     $0xe0,%eax
  0x000000010c4c77d8: movslq %edi,%rdx
  0x000000010c4c77db: cmp    0xc(%r9),%edi
  0x000000010c4c77df: jae    0x000000010c4c79c0
  0x000000010c4c77e5: mov    %al,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x000000010c4c77ea: mov    %rdi,%rax
  0x000000010c4c77ed: inc    %eax
  0x000000010c4c77ef: mov    %rcx,%rdi
  0x000000010c4c77f2: sar    $0x6,%edi
  0x000000010c4c77f5: and    $0x3f,%edi
  0x000000010c4c77f8: or     $0x80,%edi
  0x000000010c4c77fe: movslq %eax,%rdx
  0x000000010c4c7801: cmp    0xc(%r9),%eax
  0x000000010c4c7805: jae    0x000000010c4c79c9
  0x000000010c4c780b: mov    %dil,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x000000010c4c7810: inc    %eax
  0x000000010c4c7812: mov    %rax,%rdi
  0x000000010c4c7815: inc    %edi
  0x000000010c4c7817: and    $0x3f,%ecx
  0x000000010c4c781a: or     $0x80,%ecx
  0x000000010c4c7820: movslq %eax,%rdx
  0x000000010c4c7823: cmp    0xc(%r9),%eax
  0x000000010c4c7827: jae    0x000000010c4c79d2
  0x000000010c4c782d: mov    %cl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x000000010c4c7832: mov    %rdi,%r8           ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000010c4c7835: movabs $0x124f3b370,%rax  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c783f: mov    0xe0(%rax),%edi
  0x000000010c4c7845: add    $0x8,%edi
  0x000000010c4c7848: mov    %edi,0xe0(%rax)
  0x000000010c4c784e: movabs $0x124e0ca10,%rax  ;   {metadata({method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7858: and    $0xfff8,%edi
  0x000000010c4c785e: cmp    $0x0,%edi
  0x000000010c4c7861: je     0x000000010c4c79db  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2215}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000010c4c7867: test   %eax,-0x219b76d(%rip)        # 0x000000010a32c100
                                                ;   {poll}
  0x000000010c4c786d: movabs $0x124f3b370,%rax  ;   {metadata(method data for {method} {0x0000000124e0ca10} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010c4c7877: incl   0x330(%rax)
  0x000000010c4c787d: mov    %r8,%rdi
  0x000000010c4c7880: mov    %rbx,%rcx
  0x000000010c4c7883: mov    %rdi,%rax
  0x000000010c4c7886: mov    0x68(%rsp),%edi
  0x000000010c4c788a: mov    0x60(%rsp),%rdx
  0x000000010c4c788f: jmpq   0x000000010c4c71d8  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000010c4c7894: mov    $0xffffffff,%eax
  0x000000010c4c7899: add    $0x80,%rsp
  0x000000010c4c78a0: pop    %rbp
  0x000000010c4c78a1: test   %eax,-0x219b7a7(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c78a7: retq                      ;*ireturn
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x000000010c4c78a8: mov    %rax,%rdi
  0x000000010c4c78ab: mov    %rdi,%rax
  0x000000010c4c78ae: add    $0x80,%rsp
  0x000000010c4c78b5: pop    %rbp
  0x000000010c4c78b6: test   %eax,-0x219b7bc(%rip)        # 0x000000010a32c100
                                                ;   {poll_return}
  0x000000010c4c78bc: retq   
  0x000000010c4c78bd: mov    %rax,0x8(%rsp)
  0x000000010c4c78c2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c78ca: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2319}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x000000010c4c78cf: jmpq   0x000000010c4c7030
  0x000000010c4c78d4: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2329}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x000000010c4c78d9: mov    %rbx,0x8(%rsp)
  0x000000010c4c78de: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c78e6: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2347}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x000000010c4c78eb: jmpq   0x000000010c4c7087
  0x000000010c4c78f0: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2357}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010c4c78f5: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2362}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010c4c78fa: mov    %rcx,(%rsp)
  0x000000010c4c78fe: callq  0x000000010c413000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2371}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010c4c7903: mov    %rax,(%rsp)
  0x000000010c4c7907: callq  0x000000010c413000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2380}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010c4c790c: mov    %rax,0x8(%rsp)
  0x000000010c4c7911: movq   $0x33,(%rsp)
  0x000000010c4c7919: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2398}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x000000010c4c791e: jmpq   0x000000010c4c7181
  0x000000010c4c7923: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2408}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000010c4c7928: callq  0x000000010c4a0a40  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2413}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000010c4c792d: mov    %rcx,(%rsp)
  0x000000010c4c7931: callq  0x000000010c413000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2422}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000010c4c7936: mov    %rax,(%rsp)
  0x000000010c4c793a: callq  0x000000010c413000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2431}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x000000010c4c793f: mov    %rax,(%rsp)
  0x000000010c4c7943: callq  0x000000010c413000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2440}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x000000010c4c7948: mov    %rax,(%rsp)
  0x000000010c4c794c: callq  0x000000010c413000  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2449}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x000000010c4c7951: mov    %r8,0x8(%rsp)
  0x000000010c4c7956: movq   $0xffffffffffffffff,(%rsp)
  0x000000010c4c795e: callq  0x000000010c4a4f60  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2467}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x000000010c4c7963: jmpq   0x000000010c4c736d
  0x000000010c4c7968: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010c4c7972: mov    $0xa050f00,%eax
  0x000000010c4c7977: callq  0x000000010c4a3f60  ; OopMap{[72]=Oop [112]=Oop [96]=Oop off=2492}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000010c4c797c: jmpq   0x000000010c4c7498
  0x000000010c4c7981: mov    %rdx,%rdx
  0x000000010c4c7984: callq  0x000000010c4a0ee0  ; OopMap{[72]=Oop [112]=Oop [96]=Oop off=2505}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000010c4c7989: jmpq   0x000000010c4c74a7
  0x000000010c4c798e: callq  0x000000010c4a0a40  ; OopMap{[96]=Oop [112]=Oop rsi=Oop [72]=Oop rdi=Oop off=2515}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x000000010c4c7993: mov    %rdi,(%rsp)
  0x000000010c4c7997: callq  0x000000010c413000  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2524}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x000000010c4c799c: mov    %rdi,(%rsp)
  0x000000010c4c79a0: callq  0x000000010c413000  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2533}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x000000010c4c79a5: mov    %rdi,(%rsp)
  0x000000010c4c79a9: callq  0x000000010c413000  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2542}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x000000010c4c79ae: mov    %rdi,(%rsp)
  0x000000010c4c79b2: callq  0x000000010c413000  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2551}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x000000010c4c79b7: mov    %rdi,(%rsp)
  0x000000010c4c79bb: callq  0x000000010c413000  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2560}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x000000010c4c79c0: mov    %rdi,(%rsp)
  0x000000010c4c79c4: callq  0x000000010c413000  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2569}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x000000010c4c79c9: mov    %rax,(%rsp)
  0x000000010c4c79cd: callq  0x000000010c413000  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2578}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x000000010c4c79d2: mov    %rax,(%rsp)
  0x000000010c4c79d6: callq  0x000000010c413000  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2587}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x000000010c4c79db: mov    %rax,0x8(%rsp)
  0x000000010c4c79e0: movq   $0x161,(%rsp)
  0x000000010c4c79e8: callq  0x000000010c4a4f60  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2605}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x000000010c4c79ed: jmpq   0x000000010c4c7867
  0x000000010c4c79f2: nop
  0x000000010c4c79f3: nop
  0x000000010c4c79f4: mov    0x2a8(%r15),%rax
  0x000000010c4c79fb: movabs $0x0,%r10
  0x000000010c4c7a05: mov    %r10,0x2a8(%r15)
  0x000000010c4c7a0c: movabs $0x0,%r10
  0x000000010c4c7a16: mov    %r10,0x2b0(%r15)
  0x000000010c4c7a1d: add    $0x80,%rsp
  0x000000010c4c7a24: pop    %rbp
  0x000000010c4c7a25: jmpq   0x000000010c4134a0  ;   {runtime_call}
  0x000000010c4c7a2a: hlt    
  0x000000010c4c7a2b: hlt    
  0x000000010c4c7a2c: hlt    
  0x000000010c4c7a2d: hlt    
  0x000000010c4c7a2e: hlt    
  0x000000010c4c7a2f: hlt    
  0x000000010c4c7a30: hlt    
  0x000000010c4c7a31: hlt    
  0x000000010c4c7a32: hlt    
  0x000000010c4c7a33: hlt    
  0x000000010c4c7a34: hlt    
  0x000000010c4c7a35: hlt    
  0x000000010c4c7a36: hlt    
  0x000000010c4c7a37: hlt    
  0x000000010c4c7a38: hlt    
  0x000000010c4c7a39: hlt    
  0x000000010c4c7a3a: hlt    
  0x000000010c4c7a3b: hlt    
  0x000000010c4c7a3c: hlt    
  0x000000010c4c7a3d: hlt    
  0x000000010c4c7a3e: hlt    
  0x000000010c4c7a3f: hlt    
[Stub Code]
  0x000000010c4c7a40: nop                       ;   {no_reloc}
  0x000000010c4c7a41: nop
  0x000000010c4c7a42: nop
  0x000000010c4c7a43: nop
  0x000000010c4c7a44: nop
  0x000000010c4c7a45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c7a4f: jmpq   0x000000010c4c7a4f  ;   {runtime_call}
  0x000000010c4c7a54: nop
  0x000000010c4c7a55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010c4c7a5f: jmpq   0x000000010c4c7a5f  ;   {runtime_call}
[Exception Handler]
  0x000000010c4c7a64: callq  0x000000010c4a28e0  ;   {runtime_call}
  0x000000010c4c7a69: mov    %rsp,-0x28(%rsp)
  0x000000010c4c7a6e: sub    $0x80,%rsp
  0x000000010c4c7a75: mov    %rax,0x78(%rsp)
  0x000000010c4c7a7a: mov    %rcx,0x70(%rsp)
  0x000000010c4c7a7f: mov    %rdx,0x68(%rsp)
  0x000000010c4c7a84: mov    %rbx,0x60(%rsp)
  0x000000010c4c7a89: mov    %rbp,0x50(%rsp)
  0x000000010c4c7a8e: mov    %rsi,0x48(%rsp)
  0x000000010c4c7a93: mov    %rdi,0x40(%rsp)
  0x000000010c4c7a98: mov    %r8,0x38(%rsp)
  0x000000010c4c7a9d: mov    %r9,0x30(%rsp)
  0x000000010c4c7aa2: mov    %r10,0x28(%rsp)
  0x000000010c4c7aa7: mov    %r11,0x20(%rsp)
  0x000000010c4c7aac: mov    %r12,0x18(%rsp)
  0x000000010c4c7ab1: mov    %r13,0x10(%rsp)
  0x000000010c4c7ab6: mov    %r14,0x8(%rsp)
  0x000000010c4c7abb: mov    %r15,(%rsp)
  0x000000010c4c7abf: movabs $0x10b9d96ff,%rdi  ;   {external_word}
  0x000000010c4c7ac9: movabs $0x10c4c7a69,%rsi  ;   {internal_word}
  0x000000010c4c7ad3: mov    %rsp,%rdx
  0x000000010c4c7ad6: and    $0xfffffffffffffff0,%rsp
  0x000000010c4c7ada: callq  0x000000010b80490a  ;   {runtime_call}
  0x000000010c4c7adf: hlt    
[Deopt Handler Code]
  0x000000010c4c7ae0: movabs $0x10c4c7ae0,%r10  ;   {section_word}
  0x000000010c4c7aea: push   %r10
  0x000000010c4c7aec: jmpq   0x000000010c3ee3c0  ;   {runtime_call}
  0x000000010c4c7af1: hlt    
  0x000000010c4c7af2: hlt    
  0x000000010c4c7af3: hlt    
  0x000000010c4c7af4: hlt    
  0x000000010c4c7af5: hlt    
  0x000000010c4c7af6: hlt    
  0x000000010c4c7af7: hlt    
